if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/widget-position-constrain/widget-position-constrain.js']) {
   __coverage__['build/widget-position-constrain/widget-position-constrain.js'] = {"path":"build/widget-position-constrain/widget-position-constrain.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":37},"end":{"line":1,"column":56}}},"2":{"name":"PositionConstrain","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":35}}},"3":{"name":"(anonymous_3)","line":118,"loc":{"start":{"line":118,"column":23},"end":{"line":118,"column":42}}},"4":{"name":"(anonymous_4)","line":140,"loc":{"start":{"line":140,"column":16},"end":{"line":140,"column":35}}},"5":{"name":"(anonymous_5)","line":162,"loc":{"start":{"line":162,"column":20},"end":{"line":162,"column":34}}},"6":{"name":"(anonymous_6)","line":180,"loc":{"start":{"line":180,"column":16},"end":{"line":180,"column":68}}},"7":{"name":"(anonymous_7)","line":224,"loc":{"start":{"line":224,"column":22},"end":{"line":224,"column":74}}},"8":{"name":"(anonymous_8)","line":272,"loc":{"start":{"line":272,"column":28},"end":{"line":272,"column":39}}},"9":{"name":"(anonymous_9)","line":285,"loc":{"start":{"line":285,"column":28},"end":{"line":285,"column":40}}},"10":{"name":"(anonymous_10)","line":297,"loc":{"start":{"line":297,"column":25},"end":{"line":297,"column":42}}},"11":{"name":"(anonymous_11)","line":315,"loc":{"start":{"line":315,"column":27},"end":{"line":315,"column":39}}},"12":{"name":"(anonymous_12)","line":329,"loc":{"start":{"line":329,"column":17},"end":{"line":329,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":346,"column":51}},"2":{"start":{"line":10,"column":0},"end":{"line":30,"column":24}},"3":{"start":{"line":41,"column":0},"end":{"line":46,"column":1}},"4":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"5":{"start":{"line":43,"column":8},"end":{"line":43,"column":107}},"6":{"start":{"line":45,"column":4},"end":{"line":45,"column":54}},"7":{"start":{"line":56,"column":0},"end":{"line":81,"column":2}},"8":{"start":{"line":91,"column":0},"end":{"line":104,"column":2}},"9":{"start":{"line":106,"column":0},"end":{"line":341,"column":2}},"10":{"start":{"line":119,"column":8},"end":{"line":119,"column":43}},"11":{"start":{"line":121,"column":8},"end":{"line":122,"column":51}},"12":{"start":{"line":124,"column":8},"end":{"line":127,"column":10}},"13":{"start":{"line":141,"column":8},"end":{"line":143,"column":53}},"14":{"start":{"line":145,"column":8},"end":{"line":152,"column":9}},"15":{"start":{"line":146,"column":12},"end":{"line":146,"column":43}},"16":{"start":{"line":147,"column":12},"end":{"line":147,"column":73}},"17":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"18":{"start":{"line":150,"column":16},"end":{"line":150,"column":66}},"19":{"start":{"line":163,"column":8},"end":{"line":163,"column":52}},"20":{"start":{"line":181,"column":8},"end":{"line":205,"column":9}},"21":{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},"22":{"start":{"line":184,"column":16},"end":{"line":184,"column":86}},"23":{"start":{"line":187,"column":12},"end":{"line":192,"column":113}},"24":{"start":{"line":194,"column":12},"end":{"line":204,"column":13}},"25":{"start":{"line":195,"column":16},"end":{"line":203,"column":17}},"26":{"start":{"line":196,"column":20},"end":{"line":200,"column":21}},"27":{"start":{"line":197,"column":24},"end":{"line":197,"column":44}},"28":{"start":{"line":198,"column":27},"end":{"line":200,"column":21}},"29":{"start":{"line":199,"column":24},"end":{"line":199,"column":44}},"30":{"start":{"line":202,"column":20},"end":{"line":202,"column":40}},"31":{"start":{"line":207,"column":8},"end":{"line":207,"column":19}},"32":{"start":{"line":226,"column":8},"end":{"line":233,"column":27}},"33":{"start":{"line":235,"column":8},"end":{"line":256,"column":9}},"34":{"start":{"line":237,"column":12},"end":{"line":237,"column":54}},"35":{"start":{"line":239,"column":12},"end":{"line":245,"column":13}},"36":{"start":{"line":240,"column":16},"end":{"line":240,"column":77}},"37":{"start":{"line":241,"column":16},"end":{"line":241,"column":75}},"38":{"start":{"line":242,"column":16},"end":{"line":242,"column":79}},"39":{"start":{"line":243,"column":16},"end":{"line":243,"column":126}},"40":{"start":{"line":244,"column":16},"end":{"line":244,"column":134}},"41":{"start":{"line":247,"column":12},"end":{"line":255,"column":13}},"42":{"start":{"line":248,"column":16},"end":{"line":250,"column":17}},"43":{"start":{"line":249,"column":20},"end":{"line":249,"column":46}},"44":{"start":{"line":252,"column":16},"end":{"line":254,"column":17}},"45":{"start":{"line":253,"column":20},"end":{"line":253,"column":34}},"46":{"start":{"line":258,"column":8},"end":{"line":258,"column":19}},"47":{"start":{"line":273,"column":8},"end":{"line":273,"column":65}},"48":{"start":{"line":274,"column":8},"end":{"line":274,"column":53}},"49":{"start":{"line":286,"column":8},"end":{"line":286,"column":42}},"50":{"start":{"line":298,"column":8},"end":{"line":304,"column":9}},"51":{"start":{"line":299,"column":12},"end":{"line":299,"column":29}},"52":{"start":{"line":300,"column":12},"end":{"line":300,"column":104}},"53":{"start":{"line":301,"column":15},"end":{"line":304,"column":9}},"54":{"start":{"line":302,"column":12},"end":{"line":302,"column":37}},"55":{"start":{"line":303,"column":12},"end":{"line":303,"column":35}},"56":{"start":{"line":316,"column":8},"end":{"line":318,"column":9}},"57":{"start":{"line":317,"column":12},"end":{"line":317,"column":55}},"58":{"start":{"line":330,"column":8},"end":{"line":330,"column":19}},"59":{"start":{"line":331,"column":8},"end":{"line":338,"column":9}},"60":{"start":{"line":332,"column":12},"end":{"line":332,"column":56}},"61":{"start":{"line":334,"column":12},"end":{"line":334,"column":34}},"62":{"start":{"line":335,"column":12},"end":{"line":337,"column":13}},"63":{"start":{"line":336,"column":16},"end":{"line":336,"column":42}},"64":{"start":{"line":339,"column":8},"end":{"line":339,"column":22}},"65":{"start":{"line":343,"column":0},"end":{"line":343,"column":46}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"2":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":15},"end":{"line":119,"column":19}},{"start":{"line":119,"column":23},"end":{"line":119,"column":42}}]},"3":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":67},"end":{"line":121,"column":71}},{"start":{"line":121,"column":74},"end":{"line":121,"column":78}}]},"4":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":25},"end":{"line":143,"column":29}},{"start":{"line":143,"column":33},"end":{"line":143,"column":52}}]},"5":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8}}]},"6":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":24},"end":{"line":146,"column":26}},{"start":{"line":146,"column":30},"end":{"line":146,"column":42}}]},"7":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":12}},{"start":{"line":149,"column":12},"end":{"line":149,"column":12}}]},"8":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":16},"end":{"line":149,"column":49}},{"start":{"line":149,"column":53},"end":{"line":149,"column":86}}]},"9":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":32},"end":{"line":163,"column":35}},{"start":{"line":163,"column":38},"end":{"line":163,"column":51}}]},"10":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":8},"end":{"line":181,"column":8}},{"start":{"line":181,"column":8},"end":{"line":181,"column":8}}]},"11":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":183,"column":12}},{"start":{"line":183,"column":12},"end":{"line":183,"column":12}}]},"12":{"line":189,"type":"cond-expr","locations":[{"start":{"line":189,"column":38},"end":{"line":189,"column":62}},{"start":{"line":189,"column":65},"end":{"line":189,"column":90}}]},"13":{"line":190,"type":"cond-expr","locations":[{"start":{"line":190,"column":38},"end":{"line":190,"column":54}},{"start":{"line":190,"column":57},"end":{"line":190,"column":74}}]},"14":{"line":191,"type":"cond-expr","locations":[{"start":{"line":191,"column":38},"end":{"line":191,"column":61}},{"start":{"line":191,"column":64},"end":{"line":191,"column":86}}]},"15":{"line":192,"type":"cond-expr","locations":[{"start":{"line":192,"column":38},"end":{"line":192,"column":73}},{"start":{"line":192,"column":76},"end":{"line":192,"column":112}}]},"16":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":12},"end":{"line":194,"column":12}},{"start":{"line":194,"column":12},"end":{"line":194,"column":12}}]},"17":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":16},"end":{"line":194,"column":35}},{"start":{"line":194,"column":39},"end":{"line":194,"column":58}}]},"18":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":16},"end":{"line":195,"column":16}},{"start":{"line":195,"column":16},"end":{"line":195,"column":16}}]},"19":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":20},"end":{"line":196,"column":20}},{"start":{"line":196,"column":20},"end":{"line":196,"column":20}}]},"20":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":27},"end":{"line":198,"column":27}},{"start":{"line":198,"column":27},"end":{"line":198,"column":27}}]},"21":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":235,"column":8}},{"start":{"line":235,"column":8},"end":{"line":235,"column":8}}]},"22":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":12},"end":{"line":235,"column":17}},{"start":{"line":235,"column":21},"end":{"line":235,"column":33}},{"start":{"line":235,"column":37},"end":{"line":235,"column":92}}]},"23":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":12},"end":{"line":239,"column":12}},{"start":{"line":239,"column":12},"end":{"line":239,"column":12}}]},"24":{"line":240,"type":"cond-expr","locations":[{"start":{"line":240,"column":40},"end":{"line":240,"column":56}},{"start":{"line":240,"column":59},"end":{"line":240,"column":76}}]},"25":{"line":241,"type":"cond-expr","locations":[{"start":{"line":241,"column":40},"end":{"line":241,"column":56}},{"start":{"line":241,"column":59},"end":{"line":241,"column":74}}]},"26":{"line":242,"type":"cond-expr","locations":[{"start":{"line":242,"column":40},"end":{"line":242,"column":57}},{"start":{"line":242,"column":60},"end":{"line":242,"column":78}}]},"27":{"line":243,"type":"cond-expr","locations":[{"start":{"line":243,"column":40},"end":{"line":243,"column":82}},{"start":{"line":243,"column":85},"end":{"line":243,"column":125}}]},"28":{"line":244,"type":"cond-expr","locations":[{"start":{"line":244,"column":40},"end":{"line":244,"column":84}},{"start":{"line":244,"column":87},"end":{"line":244,"column":133}}]},"29":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":12},"end":{"line":247,"column":12}},{"start":{"line":247,"column":12},"end":{"line":247,"column":12}}]},"30":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":16},"end":{"line":248,"column":16}},{"start":{"line":248,"column":16},"end":{"line":248,"column":16}}]},"31":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":20},"end":{"line":248,"column":45}},{"start":{"line":248,"column":49},"end":{"line":248,"column":75}}]},"32":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":16},"end":{"line":252,"column":16}},{"start":{"line":252,"column":16},"end":{"line":252,"column":16}}]},"33":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":20},"end":{"line":252,"column":46}},{"start":{"line":252,"column":50},"end":{"line":252,"column":75}}]},"34":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":8},"end":{"line":298,"column":8}},{"start":{"line":298,"column":8},"end":{"line":298,"column":8}}]},"35":{"line":300,"type":"binary-expr","locations":[{"start":{"line":300,"column":30},"end":{"line":300,"column":45}},{"start":{"line":300,"column":49},"end":{"line":300,"column":103}}]},"36":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":15},"end":{"line":301,"column":15}},{"start":{"line":301,"column":15},"end":{"line":301,"column":15}}]},"37":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":8},"end":{"line":316,"column":8}},{"start":{"line":316,"column":8},"end":{"line":316,"column":8}}]},"38":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":8},"end":{"line":331,"column":8}},{"start":{"line":331,"column":8},"end":{"line":331,"column":8}}]},"39":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":12},"end":{"line":335,"column":12}},{"start":{"line":335,"column":12},"end":{"line":335,"column":12}}]}},"code":["(function () { YUI.add('widget-position-constrain', function (Y, NAME) {","","/**\r"," * Provides constrained xy positioning support for Widgets, through an extension.\r"," *\r"," * It builds on top of the widget-position module, to provide constrained positioning support.\r"," *\r"," * @module widget-position-constrain\r"," */\r","var CONSTRAIN = \"constrain\",\r","    CONSTRAIN_XYCHANGE = \"constrain|xyChange\",\r","    CONSTRAIN_CHANGE = \"constrainChange\",\r","\r","    PREVENT_OVERLAP = \"preventOverlap\",\r","    ALIGN = \"align\",\r","    \r","    EMPTY_STR = \"\",\r","\r","    BINDUI = \"bindUI\",\r","\r","    XY = \"xy\",\r","    X_COORD = \"x\",\r","    Y_COORD = \"y\",\r","\r","    Node = Y.Node,\r","\r","    VIEWPORT_REGION = \"viewportRegion\",\r","    REGION = \"region\",\r","\r","    PREVENT_OVERLAP_MAP;\r","\r","/**\r"," * A widget extension, which can be used to add constrained xy positioning support to the base Widget class,\r"," * through the <a href=\"Base.html#method_build\">Base.build</a> method. This extension requires that \r"," * the WidgetPosition extension be added to the Widget (before WidgetPositionConstrain, if part of the same \r"," * extension list passed to Base.build).\r"," *\r"," * @class WidgetPositionConstrain\r"," * @param {Object} User configuration object\r"," */\r","function PositionConstrain(config) {\r","    if (!this._posNode) {\r","        Y.error(\"WidgetPosition needs to be added to the Widget, before WidgetPositionConstrain is added\"); \r","    }\r","    Y.after(this._bindUIPosConstrained, this, BINDUI);\r","}\r","\r","/**\r"," * Static property used to define the default attribute \r"," * configuration introduced by WidgetPositionConstrain.\r"," *\r"," * @property ATTRS\r"," * @type Object\r"," * @static\r"," */\r","PositionConstrain.ATTRS = {\r","\r","    /**\r","     * @attribute constrain\r","     * @type boolean | Node\r","     * @default null\r","     * @description The node to constrain the widget's bounding box to, when setting xy. Can also be\r","     * set to true, to constrain to the viewport.\r","     */\r","    constrain : {\r","        value: null,\r","        setter: \"_setConstrain\"\r","    },\r","\r","    /**\r","     * @attribute preventOverlap\r","     * @type boolean\r","     * @description If set to true, and WidgetPositionAlign is also added to the Widget, \r","     * constrained positioning will attempt to prevent the widget's bounding box from overlapping \r","     * the element to which it has been aligned, by flipping the orientation of the alignment\r","     * for corner based alignments  \r","     */\r","    preventOverlap : {\r","        value:false\r","    }\r","};\r","\r","/**\r"," * @property _PREVENT_OVERLAP\r"," * @static\r"," * @protected\r"," * @type Object\r"," * @description The set of positions for which to prevent\r"," * overlap.\r"," */\r","PREVENT_OVERLAP_MAP = PositionConstrain._PREVENT_OVERLAP = {\r","    x: {\r","        \"tltr\": 1,\r","        \"blbr\": 1,\r","        \"brbl\": 1,\r","        \"trtl\": 1\r","    },\r","    y : {\r","        \"trbr\": 1,\r","        \"tlbl\": 1,\r","        \"bltl\": 1,\r","        \"brtr\": 1\r","    }\r","};\r","\r","PositionConstrain.prototype = {\r","\r","    /**\r","     * Calculates the constrained positions for the XY positions provided, using\r","     * the provided node argument is passed in. If no node value is passed in, the value of \r","     * the \"constrain\" attribute is used.\r","     * \r","     * @method getConstrainedXY\r","     * @param {Array} xy The xy values to constrain\r","     * @param {Node | boolean} node Optional. The node to constrain to, or true for the viewport\r","     * @return {Array} The constrained xy values\r","     */\r","    getConstrainedXY : function(xy, node) {\r","        node = node || this.get(CONSTRAIN);\r","\r","        var constrainingRegion = this._getRegion((node === true) ? null : node),\r","            nodeRegion = this._posNode.get(REGION);\r","\r","        return [\r","            this._constrain(xy[0], X_COORD, nodeRegion, constrainingRegion),\r","            this._constrain(xy[1], Y_COORD, nodeRegion, constrainingRegion)\r","        ];\r","    },\r","\r","    /**\r","     * Constrains the widget's bounding box to a node (or the viewport). If xy or node are not \r","     * passed in, the current position and the value of \"constrain\" will be used respectively.\r","     * \r","     * The widget's position will be changed to the constrained position.\r","     *\r","     * @method constrain \r","     * @param {Array} xy Optional. The xy values to constrain\r","     * @param {Node | boolean} node Optional. The node to constrain to, or true for the viewport\r","     */\r","    constrain : function(xy, node) {\r","        var currentXY, \r","            constrainedXY,\r","            constraint = node || this.get(CONSTRAIN);\r","\r","        if (constraint) {\r","            currentXY = xy || this.get(XY);\r","            constrainedXY = this.getConstrainedXY(currentXY, constraint);\r","\r","            if (constrainedXY[0] !== currentXY[0] || constrainedXY[1] !== currentXY[1]) {\r","                this.set(XY, constrainedXY, { constrained:true });\r","            }\r","        }\r","    },\r","\r","    /**\r","     * The setter implementation for the \"constrain\" attribute.\r","     *\r","     * @method _setConstrain\r","     * @protected\r","     * @param {Node | boolean} val The attribute value \r","     */\r","    _setConstrain : function(val) {\r","        return (val === true) ? val : Node.one(val);\r","    },\r","\r","    /**\r","     * The method which performs the actual constrain calculations for a given axis (\"x\" or \"y\") based\r","     * on the regions provided.\r","     * \r","     * @method _constrain\r","     * @protected\r","     * \r","     * @param {Number} val The value to constrain\r","     * @param {String} axis The axis to use for constrainment\r","     * @param {Region} nodeRegion The region of the node to constrain\r","     * @param {Region} constrainingRegion The region of the node (or viewport) to constrain to\r","     * \r","     * @return {Number} The constrained value\r","     */\r","    _constrain: function(val, axis, nodeRegion, constrainingRegion) {\r","        if (constrainingRegion) {\r","\r","            if (this.get(PREVENT_OVERLAP)) {\r","                val = this._preventOverlap(val, axis, nodeRegion, constrainingRegion);\r","            }\r","\r","            var x = (axis == X_COORD),\r","\r","                regionSize    = (x) ? constrainingRegion.width : constrainingRegion.height,\r","                nodeSize      = (x) ? nodeRegion.width : nodeRegion.height,\r","                minConstraint = (x) ? constrainingRegion.left : constrainingRegion.top,\r","                maxConstraint = (x) ? constrainingRegion.right - nodeSize : constrainingRegion.bottom - nodeSize;\r","\r","            if (val < minConstraint || val > maxConstraint) {\r","                if (nodeSize < regionSize) {\r","                    if (val < minConstraint) {\r","                        val = minConstraint;\r","                    } else if (val > maxConstraint) {\r","                        val = maxConstraint;\r","                    }\r","                } else {\r","                    val = minConstraint;\r","                }\r","            }\r","        }\r","\r","        return val;\r","    },\r","\r","    /**\r","     * The method which performs the preventOverlap calculations for a given axis (\"x\" or \"y\") based\r","     * on the value and regions provided.\r","     * \r","     * @method _preventOverlap\r","     * @protected\r","     *\r","     * @param {Number} val The value being constrain\r","     * @param {String} axis The axis to being constrained\r","     * @param {Region} nodeRegion The region of the node being constrained\r","     * @param {Region} constrainingRegion The region of the node (or viewport) we need to constrain to\r","     * \r","     * @return {Number} The constrained value\r","     */\r","    _preventOverlap : function(val, axis, nodeRegion, constrainingRegion) {\r","\r","        var align = this.get(ALIGN),\r","            x = (axis === X_COORD),\r","            nodeSize,\r","            alignRegion,\r","            nearEdge,\r","            farEdge,\r","            spaceOnNearSide, \r","            spaceOnFarSide;\r","\r","        if (align && align.points && PREVENT_OVERLAP_MAP[axis][align.points.join(EMPTY_STR)]) {\r","\r","            alignRegion = this._getRegion(align.node);\r","\r","            if (alignRegion) {\r","                nodeSize        = (x) ? nodeRegion.width : nodeRegion.height;\r","                nearEdge        = (x) ? alignRegion.left : alignRegion.top;\r","                farEdge         = (x) ? alignRegion.right : alignRegion.bottom;\r","                spaceOnNearSide = (x) ? alignRegion.left - constrainingRegion.left : alignRegion.top - constrainingRegion.top;\r","                spaceOnFarSide  = (x) ? constrainingRegion.right - alignRegion.right : constrainingRegion.bottom - alignRegion.bottom;\r","            }\r"," \r","            if (val > nearEdge) {\r","                if (spaceOnFarSide < nodeSize && spaceOnNearSide > nodeSize) {\r","                    val = nearEdge - nodeSize;\r","                }\r","            } else {\r","                if (spaceOnNearSide < nodeSize && spaceOnFarSide > nodeSize) {\r","                    val = farEdge;\r","                }\r","            }\r","        }\r","\r","        return val;\r","    },\r","\r","    /**\r","     * Binds event listeners responsible for updating the UI state in response to \r","     * Widget constrained positioning related state changes.\r","     * <p>\r","     * This method is invoked after bindUI is invoked for the Widget class\r","     * using YUI's aop infrastructure.\r","     * </p>\r","     *\r","     * @method _bindUIPosConstrained\r","     * @protected\r","     */\r","    _bindUIPosConstrained : function() {\r","        this.after(CONSTRAIN_CHANGE, this._afterConstrainChange);\r","        this._enableConstraints(this.get(CONSTRAIN));\r","    },\r","\r","    /**\r","     * After change listener for the \"constrain\" attribute, responsible\r","     * for updating the UI, in response to attribute changes.\r","     *\r","     * @method _afterConstrainChange\r","     * @protected\r","     * @param {EventFacade} e The event facade\r","     */\r","    _afterConstrainChange : function(e) {\r","        this._enableConstraints(e.newVal);\r","    },\r","\r","    /**\r","     * Updates the UI if enabling constraints, and sets up the xyChange event listeners\r","     * to constrain whenever the widget is moved. Disabling constraints removes the listeners.\r","     * \r","     * @method enable or disable constraints listeners\r","     * @private\r","     * @param {boolean} enable Enable or disable constraints \r","     */\r","    _enableConstraints : function(enable) {\r","        if (enable) {\r","            this.constrain();\r","            this._cxyHandle = this._cxyHandle || this.on(CONSTRAIN_XYCHANGE, this._constrainOnXYChange);\r","        } else if (this._cxyHandle) {\r","            this._cxyHandle.detach();\r","            this._cxyHandle = null;    \r","        }\r","    },\r","\r","    /**\r","     * The on change listener for the \"xy\" attribute. Modifies the event facade's\r","     * newVal property with the constrained XY value.\r","     *\r","     * @method _constrainOnXYChange\r","     * @protected\r","     * @param {EventFacade} e The event facade for the attribute change\r","     */\r","    _constrainOnXYChange : function(e) {\r","        if (!e.constrained) {\r","            e.newVal = this.getConstrainedXY(e.newVal);\r","        }\r","    },\r","\r","    /**\r","     * Utility method to normalize region retrieval from a node instance, \r","     * or the viewport, if no node is provided. \r","     * \r","     * @method _getRegion\r","     * @private\r","     * @param {Node} node Optional.\r","     */\r","    _getRegion : function(node) {\r","        var region;\r","        if (!node) {\r","            region = this._posNode.get(VIEWPORT_REGION);\r","        } else {\r","            node = Node.one(node);\r","            if (node) {\r","                region = node.get(REGION);\r","            }\r","        }\r","        return region;\r","    }\r","};\r","\r","Y.WidgetPositionConstrain = PositionConstrain;\r","","","}, '@VERSION@', {\"requires\": [\"widget-position\"]});","","}());"]};
}
var __cov_E9YADPb8O2XaZn4cR390OA = __coverage__['build/widget-position-constrain/widget-position-constrain.js'];
__cov_E9YADPb8O2XaZn4cR390OA.s['1']++;YUI.add('widget-position-constrain',function(Y,NAME){__cov_E9YADPb8O2XaZn4cR390OA.f['1']++;__cov_E9YADPb8O2XaZn4cR390OA.s['2']++;var CONSTRAIN='constrain',CONSTRAIN_XYCHANGE='constrain|xyChange',CONSTRAIN_CHANGE='constrainChange',PREVENT_OVERLAP='preventOverlap',ALIGN='align',EMPTY_STR='',BINDUI='bindUI',XY='xy',X_COORD='x',Y_COORD='y',Node=Y.Node,VIEWPORT_REGION='viewportRegion',REGION='region',PREVENT_OVERLAP_MAP;__cov_E9YADPb8O2XaZn4cR390OA.s['3']++;function PositionConstrain(config){__cov_E9YADPb8O2XaZn4cR390OA.f['2']++;__cov_E9YADPb8O2XaZn4cR390OA.s['4']++;if(!this._posNode){__cov_E9YADPb8O2XaZn4cR390OA.b['1'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['5']++;Y.error('WidgetPosition needs to be added to the Widget, before WidgetPositionConstrain is added');}else{__cov_E9YADPb8O2XaZn4cR390OA.b['1'][1]++;}__cov_E9YADPb8O2XaZn4cR390OA.s['6']++;Y.after(this._bindUIPosConstrained,this,BINDUI);}__cov_E9YADPb8O2XaZn4cR390OA.s['7']++;PositionConstrain.ATTRS={constrain:{value:null,setter:'_setConstrain'},preventOverlap:{value:false}};__cov_E9YADPb8O2XaZn4cR390OA.s['8']++;PREVENT_OVERLAP_MAP=PositionConstrain._PREVENT_OVERLAP={x:{'tltr':1,'blbr':1,'brbl':1,'trtl':1},y:{'trbr':1,'tlbl':1,'bltl':1,'brtr':1}};__cov_E9YADPb8O2XaZn4cR390OA.s['9']++;PositionConstrain.prototype={getConstrainedXY:function(xy,node){__cov_E9YADPb8O2XaZn4cR390OA.f['3']++;__cov_E9YADPb8O2XaZn4cR390OA.s['10']++;node=(__cov_E9YADPb8O2XaZn4cR390OA.b['2'][0]++,node)||(__cov_E9YADPb8O2XaZn4cR390OA.b['2'][1]++,this.get(CONSTRAIN));__cov_E9YADPb8O2XaZn4cR390OA.s['11']++;var constrainingRegion=this._getRegion(node===true?(__cov_E9YADPb8O2XaZn4cR390OA.b['3'][0]++,null):(__cov_E9YADPb8O2XaZn4cR390OA.b['3'][1]++,node)),nodeRegion=this._posNode.get(REGION);__cov_E9YADPb8O2XaZn4cR390OA.s['12']++;return[this._constrain(xy[0],X_COORD,nodeRegion,constrainingRegion),this._constrain(xy[1],Y_COORD,nodeRegion,constrainingRegion)];},constrain:function(xy,node){__cov_E9YADPb8O2XaZn4cR390OA.f['4']++;__cov_E9YADPb8O2XaZn4cR390OA.s['13']++;var currentXY,constrainedXY,constraint=(__cov_E9YADPb8O2XaZn4cR390OA.b['4'][0]++,node)||(__cov_E9YADPb8O2XaZn4cR390OA.b['4'][1]++,this.get(CONSTRAIN));__cov_E9YADPb8O2XaZn4cR390OA.s['14']++;if(constraint){__cov_E9YADPb8O2XaZn4cR390OA.b['5'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['15']++;currentXY=(__cov_E9YADPb8O2XaZn4cR390OA.b['6'][0]++,xy)||(__cov_E9YADPb8O2XaZn4cR390OA.b['6'][1]++,this.get(XY));__cov_E9YADPb8O2XaZn4cR390OA.s['16']++;constrainedXY=this.getConstrainedXY(currentXY,constraint);__cov_E9YADPb8O2XaZn4cR390OA.s['17']++;if((__cov_E9YADPb8O2XaZn4cR390OA.b['8'][0]++,constrainedXY[0]!==currentXY[0])||(__cov_E9YADPb8O2XaZn4cR390OA.b['8'][1]++,constrainedXY[1]!==currentXY[1])){__cov_E9YADPb8O2XaZn4cR390OA.b['7'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['18']++;this.set(XY,constrainedXY,{constrained:true});}else{__cov_E9YADPb8O2XaZn4cR390OA.b['7'][1]++;}}else{__cov_E9YADPb8O2XaZn4cR390OA.b['5'][1]++;}},_setConstrain:function(val){__cov_E9YADPb8O2XaZn4cR390OA.f['5']++;__cov_E9YADPb8O2XaZn4cR390OA.s['19']++;return val===true?(__cov_E9YADPb8O2XaZn4cR390OA.b['9'][0]++,val):(__cov_E9YADPb8O2XaZn4cR390OA.b['9'][1]++,Node.one(val));},_constrain:function(val,axis,nodeRegion,constrainingRegion){__cov_E9YADPb8O2XaZn4cR390OA.f['6']++;__cov_E9YADPb8O2XaZn4cR390OA.s['20']++;if(constrainingRegion){__cov_E9YADPb8O2XaZn4cR390OA.b['10'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['21']++;if(this.get(PREVENT_OVERLAP)){__cov_E9YADPb8O2XaZn4cR390OA.b['11'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['22']++;val=this._preventOverlap(val,axis,nodeRegion,constrainingRegion);}else{__cov_E9YADPb8O2XaZn4cR390OA.b['11'][1]++;}__cov_E9YADPb8O2XaZn4cR390OA.s['23']++;var x=axis==X_COORD,regionSize=x?(__cov_E9YADPb8O2XaZn4cR390OA.b['12'][0]++,constrainingRegion.width):(__cov_E9YADPb8O2XaZn4cR390OA.b['12'][1]++,constrainingRegion.height),nodeSize=x?(__cov_E9YADPb8O2XaZn4cR390OA.b['13'][0]++,nodeRegion.width):(__cov_E9YADPb8O2XaZn4cR390OA.b['13'][1]++,nodeRegion.height),minConstraint=x?(__cov_E9YADPb8O2XaZn4cR390OA.b['14'][0]++,constrainingRegion.left):(__cov_E9YADPb8O2XaZn4cR390OA.b['14'][1]++,constrainingRegion.top),maxConstraint=x?(__cov_E9YADPb8O2XaZn4cR390OA.b['15'][0]++,constrainingRegion.right-nodeSize):(__cov_E9YADPb8O2XaZn4cR390OA.b['15'][1]++,constrainingRegion.bottom-nodeSize);__cov_E9YADPb8O2XaZn4cR390OA.s['24']++;if((__cov_E9YADPb8O2XaZn4cR390OA.b['17'][0]++,val<minConstraint)||(__cov_E9YADPb8O2XaZn4cR390OA.b['17'][1]++,val>maxConstraint)){__cov_E9YADPb8O2XaZn4cR390OA.b['16'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['25']++;if(nodeSize<regionSize){__cov_E9YADPb8O2XaZn4cR390OA.b['18'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['26']++;if(val<minConstraint){__cov_E9YADPb8O2XaZn4cR390OA.b['19'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['27']++;val=minConstraint;}else{__cov_E9YADPb8O2XaZn4cR390OA.b['19'][1]++;__cov_E9YADPb8O2XaZn4cR390OA.s['28']++;if(val>maxConstraint){__cov_E9YADPb8O2XaZn4cR390OA.b['20'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['29']++;val=maxConstraint;}else{__cov_E9YADPb8O2XaZn4cR390OA.b['20'][1]++;}}}else{__cov_E9YADPb8O2XaZn4cR390OA.b['18'][1]++;__cov_E9YADPb8O2XaZn4cR390OA.s['30']++;val=minConstraint;}}else{__cov_E9YADPb8O2XaZn4cR390OA.b['16'][1]++;}}else{__cov_E9YADPb8O2XaZn4cR390OA.b['10'][1]++;}__cov_E9YADPb8O2XaZn4cR390OA.s['31']++;return val;},_preventOverlap:function(val,axis,nodeRegion,constrainingRegion){__cov_E9YADPb8O2XaZn4cR390OA.f['7']++;__cov_E9YADPb8O2XaZn4cR390OA.s['32']++;var align=this.get(ALIGN),x=axis===X_COORD,nodeSize,alignRegion,nearEdge,farEdge,spaceOnNearSide,spaceOnFarSide;__cov_E9YADPb8O2XaZn4cR390OA.s['33']++;if((__cov_E9YADPb8O2XaZn4cR390OA.b['22'][0]++,align)&&(__cov_E9YADPb8O2XaZn4cR390OA.b['22'][1]++,align.points)&&(__cov_E9YADPb8O2XaZn4cR390OA.b['22'][2]++,PREVENT_OVERLAP_MAP[axis][align.points.join(EMPTY_STR)])){__cov_E9YADPb8O2XaZn4cR390OA.b['21'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['34']++;alignRegion=this._getRegion(align.node);__cov_E9YADPb8O2XaZn4cR390OA.s['35']++;if(alignRegion){__cov_E9YADPb8O2XaZn4cR390OA.b['23'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['36']++;nodeSize=x?(__cov_E9YADPb8O2XaZn4cR390OA.b['24'][0]++,nodeRegion.width):(__cov_E9YADPb8O2XaZn4cR390OA.b['24'][1]++,nodeRegion.height);__cov_E9YADPb8O2XaZn4cR390OA.s['37']++;nearEdge=x?(__cov_E9YADPb8O2XaZn4cR390OA.b['25'][0]++,alignRegion.left):(__cov_E9YADPb8O2XaZn4cR390OA.b['25'][1]++,alignRegion.top);__cov_E9YADPb8O2XaZn4cR390OA.s['38']++;farEdge=x?(__cov_E9YADPb8O2XaZn4cR390OA.b['26'][0]++,alignRegion.right):(__cov_E9YADPb8O2XaZn4cR390OA.b['26'][1]++,alignRegion.bottom);__cov_E9YADPb8O2XaZn4cR390OA.s['39']++;spaceOnNearSide=x?(__cov_E9YADPb8O2XaZn4cR390OA.b['27'][0]++,alignRegion.left-constrainingRegion.left):(__cov_E9YADPb8O2XaZn4cR390OA.b['27'][1]++,alignRegion.top-constrainingRegion.top);__cov_E9YADPb8O2XaZn4cR390OA.s['40']++;spaceOnFarSide=x?(__cov_E9YADPb8O2XaZn4cR390OA.b['28'][0]++,constrainingRegion.right-alignRegion.right):(__cov_E9YADPb8O2XaZn4cR390OA.b['28'][1]++,constrainingRegion.bottom-alignRegion.bottom);}else{__cov_E9YADPb8O2XaZn4cR390OA.b['23'][1]++;}__cov_E9YADPb8O2XaZn4cR390OA.s['41']++;if(val>nearEdge){__cov_E9YADPb8O2XaZn4cR390OA.b['29'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['42']++;if((__cov_E9YADPb8O2XaZn4cR390OA.b['31'][0]++,spaceOnFarSide<nodeSize)&&(__cov_E9YADPb8O2XaZn4cR390OA.b['31'][1]++,spaceOnNearSide>nodeSize)){__cov_E9YADPb8O2XaZn4cR390OA.b['30'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['43']++;val=nearEdge-nodeSize;}else{__cov_E9YADPb8O2XaZn4cR390OA.b['30'][1]++;}}else{__cov_E9YADPb8O2XaZn4cR390OA.b['29'][1]++;__cov_E9YADPb8O2XaZn4cR390OA.s['44']++;if((__cov_E9YADPb8O2XaZn4cR390OA.b['33'][0]++,spaceOnNearSide<nodeSize)&&(__cov_E9YADPb8O2XaZn4cR390OA.b['33'][1]++,spaceOnFarSide>nodeSize)){__cov_E9YADPb8O2XaZn4cR390OA.b['32'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['45']++;val=farEdge;}else{__cov_E9YADPb8O2XaZn4cR390OA.b['32'][1]++;}}}else{__cov_E9YADPb8O2XaZn4cR390OA.b['21'][1]++;}__cov_E9YADPb8O2XaZn4cR390OA.s['46']++;return val;},_bindUIPosConstrained:function(){__cov_E9YADPb8O2XaZn4cR390OA.f['8']++;__cov_E9YADPb8O2XaZn4cR390OA.s['47']++;this.after(CONSTRAIN_CHANGE,this._afterConstrainChange);__cov_E9YADPb8O2XaZn4cR390OA.s['48']++;this._enableConstraints(this.get(CONSTRAIN));},_afterConstrainChange:function(e){__cov_E9YADPb8O2XaZn4cR390OA.f['9']++;__cov_E9YADPb8O2XaZn4cR390OA.s['49']++;this._enableConstraints(e.newVal);},_enableConstraints:function(enable){__cov_E9YADPb8O2XaZn4cR390OA.f['10']++;__cov_E9YADPb8O2XaZn4cR390OA.s['50']++;if(enable){__cov_E9YADPb8O2XaZn4cR390OA.b['34'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['51']++;this.constrain();__cov_E9YADPb8O2XaZn4cR390OA.s['52']++;this._cxyHandle=(__cov_E9YADPb8O2XaZn4cR390OA.b['35'][0]++,this._cxyHandle)||(__cov_E9YADPb8O2XaZn4cR390OA.b['35'][1]++,this.on(CONSTRAIN_XYCHANGE,this._constrainOnXYChange));}else{__cov_E9YADPb8O2XaZn4cR390OA.b['34'][1]++;__cov_E9YADPb8O2XaZn4cR390OA.s['53']++;if(this._cxyHandle){__cov_E9YADPb8O2XaZn4cR390OA.b['36'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['54']++;this._cxyHandle.detach();__cov_E9YADPb8O2XaZn4cR390OA.s['55']++;this._cxyHandle=null;}else{__cov_E9YADPb8O2XaZn4cR390OA.b['36'][1]++;}}},_constrainOnXYChange:function(e){__cov_E9YADPb8O2XaZn4cR390OA.f['11']++;__cov_E9YADPb8O2XaZn4cR390OA.s['56']++;if(!e.constrained){__cov_E9YADPb8O2XaZn4cR390OA.b['37'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['57']++;e.newVal=this.getConstrainedXY(e.newVal);}else{__cov_E9YADPb8O2XaZn4cR390OA.b['37'][1]++;}},_getRegion:function(node){__cov_E9YADPb8O2XaZn4cR390OA.f['12']++;__cov_E9YADPb8O2XaZn4cR390OA.s['58']++;var region;__cov_E9YADPb8O2XaZn4cR390OA.s['59']++;if(!node){__cov_E9YADPb8O2XaZn4cR390OA.b['38'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['60']++;region=this._posNode.get(VIEWPORT_REGION);}else{__cov_E9YADPb8O2XaZn4cR390OA.b['38'][1]++;__cov_E9YADPb8O2XaZn4cR390OA.s['61']++;node=Node.one(node);__cov_E9YADPb8O2XaZn4cR390OA.s['62']++;if(node){__cov_E9YADPb8O2XaZn4cR390OA.b['39'][0]++;__cov_E9YADPb8O2XaZn4cR390OA.s['63']++;region=node.get(REGION);}else{__cov_E9YADPb8O2XaZn4cR390OA.b['39'][1]++;}}__cov_E9YADPb8O2XaZn4cR390OA.s['64']++;return region;}};__cov_E9YADPb8O2XaZn4cR390OA.s['65']++;Y.WidgetPositionConstrain=PositionConstrain;},'@VERSION@',{'requires':['widget-position']});

if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/sortable/sortable.js']) {
   __coverage__['build/sortable/sortable.js'] = {"path":"build/sortable/sortable.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":20},"end":{"line":1,"column":39}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":19},"end":{"line":16,"column":30}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":21},"end":{"line":43,"column":32}}},"4":{"name":"(anonymous_4)","line":86,"loc":{"start":{"line":86,"column":17},"end":{"line":86,"column":29}}},"5":{"name":"(anonymous_5)","line":101,"loc":{"start":{"line":101,"column":22},"end":{"line":101,"column":34}}},"6":{"name":"(anonymous_6)","line":116,"loc":{"start":{"line":116,"column":21},"end":{"line":116,"column":33}}},"7":{"name":"(anonymous_7)","line":190,"loc":{"start":{"line":190,"column":22},"end":{"line":190,"column":33}}},"8":{"name":"(anonymous_8)","line":205,"loc":{"start":{"line":205,"column":20},"end":{"line":205,"column":31}}},"9":{"name":"(anonymous_9)","line":220,"loc":{"start":{"line":220,"column":14},"end":{"line":220,"column":36}}},"10":{"name":"(anonymous_10)","line":234,"loc":{"start":{"line":234,"column":14},"end":{"line":234,"column":25}}},"11":{"name":"(anonymous_11)","line":238,"loc":{"start":{"line":238,"column":20},"end":{"line":238,"column":31}}},"12":{"name":"(anonymous_12)","line":256,"loc":{"start":{"line":256,"column":14},"end":{"line":256,"column":34}}},"13":{"name":"(anonymous_13)","line":279,"loc":{"start":{"line":279,"column":20},"end":{"line":279,"column":34}}},"14":{"name":"(anonymous_14)","line":289,"loc":{"start":{"line":289,"column":20},"end":{"line":289,"column":34}}},"15":{"name":"(anonymous_15)","line":299,"loc":{"start":{"line":299,"column":21},"end":{"line":299,"column":35}}},"16":{"name":"(anonymous_16)","line":308,"loc":{"start":{"line":308,"column":21},"end":{"line":308,"column":35}}},"17":{"name":"(anonymous_17)","line":318,"loc":{"start":{"line":318,"column":21},"end":{"line":318,"column":40}}},"18":{"name":"(anonymous_18)","line":322,"loc":{"start":{"line":322,"column":27},"end":{"line":322,"column":43}}},"19":{"name":"(anonymous_19)","line":327,"loc":{"start":{"line":327,"column":60},"end":{"line":327,"column":75}}},"20":{"name":"(anonymous_20)","line":415,"loc":{"start":{"line":415,"column":15},"end":{"line":415,"column":36}}},"21":{"name":"(anonymous_21)","line":430,"loc":{"start":{"line":430,"column":21},"end":{"line":430,"column":36}}},"22":{"name":"(anonymous_22)","line":438,"loc":{"start":{"line":438,"column":49},"end":{"line":438,"column":61}}},"23":{"name":"(anonymous_23)","line":452,"loc":{"start":{"line":452,"column":13},"end":{"line":452,"column":29}}},"24":{"name":"(anonymous_24)","line":465,"loc":{"start":{"line":465,"column":15},"end":{"line":465,"column":31}}},"25":{"name":"(anonymous_25)","line":473,"loc":{"start":{"line":473,"column":49},"end":{"line":473,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":531,"column":77}},"2":{"start":{"line":16,"column":4},"end":{"line":27,"column":18}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":63}},"4":{"start":{"line":30,"column":4},"end":{"line":479,"column":7}},"5":{"start":{"line":44,"column":12},"end":{"line":53,"column":23}},"6":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"7":{"start":{"line":56,"column":16},"end":{"line":56,"column":56}},"8":{"start":{"line":58,"column":12},"end":{"line":58,"column":47}},"9":{"start":{"line":60,"column":12},"end":{"line":60,"column":29}},"10":{"start":{"line":62,"column":12},"end":{"line":65,"column":15}},"11":{"start":{"line":67,"column":12},"end":{"line":71,"column":15}},"12":{"start":{"line":72,"column":12},"end":{"line":72,"column":72}},"13":{"start":{"line":74,"column":12},"end":{"line":79,"column":15}},"14":{"start":{"line":81,"column":12},"end":{"line":81,"column":32}},"15":{"start":{"line":82,"column":12},"end":{"line":82,"column":35}},"16":{"start":{"line":87,"column":12},"end":{"line":91,"column":13}},"17":{"start":{"line":88,"column":16},"end":{"line":88,"column":32}},"18":{"start":{"line":89,"column":19},"end":{"line":91,"column":13}},"19":{"start":{"line":90,"column":16},"end":{"line":90,"column":33}},"20":{"start":{"line":93,"column":12},"end":{"line":93,"column":30}},"21":{"start":{"line":102,"column":12},"end":{"line":103,"column":44}},"22":{"start":{"line":105,"column":12},"end":{"line":108,"column":13}},"23":{"start":{"line":107,"column":16},"end":{"line":107,"column":42}},"24":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"25":{"start":{"line":118,"column":16},"end":{"line":118,"column":23}},"26":{"start":{"line":120,"column":12},"end":{"line":122,"column":13}},"27":{"start":{"line":121,"column":16},"end":{"line":121,"column":23}},"28":{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},"29":{"start":{"line":125,"column":16},"end":{"line":125,"column":23}},"30":{"start":{"line":127,"column":12},"end":{"line":128,"column":62}},"31":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"32":{"start":{"line":131,"column":16},"end":{"line":131,"column":28}},"33":{"start":{"line":133,"column":12},"end":{"line":135,"column":13}},"34":{"start":{"line":134,"column":16},"end":{"line":134,"column":36}},"35":{"start":{"line":136,"column":12},"end":{"line":179,"column":13}},"36":{"start":{"line":138,"column":20},"end":{"line":138,"column":60}},"37":{"start":{"line":139,"column":20},"end":{"line":139,"column":48}},"38":{"start":{"line":140,"column":20},"end":{"line":144,"column":21}},"39":{"start":{"line":141,"column":24},"end":{"line":141,"column":58}},"40":{"start":{"line":143,"column":24},"end":{"line":143,"column":63}},"41":{"start":{"line":145,"column":20},"end":{"line":145,"column":26}},"42":{"start":{"line":147,"column":20},"end":{"line":147,"column":54}},"43":{"start":{"line":148,"column":20},"end":{"line":148,"column":26}},"44":{"start":{"line":151,"column":20},"end":{"line":151,"column":89}},"45":{"start":{"line":153,"column":20},"end":{"line":155,"column":21}},"46":{"start":{"line":154,"column":24},"end":{"line":154,"column":31}},"47":{"start":{"line":157,"column":20},"end":{"line":157,"column":84}},"48":{"start":{"line":160,"column":20},"end":{"line":177,"column":21}},"49":{"start":{"line":161,"column":24},"end":{"line":161,"column":58}},"50":{"start":{"line":163,"column":24},"end":{"line":175,"column":25}},"51":{"start":{"line":165,"column":28},"end":{"line":165,"column":55}},"52":{"start":{"line":166,"column":28},"end":{"line":166,"column":62}},"53":{"start":{"line":168,"column":28},"end":{"line":168,"column":48}},"54":{"start":{"line":169,"column":28},"end":{"line":169,"column":54}},"55":{"start":{"line":170,"column":28},"end":{"line":170,"column":86}},"56":{"start":{"line":171,"column":28},"end":{"line":174,"column":31}},"57":{"start":{"line":176,"column":24},"end":{"line":176,"column":76}},"58":{"start":{"line":178,"column":20},"end":{"line":178,"column":26}},"59":{"start":{"line":181,"column":12},"end":{"line":181,"column":76}},"60":{"start":{"line":182,"column":12},"end":{"line":182,"column":75}},"61":{"start":{"line":191,"column":12},"end":{"line":192,"column":47}},"62":{"start":{"line":193,"column":12},"end":{"line":195,"column":13}},"63":{"start":{"line":194,"column":16},"end":{"line":194,"column":46}},"64":{"start":{"line":196,"column":12},"end":{"line":196,"column":81}},"65":{"start":{"line":197,"column":12},"end":{"line":197,"column":58}},"66":{"start":{"line":206,"column":12},"end":{"line":206,"column":75}},"67":{"start":{"line":207,"column":12},"end":{"line":210,"column":15}},"68":{"start":{"line":211,"column":12},"end":{"line":211,"column":24}},"69":{"start":{"line":222,"column":12},"end":{"line":226,"column":13}},"70":{"start":{"line":223,"column":16},"end":{"line":223,"column":73}},"71":{"start":{"line":225,"column":16},"end":{"line":225,"column":51}},"72":{"start":{"line":227,"column":12},"end":{"line":227,"column":24}},"73":{"start":{"line":235,"column":12},"end":{"line":235,"column":40}},"74":{"start":{"line":236,"column":12},"end":{"line":236,"column":24}},"75":{"start":{"line":239,"column":12},"end":{"line":239,"column":32}},"76":{"start":{"line":240,"column":12},"end":{"line":240,"column":36}},"77":{"start":{"line":241,"column":12},"end":{"line":241,"column":47}},"78":{"start":{"line":257,"column":12},"end":{"line":260,"column":13}},"79":{"start":{"line":258,"column":16},"end":{"line":258,"column":68}},"80":{"start":{"line":259,"column":16},"end":{"line":259,"column":28}},"81":{"start":{"line":261,"column":12},"end":{"line":263,"column":13}},"82":{"start":{"line":262,"column":16},"end":{"line":262,"column":30}},"83":{"start":{"line":264,"column":12},"end":{"line":264,"column":38}},"84":{"start":{"line":265,"column":12},"end":{"line":265,"column":41}},"85":{"start":{"line":267,"column":12},"end":{"line":269,"column":13}},"86":{"start":{"line":268,"column":16},"end":{"line":268,"column":34}},"87":{"start":{"line":271,"column":12},"end":{"line":271,"column":24}},"88":{"start":{"line":280,"column":12},"end":{"line":280,"column":58}},"89":{"start":{"line":281,"column":12},"end":{"line":281,"column":58}},"90":{"start":{"line":290,"column":12},"end":{"line":290,"column":53}},"91":{"start":{"line":291,"column":12},"end":{"line":291,"column":53}},"92":{"start":{"line":300,"column":12},"end":{"line":300,"column":53}},"93":{"start":{"line":309,"column":12},"end":{"line":309,"column":53}},"94":{"start":{"line":319,"column":12},"end":{"line":319,"column":30}},"95":{"start":{"line":321,"column":12},"end":{"line":325,"column":13}},"96":{"start":{"line":322,"column":16},"end":{"line":324,"column":18}},"97":{"start":{"line":323,"column":20},"end":{"line":323,"column":32}},"98":{"start":{"line":327,"column":12},"end":{"line":329,"column":15}},"99":{"start":{"line":328,"column":16},"end":{"line":328,"column":46}},"100":{"start":{"line":330,"column":12},"end":{"line":330,"column":28}},"101":{"start":{"line":416,"column":12},"end":{"line":416,"column":20}},"102":{"start":{"line":417,"column":12},"end":{"line":421,"column":13}},"103":{"start":{"line":418,"column":16},"end":{"line":418,"column":38}},"104":{"start":{"line":420,"column":16},"end":{"line":420,"column":38}},"105":{"start":{"line":422,"column":12},"end":{"line":422,"column":23}},"106":{"start":{"line":431,"column":12},"end":{"line":432,"column":26}},"107":{"start":{"line":433,"column":12},"end":{"line":433,"column":31}},"108":{"start":{"line":434,"column":12},"end":{"line":434,"column":30}},"109":{"start":{"line":435,"column":12},"end":{"line":437,"column":13}},"110":{"start":{"line":436,"column":16},"end":{"line":436,"column":49}},"111":{"start":{"line":438,"column":12},"end":{"line":442,"column":15}},"112":{"start":{"line":439,"column":16},"end":{"line":441,"column":17}},"113":{"start":{"line":440,"column":20},"end":{"line":440,"column":26}},"114":{"start":{"line":443,"column":12},"end":{"line":443,"column":21}},"115":{"start":{"line":453,"column":12},"end":{"line":455,"column":13}},"116":{"start":{"line":454,"column":16},"end":{"line":454,"column":31}},"117":{"start":{"line":456,"column":12},"end":{"line":456,"column":42}},"118":{"start":{"line":466,"column":12},"end":{"line":468,"column":13}},"119":{"start":{"line":467,"column":16},"end":{"line":467,"column":31}},"120":{"start":{"line":469,"column":12},"end":{"line":472,"column":13}},"121":{"start":{"line":470,"column":16},"end":{"line":470,"column":49}},"122":{"start":{"line":471,"column":16},"end":{"line":471,"column":23}},"123":{"start":{"line":473,"column":12},"end":{"line":477,"column":15}},"124":{"start":{"line":474,"column":16},"end":{"line":476,"column":17}},"125":{"start":{"line":475,"column":20},"end":{"line":475,"column":50}},"126":{"start":{"line":481,"column":4},"end":{"line":481,"column":26}}},"branchMap":{"1":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":12}},{"start":{"line":55,"column":12},"end":{"line":55,"column":12}}]},"2":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":12}},{"start":{"line":87,"column":12},"end":{"line":87,"column":12}}]},"3":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":19},"end":{"line":89,"column":19}},{"start":{"line":89,"column":19},"end":{"line":89,"column":19}}]},"4":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"5":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":16},"end":{"line":105,"column":47}},{"start":{"line":106,"column":16},"end":{"line":106,"column":62}}]},"6":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":117,"column":12}},{"start":{"line":117,"column":12},"end":{"line":117,"column":12}}]},"7":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":12},"end":{"line":120,"column":12}},{"start":{"line":120,"column":12},"end":{"line":120,"column":12}}]},"8":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":12},"end":{"line":124,"column":12}},{"start":{"line":124,"column":12},"end":{"line":124,"column":12}}]},"9":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":130,"column":12}},{"start":{"line":130,"column":12},"end":{"line":130,"column":12}}]},"10":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":12}},{"start":{"line":133,"column":12},"end":{"line":133,"column":12}}]},"11":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":16},"end":{"line":133,"column":20}},{"start":{"line":133,"column":24},"end":{"line":133,"column":43}}]},"12":{"line":136,"type":"switch","locations":[{"start":{"line":137,"column":16},"end":{"line":145,"column":26}},{"start":{"line":146,"column":16},"end":{"line":148,"column":26}},{"start":{"line":149,"column":16},"end":{"line":149,"column":28}},{"start":{"line":150,"column":16},"end":{"line":178,"column":26}}]},"13":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":40},"end":{"line":138,"column":48}},{"start":{"line":138,"column":51},"end":{"line":138,"column":58}}]},"14":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":20},"end":{"line":140,"column":20}},{"start":{"line":140,"column":20},"end":{"line":140,"column":20}}]},"15":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":20},"end":{"line":153,"column":20}},{"start":{"line":153,"column":20},"end":{"line":153,"column":20}}]},"16":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":20},"end":{"line":160,"column":20}},{"start":{"line":160,"column":20},"end":{"line":160,"column":20}}]},"17":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":24},"end":{"line":163,"column":24}},{"start":{"line":163,"column":24},"end":{"line":163,"column":24}}]},"18":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":12},"end":{"line":193,"column":12}},{"start":{"line":193,"column":12},"end":{"line":193,"column":12}}]},"19":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":16},"end":{"line":193,"column":24}},{"start":{"line":193,"column":28},"end":{"line":193,"column":49}}]},"20":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":12},"end":{"line":222,"column":12}},{"start":{"line":222,"column":12},"end":{"line":222,"column":12}}]},"21":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":16},"end":{"line":222,"column":19}},{"start":{"line":222,"column":23},"end":{"line":222,"column":72}}]},"22":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":12},"end":{"line":257,"column":12}},{"start":{"line":257,"column":12},"end":{"line":257,"column":12}}]},"23":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":12},"end":{"line":261,"column":12}},{"start":{"line":261,"column":12},"end":{"line":261,"column":12}}]},"24":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":12},"end":{"line":267,"column":12}},{"start":{"line":267,"column":12},"end":{"line":267,"column":12}}]},"25":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":12},"end":{"line":321,"column":12}},{"start":{"line":321,"column":12},"end":{"line":321,"column":12}}]},"26":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":12},"end":{"line":417,"column":12}},{"start":{"line":417,"column":12},"end":{"line":417,"column":12}}]},"27":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":12},"end":{"line":435,"column":12}},{"start":{"line":435,"column":12},"end":{"line":435,"column":12}}]},"28":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":15},"end":{"line":435,"column":17}},{"start":{"line":435,"column":21},"end":{"line":435,"column":46}}]},"29":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":16},"end":{"line":439,"column":16}},{"start":{"line":439,"column":16},"end":{"line":439,"column":16}}]},"30":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":12},"end":{"line":453,"column":12}},{"start":{"line":453,"column":12},"end":{"line":453,"column":12}}]},"31":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":12},"end":{"line":466,"column":12}},{"start":{"line":466,"column":12},"end":{"line":466,"column":12}}]},"32":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":12},"end":{"line":469,"column":12}},{"start":{"line":469,"column":12},"end":{"line":469,"column":12}}]},"33":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":16},"end":{"line":469,"column":18}},{"start":{"line":469,"column":22},"end":{"line":469,"column":47}}]},"34":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":16},"end":{"line":474,"column":16}},{"start":{"line":474,"column":16},"end":{"line":474,"column":16}}]}},"code":["(function () { YUI.add('sortable', function (Y, NAME) {","","\r","    /**\r","     * The class allows you to create a Drag & Drop reordered list.\r","     * @module sortable\r","     */\r","    /**\r","     * The class allows you to create a Drag & Drop reordered list.\r","     * @class Sortable\r","     * @extends Base\r","     * @constructor\r","     */\r","\r","\r","    var Sortable = function() {\r","        Sortable.superclass.constructor.apply(this, arguments);\r","    },\r","    CURRENT_NODE = 'currentNode',\r","    OPACITY_NODE = 'opacityNode',\r","    CONT = 'container',\r","    ID = 'id',\r","    ZINDEX = 'zIndex',\r","    OPACITY = 'opacity',\r","    PARENT_NODE = 'parentNode',\r","    NODES = 'nodes',\r","    NODE = 'node';\r","\r","\r","    Y.extend(Sortable, Y.Base, {\r","        /**\r","        * @property delegate\r","        * @type DD.Delegate\r","        * @description A reference to the DD.Delegate instance.\r","        */\r","        delegate: null,\r","        /**\r","        * @property drop\r","        * @type DD.Drop\r","        * @description A reference to the DD.Drop instance\r","        */\r","        drop: null,\r","        initializer: function() {\r","            var id = 'sortable-' + Y.guid(),\r","                delConfig = {\r","                    container: this.get(CONT),\r","                    nodes: this.get(NODES),\r","                    target: true,\r","                    invalid: this.get('invalid'),\r","                    dragConfig: {\r","                        groups: [ id ]\r","                    }\r","                }, del;\r","\r","            if (this.get('handles')) {\r","                delConfig.handles = this.get('handles');\r","            }\r","            del = new Y.DD.Delegate(delConfig);\r","\r","            this.set(ID, id);\r","\r","            del.dd.plug(Y.Plugin.DDProxy, {\r","                moveOnEnd: false,\r","                cloneNode: true\r","            });\r","\r","            this.drop =  new Y.DD.Drop({\r","                node: this.get(CONT),\r","                bubbleTarget: del,\r","                groups: del.dd.get('groups')\r","            });\r","            this.drop.on('drop:enter', Y.bind(this._onDropEnter, this));\r","            \r","            del.on({\r","                'drag:start': Y.bind(this._onDragStart, this),\r","                'drag:end': Y.bind(this._onDragEnd, this),\r","                'drag:over': Y.bind(this._onDragOver, this),\r","                'drag:drag': Y.bind(this._onDrag, this)\r","            });\r","\r","            this.delegate = del;\r","            Sortable.reg(this, id);\r","        },\r","        _up: null,\r","        _y: null,\r","        _onDrag: function(e) {\r","            if (e.pageY < this._y) {\r","                this._up = true;\r","            } else if (e.pageY > this._y) {\r","                this._up = false;\r","            }\r","\r","            this._y = e.pageY;\r","        },\r","        /**\r","        * @private\r","        * @method _onDropEnter\r","        * @param Event e The Event Object\r","        * @description Handles the DropEnter event to append a new node to a target.\r","        */\r","        _onDropEnter: function(e) {\r","            var dropNode = e.drop.get(NODE),\r","                dragNode = e.drag.get(NODE);\r","\r","            if (!dropNode.test(this.get(NODES)) &&\r","                !dragNode.get(PARENT_NODE).compareTo(dropNode)) {\r","                dropNode.append(dragNode);\r","            }\r","        },\r","        /**\r","        * @private\r","        * @method _onDragOver\r","        * @param Event e The Event Object\r","        * @description Handles the DragOver event that moves the object in the list or to another list.\r","        */\r","        _onDragOver: function(e) {\r","            if (!e.drop.get(NODE).test(this.get(NODES))) {\r","                return;\r","            }\r","            if (e.drag.get(NODE) === e.drop.get(NODE)) {\r","                return;\r","            }\r","            // is drop a child of drag?\r","            if (e.drag.get(NODE).contains(e.drop.get(NODE))) {\r","                return;\r","            }\r","            var same = false, dir, oldNode, newNode, dropsort, dropNode,\r","                moveType = this.get('moveType').toLowerCase();\r","\r","            if (e.drag.get(NODE).get(PARENT_NODE).contains(e.drop.get(NODE))) {\r","                same = true;\r","            }\r","            if (same && moveType === 'move') {\r","                moveType = 'insert';\r","            }\r","            switch (moveType) {\r","                case 'insert':\r","                    dir = ((this._up) ? 'before' : 'after');\r","                    dropNode = e.drop.get(NODE);\r","                    if (Y.Sortable._test(dropNode, this.get(CONT))) {\r","                        dropNode.append(e.drag.get(NODE));\r","                    } else {\r","                        dropNode.insert(e.drag.get(NODE), dir);\r","                    }\r","                    break;\r","                case 'swap':\r","                    Y.DD.DDM.swapNode(e.drag, e.drop);\r","                    break;\r","                case 'move':\r","                case 'copy':\r","                    dropsort = Y.Sortable.getSortable(e.drop.get(NODE).get(PARENT_NODE));\r","\r","                    if (!dropsort) {\r","                        return;\r","                    }\r","                    \r","                    Y.DD.DDM.getDrop(e.drag.get(NODE)).addToGroup(dropsort.get(ID));\r","\r","                    //Same List\r","                    if (same) {\r","                        Y.DD.DDM.swapNode(e.drag, e.drop);\r","                    } else {\r","                        if (this.get('moveType') === 'copy') {\r","                            //New List\r","                            oldNode = e.drag.get(NODE);\r","                            newNode = oldNode.cloneNode(true);\r","\r","                            newNode.set(ID, '');\r","                            e.drag.set(NODE, newNode);\r","                            dropsort.delegate.createDrop(newNode, [dropsort.get(ID)]);\r","                            oldNode.setStyles({\r","                                top: '',\r","                                left: ''\r","                            });\r","                        }\r","                        e.drop.get(NODE).insert(e.drag.get(NODE), 'before');\r","                    }\r","                    break;\r","            }\r","\r","            this.fire(moveType, { same: same, drag: e.drag, drop: e.drop });\r","            this.fire('moved', { same: same, drag: e.drag, drop: e.drop });\r","        },\r","        /**\r","        * @private\r","        * @method _onDragStart\r","        * @param Event e The Event Object\r","        * @description Handles the DragStart event and initializes some settings.\r","        */\r","        _onDragStart: function() {\r","            var del = this.delegate,\r","                lastNode = del.get('lastNode');\r","            if (lastNode && lastNode.getDOMNode()) {\r","                lastNode.setStyle(ZINDEX, '');\r","            }\r","            del.get(this.get(OPACITY_NODE)).setStyle(OPACITY, this.get(OPACITY));\r","            del.get(CURRENT_NODE).setStyle(ZINDEX, '999');\r","        },\r","        /**\r","        * @private\r","        * @method _onDragEnd\r","        * @param Event e The Event Object\r","        * @description Handles the DragEnd event that cleans up the settings in the drag:start event.\r","        */\r","        _onDragEnd: function() {\r","            this.delegate.get(this.get(OPACITY_NODE)).setStyle(OPACITY, 1);\r","            this.delegate.get(CURRENT_NODE).setStyles({\r","                top: '',\r","                left: ''\r","            });\r","            this.sync();\r","        },\r","        /**\r","        * @method plug\r","        * @param Class cls The class to plug\r","        * @param Object config The class config\r","        * @description Passthrough to the DD.Delegate.ddplug method\r","        * @chainable\r","        */\r","        plug: function(cls, config) {\r","            //I don't like this.. Not at all, need to discuss with the team\r","            if (cls && cls.NAME.substring(0, 4).toLowerCase() === 'sort') {\r","                this.constructor.superclass.plug.call(this, cls, config);\r","            } else {\r","                this.delegate.dd.plug(cls, config);\r","            }\r","            return this;\r","        },\r","        /**\r","        * @method sync\r","        * @description Passthrough to the DD.Delegate syncTargets method.\r","        * @chainable\r","        */\r","        sync: function() {\r","            this.delegate.syncTargets();\r","            return this;\r","        },\r","        destructor: function() {\r","            this.drop.destroy();\r","            this.delegate.destroy();\r","            Sortable.unreg(this, this.get(ID));\r","        },\r","        /**\r","        * @method join\r","        * @param Sortable sel The Sortable list to join with\r","        * @param String type The type of join to do: full, inner, outer, none. Default: full\r","        * @description Join this Sortable with another Sortable instance.\r","        * <ul>\r","        *   <li>full: Exchange nodes with both lists.</li>\r","        *   <li>inner: Items can go into this list from the joined list.</li>\r","        *   <li>outer: Items can go out of the joined list into this list.</li>\r","        *   <li>none: Removes the join.</li>\r","        * </ul>\r","        * @chainable\r","        */\r","        join: function(sel, type) {\r","            if (!(sel instanceof Y.Sortable)) {\r","                Y.error('Sortable: join needs a Sortable Instance');\r","                return this;\r","            }\r","            if (!type) {\r","                type = 'full';\r","            }\r","            type = type.toLowerCase();\r","            var method = '_join_' + type;\r","\r","            if (this[method]) {\r","                this[method](sel);\r","            }\r","            \r","            return this;\r","        },\r","        /**\r","        * @private\r","        * @method _join_none\r","        * @param Sortable sel The Sortable to remove the join from\r","        * @description Removes the join with the passed Sortable.\r","        */\r","        _join_none: function(sel) {\r","            this.delegate.dd.removeFromGroup(sel.get(ID));\r","            sel.delegate.dd.removeFromGroup(this.get(ID));\r","        },\r","        /**\r","        * @private\r","        * @method _join_full\r","        * @param Sortable sel The Sortable list to join with\r","        * @description Joins both of the Sortables together.\r","        */\r","        _join_full: function(sel) {\r","            this.delegate.dd.addToGroup(sel.get(ID));\r","            sel.delegate.dd.addToGroup(this.get(ID));\r","        },\r","        /**\r","        * @private\r","        * @method _join_outer\r","        * @param Sortable sel The Sortable list to join with\r","        * @description Allows this Sortable to accept items from the passed Sortable.\r","        */\r","        _join_outer: function(sel) {\r","            this.delegate.dd.addToGroup(sel.get(ID));\r","        },\r","        /**\r","        * @private\r","        * @method _join_inner\r","        * @param Sortable sel The Sortable list to join with\r","        * @description Allows this Sortable to give items to the passed Sortable.\r","        */\r","        _join_inner: function(sel) {\r","            sel.delegate.dd.addToGroup(this.get(ID));\r","        },\r","        /**\r","        * A custom callback to allow a user to extract some sort of id or any other data\r","        * from the node to use in the \"ordering list\" and then that data should be returned from the callback.\r","        * @method getOrdering\r","        * @param Function callback\r","        * @return Array\r","        */\r","        getOrdering: function(callback) {\r","            var ordering = [];\r","\r","            if (!Y.Lang.isFunction(callback)) {\r","                callback = function (node) {\r","                    return node;\r","                };\r","            }\r","\r","            Y.one(this.get(CONT)).all(this.get(NODES)).each(function(node) {\r","                ordering.push(callback(node));\r","            });\r","            return ordering;\r","       }\r","    }, {\r","        NAME: 'sortable',\r","        ATTRS: {\r","            /**\r","            * @attribute handles\r","            * @description Drag handles to pass on to the internal DD.Delegate instance.\r","            * @type Array\r","            */\r","            handles: {\r","                value: false\r","            },\r","            /**\r","            * @attribute container\r","            * @description A selector query to get the container to listen for mousedown events on. All \"nodes\" should be a child of this container.\r","            * @type String\r","            */\r","            container: {\r","                value: 'body'\r","            },\r","            /**\r","            * @attribute nodes\r","            * @description A selector query to get the children of the \"container\" to make draggable elements from.\r","            * @type String\r","            */\r","            nodes: {\r","                value: '.dd-draggable'\r","            },\r","            /**\r","            * @attribute opacity\r","            * @description The opacity to change the proxy item to when dragging.\r","            * @type String\r","            */\r","            opacity: {\r","                value: '.75'\r","            },\r","            /**\r","            * @attribute opacityNode\r","            * @description The node to set opacity on when dragging (dragNode or currentNode). Default: currentNode.\r","            * @type String\r","            */\r","            opacityNode: {\r","                value: 'currentNode'\r","            },\r","            /**\r","            * @attribute id\r","            * @description The id of this Sortable, used to get a reference to this Sortable list from another list.\r","            * @type String\r","            */\r","            id: {\r","                value: null\r","            },\r","            /**\r","            * @attribute moveType\r","            * @description How should an item move to another list: insert, swap, move, copy. Default: insert\r","            * @type String\r","            */\r","            moveType: {\r","                value: 'insert'\r","            },\r","            /**\r","            * @attribute invalid\r","            * @description A selector string to test if a list item is invalid and not sortable\r","            * @type String\r","            */\r","            invalid: {\r","                value: ''\r","            }\r","        },\r","        /**\r","        * @static\r","        * @property _sortables\r","        * @private\r","        * @type Object\r","        * @description Hash map of all Sortables on the page.\r","        */\r","        _sortables: {},\r","        /**\r","        * @static\r","        * @method _test\r","        * @param {Node} node The node instance to test.\r","        * @param {String|Node} test The node instance or selector string to test against.\r","        * @description Test a Node or a selector for the container\r","        */\r","        _test: function(node, test) {\r","            var ret;\r","            if (test instanceof Y.Node) {\r","                ret = (test === node);\r","            } else {\r","                ret = node.test(test);\r","            }\r","            return ret;\r","        },\r","        /**\r","        * @static\r","        * @method getSortable\r","        * @param {String|Node} node The node instance or selector string to use to find a Sortable instance.\r","        * @description Get a Sortable instance back from a node reference or a selector string.\r","        */\r","        getSortable: function(node) {\r","            var s = null,\r","                id = null;\r","            node = Y.one(node);\r","            id = node.get(ID);\r","            if(id && Y.Sortable._sortables[id]) {\r","                return Y.Sortable._sortables[id];\r","            }\r","            Y.Object.each(Y.Sortable._sortables, function(v) {\r","                if (Y.Sortable._test(node, v.get(CONT))) {\r","                    s = v;\r","                }\r","            });\r","            return s;\r","        },\r","        /**\r","        * @static\r","        * @method reg\r","        * @param Sortable s A Sortable instance.\r","        * @param String id (optional) The id of the sortable instance.\r","        * @description Register a Sortable instance with the singleton to allow lookups later.\r","        */\r","        reg: function(s, id) {\r","            if (!id) {\r","                id = s.get(ID);\r","            }\r","            Y.Sortable._sortables[id] = s;\r","        },\r","        /**\r","        * @static\r","        * @method unreg\r","        * @param Sortable s A Sortable instance.\r","        * @param String id (optional) The id of the sortable instance.\r","        * @description Unregister a Sortable instance with the singleton.\r","        */\r","        unreg: function(s, id) {\r","            if (!id) {\r","                id = s.get(ID);\r","            }\r","            if (id && Y.Sortable._sortables[id]) {\r","                delete Y.Sortable._sortables[id];\r","                return;\r","            }\r","            Y.Object.each(Y.Sortable._sortables, function(v, k) {\r","                if (v === s) {\r","                    delete Sortable._sortables[k];\r","                }\r","            });\r","        }\r","    });\r","\r","    Y.Sortable = Sortable;\r","\r","    /**\r","    * @event copy\r","    * @description A Sortable node was moved with a copy.\r","    * @param {Event.Facade} event An Event Facade object\r","    * @param {Boolean} event.same Moved to the same list.\r","    * @param {DD.Drag} event.drag The drag instance.\r","    * @param {DD.Drop} event.drop The drop instance.\r","    * @type {Event.Custom}\r","    */\r","    /**\r","    * @event move\r","    * @description A Sortable node was moved with a move.\r","    * @param {Event.Facade} event An Event Facade object with the following specific property added:\r","    * @param {Boolean} event.same Moved to the same list.\r","    * @param {DD.Drag} event.drag The drag instance.\r","    * @param {DD.Drop} event.drop The drop instance.\r","    * @type {Event.Custom}\r","    */\r","    /**\r","    * @event insert\r","    * @description A Sortable node was moved with an insert.\r","    * @param {Event.Facade} event An Event Facade object with the following specific property added:\r","    * @param {Boolean} event.same Moved to the same list.\r","    * @param {DD.Drag} event.drag The drag instance.\r","    * @param {DD.Drop} event.drop The drop instance.\r","    * @type {Event.Custom}\r","    */\r","    /**\r","    * @event swap\r","    * @description A Sortable node was moved with a swap.\r","    * @param {Event.Facade} event An Event Facade object with the following specific property added:\r","    * @param {Boolean} event.same Moved to the same list.\r","    * @param {DD.Drag} event.drag The drag instance.\r","    * @param {DD.Drop} event.drop The drop instance.\r","    * @type {Event.Custom}\r","    */\r","    /**\r","    * @event moved\r","    * @description A Sortable node was moved.\r","    * @param {Event.Facade} event An Event Facade object with the following specific property added:\r","    * @param {Boolean} event.same Moved to the same list.\r","    * @param {DD.Drag} event.drag The drag instance.\r","    * @param {DD.Drop} event.drop The drop instance.\r","    * @type {Event.Custom}\r","    */\r","\r","","","}, '@VERSION@', {\"requires\": [\"dd-delegate\", \"dd-drop-plugin\", \"dd-proxy\"]});","","}());"]};
}
var __cov_cWknOFtrFZo1Tv0J0Rh61g = __coverage__['build/sortable/sortable.js'];
__cov_cWknOFtrFZo1Tv0J0Rh61g.s['1']++;YUI.add('sortable',function(Y,NAME){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['1']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['2']++;var Sortable=function(){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['2']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['3']++;Sortable.superclass.constructor.apply(this,arguments);},CURRENT_NODE='currentNode',OPACITY_NODE='opacityNode',CONT='container',ID='id',ZINDEX='zIndex',OPACITY='opacity',PARENT_NODE='parentNode',NODES='nodes',NODE='node';__cov_cWknOFtrFZo1Tv0J0Rh61g.s['4']++;Y.extend(Sortable,Y.Base,{delegate:null,drop:null,initializer:function(){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['3']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['5']++;var id='sortable-'+Y.guid(),delConfig={container:this.get(CONT),nodes:this.get(NODES),target:true,invalid:this.get('invalid'),dragConfig:{groups:[id]}},del;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['6']++;if(this.get('handles')){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['1'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['7']++;delConfig.handles=this.get('handles');}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['1'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['8']++;del=new Y.DD.Delegate(delConfig);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['9']++;this.set(ID,id);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['10']++;del.dd.plug(Y.Plugin.DDProxy,{moveOnEnd:false,cloneNode:true});__cov_cWknOFtrFZo1Tv0J0Rh61g.s['11']++;this.drop=new Y.DD.Drop({node:this.get(CONT),bubbleTarget:del,groups:del.dd.get('groups')});__cov_cWknOFtrFZo1Tv0J0Rh61g.s['12']++;this.drop.on('drop:enter',Y.bind(this._onDropEnter,this));__cov_cWknOFtrFZo1Tv0J0Rh61g.s['13']++;del.on({'drag:start':Y.bind(this._onDragStart,this),'drag:end':Y.bind(this._onDragEnd,this),'drag:over':Y.bind(this._onDragOver,this),'drag:drag':Y.bind(this._onDrag,this)});__cov_cWknOFtrFZo1Tv0J0Rh61g.s['14']++;this.delegate=del;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['15']++;Sortable.reg(this,id);},_up:null,_y:null,_onDrag:function(e){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['4']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['16']++;if(e.pageY<this._y){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['2'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['17']++;this._up=true;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['2'][1]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['18']++;if(e.pageY>this._y){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['3'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['19']++;this._up=false;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['3'][1]++;}}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['20']++;this._y=e.pageY;},_onDropEnter:function(e){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['5']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['21']++;var dropNode=e.drop.get(NODE),dragNode=e.drag.get(NODE);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['22']++;if((__cov_cWknOFtrFZo1Tv0J0Rh61g.b['5'][0]++,!dropNode.test(this.get(NODES)))&&(__cov_cWknOFtrFZo1Tv0J0Rh61g.b['5'][1]++,!dragNode.get(PARENT_NODE).compareTo(dropNode))){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['4'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['23']++;dropNode.append(dragNode);}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['4'][1]++;}},_onDragOver:function(e){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['6']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['24']++;if(!e.drop.get(NODE).test(this.get(NODES))){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['6'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['25']++;return;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['6'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['26']++;if(e.drag.get(NODE)===e.drop.get(NODE)){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['7'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['27']++;return;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['7'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['28']++;if(e.drag.get(NODE).contains(e.drop.get(NODE))){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['8'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['29']++;return;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['8'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['30']++;var same=false,dir,oldNode,newNode,dropsort,dropNode,moveType=this.get('moveType').toLowerCase();__cov_cWknOFtrFZo1Tv0J0Rh61g.s['31']++;if(e.drag.get(NODE).get(PARENT_NODE).contains(e.drop.get(NODE))){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['9'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['32']++;same=true;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['9'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['33']++;if((__cov_cWknOFtrFZo1Tv0J0Rh61g.b['11'][0]++,same)&&(__cov_cWknOFtrFZo1Tv0J0Rh61g.b['11'][1]++,moveType==='move')){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['10'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['34']++;moveType='insert';}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['10'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['35']++;switch(moveType){case'insert':__cov_cWknOFtrFZo1Tv0J0Rh61g.b['12'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['36']++;dir=this._up?(__cov_cWknOFtrFZo1Tv0J0Rh61g.b['13'][0]++,'before'):(__cov_cWknOFtrFZo1Tv0J0Rh61g.b['13'][1]++,'after');__cov_cWknOFtrFZo1Tv0J0Rh61g.s['37']++;dropNode=e.drop.get(NODE);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['38']++;if(Y.Sortable._test(dropNode,this.get(CONT))){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['14'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['39']++;dropNode.append(e.drag.get(NODE));}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['14'][1]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['40']++;dropNode.insert(e.drag.get(NODE),dir);}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['41']++;break;case'swap':__cov_cWknOFtrFZo1Tv0J0Rh61g.b['12'][1]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['42']++;Y.DD.DDM.swapNode(e.drag,e.drop);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['43']++;break;case'move':__cov_cWknOFtrFZo1Tv0J0Rh61g.b['12'][2]++;case'copy':__cov_cWknOFtrFZo1Tv0J0Rh61g.b['12'][3]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['44']++;dropsort=Y.Sortable.getSortable(e.drop.get(NODE).get(PARENT_NODE));__cov_cWknOFtrFZo1Tv0J0Rh61g.s['45']++;if(!dropsort){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['15'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['46']++;return;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['15'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['47']++;Y.DD.DDM.getDrop(e.drag.get(NODE)).addToGroup(dropsort.get(ID));__cov_cWknOFtrFZo1Tv0J0Rh61g.s['48']++;if(same){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['16'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['49']++;Y.DD.DDM.swapNode(e.drag,e.drop);}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['16'][1]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['50']++;if(this.get('moveType')==='copy'){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['17'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['51']++;oldNode=e.drag.get(NODE);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['52']++;newNode=oldNode.cloneNode(true);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['53']++;newNode.set(ID,'');__cov_cWknOFtrFZo1Tv0J0Rh61g.s['54']++;e.drag.set(NODE,newNode);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['55']++;dropsort.delegate.createDrop(newNode,[dropsort.get(ID)]);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['56']++;oldNode.setStyles({top:'',left:''});}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['17'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['57']++;e.drop.get(NODE).insert(e.drag.get(NODE),'before');}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['58']++;break;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['59']++;this.fire(moveType,{same:same,drag:e.drag,drop:e.drop});__cov_cWknOFtrFZo1Tv0J0Rh61g.s['60']++;this.fire('moved',{same:same,drag:e.drag,drop:e.drop});},_onDragStart:function(){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['7']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['61']++;var del=this.delegate,lastNode=del.get('lastNode');__cov_cWknOFtrFZo1Tv0J0Rh61g.s['62']++;if((__cov_cWknOFtrFZo1Tv0J0Rh61g.b['19'][0]++,lastNode)&&(__cov_cWknOFtrFZo1Tv0J0Rh61g.b['19'][1]++,lastNode.getDOMNode())){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['18'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['63']++;lastNode.setStyle(ZINDEX,'');}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['18'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['64']++;del.get(this.get(OPACITY_NODE)).setStyle(OPACITY,this.get(OPACITY));__cov_cWknOFtrFZo1Tv0J0Rh61g.s['65']++;del.get(CURRENT_NODE).setStyle(ZINDEX,'999');},_onDragEnd:function(){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['8']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['66']++;this.delegate.get(this.get(OPACITY_NODE)).setStyle(OPACITY,1);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['67']++;this.delegate.get(CURRENT_NODE).setStyles({top:'',left:''});__cov_cWknOFtrFZo1Tv0J0Rh61g.s['68']++;this.sync();},plug:function(cls,config){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['9']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['69']++;if((__cov_cWknOFtrFZo1Tv0J0Rh61g.b['21'][0]++,cls)&&(__cov_cWknOFtrFZo1Tv0J0Rh61g.b['21'][1]++,cls.NAME.substring(0,4).toLowerCase()==='sort')){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['20'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['70']++;this.constructor.superclass.plug.call(this,cls,config);}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['20'][1]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['71']++;this.delegate.dd.plug(cls,config);}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['72']++;return this;},sync:function(){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['10']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['73']++;this.delegate.syncTargets();__cov_cWknOFtrFZo1Tv0J0Rh61g.s['74']++;return this;},destructor:function(){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['11']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['75']++;this.drop.destroy();__cov_cWknOFtrFZo1Tv0J0Rh61g.s['76']++;this.delegate.destroy();__cov_cWknOFtrFZo1Tv0J0Rh61g.s['77']++;Sortable.unreg(this,this.get(ID));},join:function(sel,type){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['12']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['78']++;if(!(sel instanceof Y.Sortable)){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['22'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['79']++;Y.error('Sortable: join needs a Sortable Instance');__cov_cWknOFtrFZo1Tv0J0Rh61g.s['80']++;return this;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['22'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['81']++;if(!type){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['23'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['82']++;type='full';}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['23'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['83']++;type=type.toLowerCase();__cov_cWknOFtrFZo1Tv0J0Rh61g.s['84']++;var method='_join_'+type;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['85']++;if(this[method]){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['24'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['86']++;this[method](sel);}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['24'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['87']++;return this;},_join_none:function(sel){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['13']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['88']++;this.delegate.dd.removeFromGroup(sel.get(ID));__cov_cWknOFtrFZo1Tv0J0Rh61g.s['89']++;sel.delegate.dd.removeFromGroup(this.get(ID));},_join_full:function(sel){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['14']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['90']++;this.delegate.dd.addToGroup(sel.get(ID));__cov_cWknOFtrFZo1Tv0J0Rh61g.s['91']++;sel.delegate.dd.addToGroup(this.get(ID));},_join_outer:function(sel){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['15']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['92']++;this.delegate.dd.addToGroup(sel.get(ID));},_join_inner:function(sel){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['16']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['93']++;sel.delegate.dd.addToGroup(this.get(ID));},getOrdering:function(callback){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['17']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['94']++;var ordering=[];__cov_cWknOFtrFZo1Tv0J0Rh61g.s['95']++;if(!Y.Lang.isFunction(callback)){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['25'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['96']++;callback=function(node){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['18']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['97']++;return node;};}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['25'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['98']++;Y.one(this.get(CONT)).all(this.get(NODES)).each(function(node){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['19']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['99']++;ordering.push(callback(node));});__cov_cWknOFtrFZo1Tv0J0Rh61g.s['100']++;return ordering;}},{NAME:'sortable',ATTRS:{handles:{value:false},container:{value:'body'},nodes:{value:'.dd-draggable'},opacity:{value:'.75'},opacityNode:{value:'currentNode'},id:{value:null},moveType:{value:'insert'},invalid:{value:''}},_sortables:{},_test:function(node,test){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['20']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['101']++;var ret;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['102']++;if(test instanceof Y.Node){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['26'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['103']++;ret=test===node;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['26'][1]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['104']++;ret=node.test(test);}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['105']++;return ret;},getSortable:function(node){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['21']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['106']++;var s=null,id=null;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['107']++;node=Y.one(node);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['108']++;id=node.get(ID);__cov_cWknOFtrFZo1Tv0J0Rh61g.s['109']++;if((__cov_cWknOFtrFZo1Tv0J0Rh61g.b['28'][0]++,id)&&(__cov_cWknOFtrFZo1Tv0J0Rh61g.b['28'][1]++,Y.Sortable._sortables[id])){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['27'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['110']++;return Y.Sortable._sortables[id];}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['27'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['111']++;Y.Object.each(Y.Sortable._sortables,function(v){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['22']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['112']++;if(Y.Sortable._test(node,v.get(CONT))){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['29'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['113']++;s=v;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['29'][1]++;}});__cov_cWknOFtrFZo1Tv0J0Rh61g.s['114']++;return s;},reg:function(s,id){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['23']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['115']++;if(!id){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['30'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['116']++;id=s.get(ID);}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['30'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['117']++;Y.Sortable._sortables[id]=s;},unreg:function(s,id){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['24']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['118']++;if(!id){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['31'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['119']++;id=s.get(ID);}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['31'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['120']++;if((__cov_cWknOFtrFZo1Tv0J0Rh61g.b['33'][0]++,id)&&(__cov_cWknOFtrFZo1Tv0J0Rh61g.b['33'][1]++,Y.Sortable._sortables[id])){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['32'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['121']++;delete Y.Sortable._sortables[id];__cov_cWknOFtrFZo1Tv0J0Rh61g.s['122']++;return;}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['32'][1]++;}__cov_cWknOFtrFZo1Tv0J0Rh61g.s['123']++;Y.Object.each(Y.Sortable._sortables,function(v,k){__cov_cWknOFtrFZo1Tv0J0Rh61g.f['25']++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['124']++;if(v===s){__cov_cWknOFtrFZo1Tv0J0Rh61g.b['34'][0]++;__cov_cWknOFtrFZo1Tv0J0Rh61g.s['125']++;delete Sortable._sortables[k];}else{__cov_cWknOFtrFZo1Tv0J0Rh61g.b['34'][1]++;}});}});__cov_cWknOFtrFZo1Tv0J0Rh61g.s['126']++;Y.Sortable=Sortable;},'@VERSION@',{'requires':['dd-delegate','dd-drop-plugin','dd-proxy']});

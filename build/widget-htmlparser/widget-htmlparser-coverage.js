if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/widget-htmlparser/widget-htmlparser.js']) {
   __coverage__['build/widget-htmlparser/widget-htmlparser.js'] = {"path":"build/widget-htmlparser/widget-htmlparser.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":29},"end":{"line":1,"column":48}}},"2":{"name":"(anonymous_2)","line":81,"loc":{"start":{"line":81,"column":18},"end":{"line":81,"column":32}}},"3":{"name":"(anonymous_3)","line":90,"loc":{"start":{"line":90,"column":25},"end":{"line":90,"column":56}}},"4":{"name":"(anonymous_4)","line":102,"loc":{"start":{"line":102,"column":19},"end":{"line":102,"column":36}}},"5":{"name":"(anonymous_5)","line":111,"loc":{"start":{"line":111,"column":34},"end":{"line":111,"column":52}}},"6":{"name":"(anonymous_6)","line":146,"loc":{"start":{"line":146,"column":22},"end":{"line":146,"column":33}}},"7":{"name":"(anonymous_7)","line":159,"loc":{"start":{"line":159,"column":21},"end":{"line":159,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":177,"column":47}},"2":{"start":{"line":11,"column":0},"end":{"line":16,"column":31}},"3":{"start":{"line":41,"column":0},"end":{"line":41,"column":24}},"4":{"start":{"line":56,"column":0},"end":{"line":58,"column":2}},"5":{"start":{"line":67,"column":0},"end":{"line":72,"column":2}},"6":{"start":{"line":74,"column":0},"end":{"line":174,"column":3}},"7":{"start":{"line":82,"column":8},"end":{"line":82,"column":44}},"8":{"start":{"line":91,"column":8},"end":{"line":91,"column":64}},"9":{"start":{"line":104,"column":8},"end":{"line":108,"column":16}},"10":{"start":{"line":110,"column":8},"end":{"line":132,"column":9}},"11":{"start":{"line":111,"column":12},"end":{"line":131,"column":15}},"12":{"start":{"line":112,"column":16},"end":{"line":112,"column":27}},"13":{"start":{"line":114,"column":16},"end":{"line":125,"column":17}},"14":{"start":{"line":115,"column":20},"end":{"line":115,"column":50}},"15":{"start":{"line":117,"column":20},"end":{"line":124,"column":21}},"16":{"start":{"line":118,"column":24},"end":{"line":118,"column":48}},"17":{"start":{"line":119,"column":24},"end":{"line":121,"column":25}},"18":{"start":{"line":120,"column":28},"end":{"line":120,"column":39}},"19":{"start":{"line":123,"column":24},"end":{"line":123,"column":45}},"20":{"start":{"line":127,"column":16},"end":{"line":130,"column":17}},"21":{"start":{"line":128,"column":20},"end":{"line":128,"column":54}},"22":{"start":{"line":129,"column":20},"end":{"line":129,"column":42}},"23":{"start":{"line":133,"column":8},"end":{"line":133,"column":74}},"24":{"start":{"line":147,"column":8},"end":{"line":147,"column":42}},"25":{"start":{"line":148,"column":8},"end":{"line":148,"column":56}},"26":{"start":{"line":162,"column":8},"end":{"line":164,"column":17}},"27":{"start":{"line":166,"column":8},"end":{"line":171,"column":9}},"28":{"start":{"line":167,"column":12},"end":{"line":167,"column":39}},"29":{"start":{"line":168,"column":12},"end":{"line":170,"column":13}},"30":{"start":{"line":169,"column":16},"end":{"line":169,"column":39}},"31":{"start":{"line":172,"column":8},"end":{"line":172,"column":22}}},"branchMap":{"1":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":15},"end":{"line":82,"column":18}},{"start":{"line":82,"column":22},"end":{"line":82,"column":43}}]},"2":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":29},"end":{"line":91,"column":57}},{"start":{"line":91,"column":60},"end":{"line":91,"column":63}}]},"3":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]},"4":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":18}},{"start":{"line":110,"column":22},"end":{"line":110,"column":29}}]},"5":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":16},"end":{"line":114,"column":16}},{"start":{"line":114,"column":16},"end":{"line":114,"column":16}}]},"6":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":20},"end":{"line":117,"column":20}},{"start":{"line":117,"column":20},"end":{"line":117,"column":20}}]},"7":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":24},"end":{"line":119,"column":24}},{"start":{"line":119,"column":24},"end":{"line":119,"column":24}}]},"8":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":16},"end":{"line":127,"column":16}},{"start":{"line":127,"column":16},"end":{"line":127,"column":16}}]},"9":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":20},"end":{"line":127,"column":32}},{"start":{"line":127,"column":36},"end":{"line":127,"column":53}}]},"10":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":35},"end":{"line":128,"column":47}},{"start":{"line":128,"column":51},"end":{"line":128,"column":53}}]},"11":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":41},"end":{"line":148,"column":48}},{"start":{"line":148,"column":51},"end":{"line":148,"column":55}}]},"12":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":12},"end":{"line":168,"column":12}},{"start":{"line":168,"column":12},"end":{"line":168,"column":12}}]}},"code":["(function () { YUI.add('widget-htmlparser', function (Y, NAME) {","","/**\r"," * Adds HTML Parser support to the base Widget class\r"," *\r"," * @module widget\r"," * @submodule widget-htmlparser\r"," * @for Widget\r"," */\r","\r","var Widget = Y.Widget,\r","    Node = Y.Node,\r","    Lang = Y.Lang,\r","\r","    SRC_NODE = \"srcNode\",\r","    CONTENT_BOX = \"contentBox\";\r","\r","/**\r"," * Object hash, defining how attribute values are to be parsed from\r"," * markup contained in the widget's content box. e.g.:\r"," * <pre>\r"," *   {\r"," *       // Set single Node references using selector syntax \r"," *       // (selector is run through node.one)\r"," *       titleNode: \"span.yui-title\",\r"," *       // Set NodeList references using selector syntax \r"," *       // (array indicates selector is to be run through node.all)\r"," *       listNodes: [\"li.yui-item\"],\r"," *       // Set other attribute types, using a parse function. \r"," *       // Context is set to the widget instance.\r"," *       label: function(contentBox) {\r"," *           return contentBox.one(\"span.title\").get(\"innerHTML\");\r"," *       }\r"," *   }\r"," * </pre>\r"," * \r"," * @property HTML_PARSER\r"," * @type Object\r"," * @static\r"," */\r","Widget.HTML_PARSER = {};\r","\r","/**\r"," * The build configuration for the Widget class.\r"," * <p>\r"," * Defines the static fields which need to be aggregated,\r"," * when this class is used as the main class passed to \r"," * the <a href=\"Base.html#method_build\">Base.build</a> method.\r"," * </p>\r"," * @property _buildCfg\r"," * @type Object\r"," * @static\r"," * @final\r"," * @private\r"," */\r","Widget._buildCfg = {\r","    aggregates : [\"HTML_PARSER\"]\r","};\r","\r","/**\r"," * The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition\r"," *\r"," * @attribute srcNode\r"," * @type String | Node\r"," * @writeOnce\r"," */\r","Widget.ATTRS[SRC_NODE] = {\r","    value: null,\r","    setter: Node.one,\r","    getter: \"_getSrcNode\",\r","    writeOnce: true\r","};\r","\r","Y.mix(Widget.prototype, {\r","\r","    /**\r","     * @method _getSrcNode\r","     * @protected\r","     * @return {Node} The Node to apply HTML_PARSER to\r","     */\r","    _getSrcNode : function(val) {\r","        return val || this.get(CONTENT_BOX);\r","    },\r","\r","    /**\r","     * @method _applyParsedConfig\r","     * @protected\r","     * @return {Object} The merged configuration literal\r","     */\r","    _applyParsedConfig : function(node, cfg, parsedCfg) {\r","        return (parsedCfg) ? Y.mix(cfg, parsedCfg, false) : cfg;\r","    },\r","\r","    /**\r","     * Utility method used to apply the <code>HTML_PARSER</code> configuration for the \r","     * instance, to retrieve config data values.\r","     *\r","     * @method _applyParser\r","     * @protected\r","     * @param config {Object} User configuration object (will be populated with values from Node) \r","     */\r","    _applyParser : function(config) {\r","\r","        var widget = this,\r","            srcNode = this._getNodeToParse(),\r","            schema = widget._getHtmlParser(),\r","            parsedConfig,\r","            val;\r","\r","        if (schema && srcNode) {\r","            Y.Object.each(schema, function(v, k, o) {\r","                val = null;\r","\r","                if (Lang.isFunction(v)) {\r","                    val = v.call(widget, srcNode);\r","                } else {\r","                    if (Lang.isArray(v)) {\r","                        val = srcNode.all(v[0]);\r","                        if (val.isEmpty()) {\r","                            val = null;\r","                        }\r","                    } else {\r","                        val = srcNode.one(v);\r","                    }\r","                }\r","\r","                if (val !== null && val !== undefined) {\r","                    parsedConfig = parsedConfig || {};\r","                    parsedConfig[k] = val;\r","                }\r","            });\r","        }\r","        config = widget._applyParsedConfig(srcNode, config, parsedConfig);\r","    },\r","\r","    /**\r","     * Determines whether we have a node reference which we should try and parse.\r","     * \r","     * The current implementation does not parse nodes generated from CONTENT_TEMPLATE,\r","     * only explicitly set srcNode, or contentBox attributes.\r","     * \r","     * @method _getNodeToParse\r","     * @return {Node} The node reference to apply HTML_PARSER to.\r","     * @private\r","     */\r","    _getNodeToParse : function() {\r","        var srcNode = this.get(\"srcNode\");\r","        return (!this._cbFromTemplate) ? srcNode : null;\r","    },\r","\r","    /**\r","     * Gets the HTML_PARSER definition for this instance, by merging HTML_PARSER\r","     * definitions across the class hierarchy.\r","     *\r","     * @private\r","     * @method _getHtmlParser\r","     * @return {Object} HTML_PARSER definition for this instance\r","     */\r","    _getHtmlParser : function() {\r","        // Removed caching for kweight. This is a private method\r","        // and only called once so don't need to cache HTML_PARSER\r","        var classes = this._getClasses(),\r","            parser = {},\r","            i, p;\r","\r","        for (i = classes.length - 1; i >= 0; i--) {\r","            p = classes[i].HTML_PARSER;\r","            if (p) {\r","                Y.mix(parser, p, true);\r","            }\r","        }\r","        return parser;\r","    }\r","});\r","","","}, '@VERSION@', {\"requires\": [\"widget-base\"]});","","}());"]};
}
var __cov_pHKc0qbrmtUYA$EA31q4VA = __coverage__['build/widget-htmlparser/widget-htmlparser.js'];
__cov_pHKc0qbrmtUYA$EA31q4VA.s['1']++;YUI.add('widget-htmlparser',function(Y,NAME){__cov_pHKc0qbrmtUYA$EA31q4VA.f['1']++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['2']++;var Widget=Y.Widget,Node=Y.Node,Lang=Y.Lang,SRC_NODE='srcNode',CONTENT_BOX='contentBox';__cov_pHKc0qbrmtUYA$EA31q4VA.s['3']++;Widget.HTML_PARSER={};__cov_pHKc0qbrmtUYA$EA31q4VA.s['4']++;Widget._buildCfg={aggregates:['HTML_PARSER']};__cov_pHKc0qbrmtUYA$EA31q4VA.s['5']++;Widget.ATTRS[SRC_NODE]={value:null,setter:Node.one,getter:'_getSrcNode',writeOnce:true};__cov_pHKc0qbrmtUYA$EA31q4VA.s['6']++;Y.mix(Widget.prototype,{_getSrcNode:function(val){__cov_pHKc0qbrmtUYA$EA31q4VA.f['2']++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['7']++;return(__cov_pHKc0qbrmtUYA$EA31q4VA.b['1'][0]++,val)||(__cov_pHKc0qbrmtUYA$EA31q4VA.b['1'][1]++,this.get(CONTENT_BOX));},_applyParsedConfig:function(node,cfg,parsedCfg){__cov_pHKc0qbrmtUYA$EA31q4VA.f['3']++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['8']++;return parsedCfg?(__cov_pHKc0qbrmtUYA$EA31q4VA.b['2'][0]++,Y.mix(cfg,parsedCfg,false)):(__cov_pHKc0qbrmtUYA$EA31q4VA.b['2'][1]++,cfg);},_applyParser:function(config){__cov_pHKc0qbrmtUYA$EA31q4VA.f['4']++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['9']++;var widget=this,srcNode=this._getNodeToParse(),schema=widget._getHtmlParser(),parsedConfig,val;__cov_pHKc0qbrmtUYA$EA31q4VA.s['10']++;if((__cov_pHKc0qbrmtUYA$EA31q4VA.b['4'][0]++,schema)&&(__cov_pHKc0qbrmtUYA$EA31q4VA.b['4'][1]++,srcNode)){__cov_pHKc0qbrmtUYA$EA31q4VA.b['3'][0]++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['11']++;Y.Object.each(schema,function(v,k,o){__cov_pHKc0qbrmtUYA$EA31q4VA.f['5']++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['12']++;val=null;__cov_pHKc0qbrmtUYA$EA31q4VA.s['13']++;if(Lang.isFunction(v)){__cov_pHKc0qbrmtUYA$EA31q4VA.b['5'][0]++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['14']++;val=v.call(widget,srcNode);}else{__cov_pHKc0qbrmtUYA$EA31q4VA.b['5'][1]++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['15']++;if(Lang.isArray(v)){__cov_pHKc0qbrmtUYA$EA31q4VA.b['6'][0]++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['16']++;val=srcNode.all(v[0]);__cov_pHKc0qbrmtUYA$EA31q4VA.s['17']++;if(val.isEmpty()){__cov_pHKc0qbrmtUYA$EA31q4VA.b['7'][0]++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['18']++;val=null;}else{__cov_pHKc0qbrmtUYA$EA31q4VA.b['7'][1]++;}}else{__cov_pHKc0qbrmtUYA$EA31q4VA.b['6'][1]++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['19']++;val=srcNode.one(v);}}__cov_pHKc0qbrmtUYA$EA31q4VA.s['20']++;if((__cov_pHKc0qbrmtUYA$EA31q4VA.b['9'][0]++,val!==null)&&(__cov_pHKc0qbrmtUYA$EA31q4VA.b['9'][1]++,val!==undefined)){__cov_pHKc0qbrmtUYA$EA31q4VA.b['8'][0]++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['21']++;parsedConfig=(__cov_pHKc0qbrmtUYA$EA31q4VA.b['10'][0]++,parsedConfig)||(__cov_pHKc0qbrmtUYA$EA31q4VA.b['10'][1]++,{});__cov_pHKc0qbrmtUYA$EA31q4VA.s['22']++;parsedConfig[k]=val;}else{__cov_pHKc0qbrmtUYA$EA31q4VA.b['8'][1]++;}});}else{__cov_pHKc0qbrmtUYA$EA31q4VA.b['3'][1]++;}__cov_pHKc0qbrmtUYA$EA31q4VA.s['23']++;config=widget._applyParsedConfig(srcNode,config,parsedConfig);},_getNodeToParse:function(){__cov_pHKc0qbrmtUYA$EA31q4VA.f['6']++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['24']++;var srcNode=this.get('srcNode');__cov_pHKc0qbrmtUYA$EA31q4VA.s['25']++;return!this._cbFromTemplate?(__cov_pHKc0qbrmtUYA$EA31q4VA.b['11'][0]++,srcNode):(__cov_pHKc0qbrmtUYA$EA31q4VA.b['11'][1]++,null);},_getHtmlParser:function(){__cov_pHKc0qbrmtUYA$EA31q4VA.f['7']++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['26']++;var classes=this._getClasses(),parser={},i,p;__cov_pHKc0qbrmtUYA$EA31q4VA.s['27']++;for(i=classes.length-1;i>=0;i--){__cov_pHKc0qbrmtUYA$EA31q4VA.s['28']++;p=classes[i].HTML_PARSER;__cov_pHKc0qbrmtUYA$EA31q4VA.s['29']++;if(p){__cov_pHKc0qbrmtUYA$EA31q4VA.b['12'][0]++;__cov_pHKc0qbrmtUYA$EA31q4VA.s['30']++;Y.mix(parser,p,true);}else{__cov_pHKc0qbrmtUYA$EA31q4VA.b['12'][1]++;}}__cov_pHKc0qbrmtUYA$EA31q4VA.s['31']++;return parser;}});},'@VERSION@',{'requires':['widget-base']});

if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/axis-base/axis-base.js']) {
   __coverage__['build/axis-base/axis-base.js'] = {"path":"build/axis-base/axis-base.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":21},"end":{"line":1,"column":40}}},"2":{"name":"Renderer","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":19}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":20},"end":{"line":39,"column":12}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":20},"end":{"line":45,"column":12}}},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":13},"end":{"line":79,"column":1}}},"6":{"name":"(anonymous_6)","line":94,"loc":{"start":{"line":94,"column":18},"end":{"line":95,"column":4}}},"7":{"name":"(anonymous_7)","line":101,"loc":{"start":{"line":101,"column":25},"end":{"line":102,"column":8}}},"8":{"name":"(anonymous_8)","line":122,"loc":{"start":{"line":122,"column":23},"end":{"line":123,"column":4}}},"9":{"name":"(anonymous_9)","line":167,"loc":{"start":{"line":167,"column":17},"end":{"line":168,"column":4}}},"10":{"name":"(anonymous_10)","line":181,"loc":{"start":{"line":181,"column":15},"end":{"line":181,"column":26}}},"11":{"name":"(anonymous_11)","line":192,"loc":{"start":{"line":192,"column":32},"end":{"line":193,"column":4}}},"12":{"name":"(anonymous_12)","line":219,"loc":{"start":{"line":219,"column":22},"end":{"line":219,"column":33}}},"13":{"name":"(anonymous_13)","line":294,"loc":{"start":{"line":294,"column":12},"end":{"line":295,"column":1}}},"14":{"name":"(anonymous_14)","line":308,"loc":{"start":{"line":308,"column":18},"end":{"line":309,"column":4}}},"15":{"name":"(anonymous_15)","line":328,"loc":{"start":{"line":328,"column":22},"end":{"line":329,"column":4}}},"16":{"name":"(anonymous_16)","line":350,"loc":{"start":{"line":350,"column":15},"end":{"line":351,"column":4}}},"17":{"name":"(anonymous_17)","line":368,"loc":{"start":{"line":368,"column":19},"end":{"line":369,"column":4}}},"18":{"name":"(anonymous_18)","line":388,"loc":{"start":{"line":388,"column":18},"end":{"line":389,"column":4}}},"19":{"name":"(anonymous_19)","line":425,"loc":{"start":{"line":425,"column":24},"end":{"line":426,"column":4}}},"20":{"name":"(anonymous_20)","line":442,"loc":{"start":{"line":442,"column":19},"end":{"line":443,"column":4}}},"21":{"name":"(anonymous_21)","line":460,"loc":{"start":{"line":460,"column":23},"end":{"line":461,"column":4}}},"22":{"name":"(anonymous_22)","line":475,"loc":{"start":{"line":475,"column":23},"end":{"line":476,"column":4}}},"23":{"name":"(anonymous_23)","line":494,"loc":{"start":{"line":494,"column":20},"end":{"line":495,"column":4}}},"24":{"name":"(anonymous_24)","line":518,"loc":{"start":{"line":518,"column":20},"end":{"line":519,"column":4}}},"25":{"name":"(anonymous_25)","line":531,"loc":{"start":{"line":531,"column":20},"end":{"line":532,"column":4}}},"26":{"name":"(anonymous_26)","line":548,"loc":{"start":{"line":548,"column":20},"end":{"line":549,"column":4}}},"27":{"name":"(anonymous_27)","line":561,"loc":{"start":{"line":561,"column":16},"end":{"line":562,"column":4}}},"28":{"name":"(anonymous_28)","line":581,"loc":{"start":{"line":581,"column":26},"end":{"line":582,"column":4}}},"29":{"name":"(anonymous_29)","line":603,"loc":{"start":{"line":603,"column":27},"end":{"line":604,"column":4}}},"30":{"name":"(anonymous_30)","line":627,"loc":{"start":{"line":627,"column":16},"end":{"line":628,"column":4}}},"31":{"name":"(anonymous_31)","line":644,"loc":{"start":{"line":644,"column":21},"end":{"line":644,"column":32}}},"32":{"name":"(anonymous_32)","line":658,"loc":{"start":{"line":658,"column":20},"end":{"line":659,"column":12}}},"33":{"name":"(anonymous_33)","line":709,"loc":{"start":{"line":709,"column":20},"end":{"line":710,"column":12}}},"34":{"name":"(anonymous_34)","line":723,"loc":{"start":{"line":723,"column":20},"end":{"line":724,"column":12}}},"35":{"name":"(anonymous_35)","line":737,"loc":{"start":{"line":737,"column":20},"end":{"line":738,"column":12}}},"36":{"name":"(anonymous_36)","line":769,"loc":{"start":{"line":769,"column":20},"end":{"line":770,"column":12}}},"37":{"name":"(anonymous_37)","line":826,"loc":{"start":{"line":826,"column":20},"end":{"line":827,"column":12}}},"38":{"name":"(anonymous_38)","line":843,"loc":{"start":{"line":843,"column":20},"end":{"line":844,"column":12}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":871,"column":112}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":20}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":21}},"4":{"start":{"line":29,"column":0},"end":{"line":57,"column":2}},"5":{"start":{"line":40,"column":16},"end":{"line":40,"column":72}},"6":{"start":{"line":41,"column":16},"end":{"line":41,"column":36}},"7":{"start":{"line":46,"column":16},"end":{"line":46,"column":52}},"8":{"start":{"line":58,"column":0},"end":{"line":58,"column":27}},"9":{"start":{"line":60,"column":0},"end":{"line":131,"column":2}},"10":{"start":{"line":80,"column":2},"end":{"line":80,"column":34}},"11":{"start":{"line":81,"column":8},"end":{"line":81,"column":52}},"12":{"start":{"line":96,"column":8},"end":{"line":99,"column":9}},"13":{"start":{"line":98,"column":12},"end":{"line":98,"column":19}},"14":{"start":{"line":100,"column":8},"end":{"line":100,"column":39}},"15":{"start":{"line":101,"column":8},"end":{"line":111,"column":17}},"16":{"start":{"line":103,"column":12},"end":{"line":110,"column":13}},"17":{"start":{"line":105,"column":16},"end":{"line":105,"column":66}},"18":{"start":{"line":109,"column":16},"end":{"line":109,"column":39}},"19":{"start":{"line":112,"column":8},"end":{"line":112,"column":25}},"20":{"start":{"line":124,"column":8},"end":{"line":129,"column":11}},"21":{"start":{"line":133,"column":0},"end":{"line":133,"column":33}},"22":{"start":{"line":134,"column":0},"end":{"line":134,"column":22}},"23":{"start":{"line":162,"column":0},"end":{"line":868,"column":3}},"24":{"start":{"line":169,"column":8},"end":{"line":169,"column":74}},"25":{"start":{"line":170,"column":8},"end":{"line":170,"column":74}},"26":{"start":{"line":171,"column":8},"end":{"line":171,"column":57}},"27":{"start":{"line":172,"column":8},"end":{"line":172,"column":74}},"28":{"start":{"line":182,"column":8},"end":{"line":182,"column":35}},"29":{"start":{"line":194,"column":8},"end":{"line":196,"column":14}},"30":{"start":{"line":197,"column":8},"end":{"line":206,"column":9}},"31":{"start":{"line":199,"column":12},"end":{"line":205,"column":13}},"32":{"start":{"line":201,"column":16},"end":{"line":204,"column":17}},"33":{"start":{"line":203,"column":20},"end":{"line":203,"column":35}},"34":{"start":{"line":207,"column":8},"end":{"line":210,"column":9}},"35":{"start":{"line":209,"column":12},"end":{"line":209,"column":44}},"36":{"start":{"line":296,"column":8},"end":{"line":296,"column":32}},"37":{"start":{"line":310,"column":8},"end":{"line":313,"column":30}},"38":{"start":{"line":314,"column":8},"end":{"line":318,"column":9}},"39":{"start":{"line":316,"column":12},"end":{"line":316,"column":26}},"40":{"start":{"line":317,"column":12},"end":{"line":317,"column":35}},"41":{"start":{"line":319,"column":8},"end":{"line":319,"column":24}},"42":{"start":{"line":330,"column":2},"end":{"line":331,"column":14}},"43":{"start":{"line":332,"column":8},"end":{"line":332,"column":24}},"44":{"start":{"line":333,"column":8},"end":{"line":339,"column":9}},"45":{"start":{"line":335,"column":12},"end":{"line":338,"column":13}},"46":{"start":{"line":337,"column":16},"end":{"line":337,"column":56}},"47":{"start":{"line":340,"column":8},"end":{"line":340,"column":42}},"48":{"start":{"line":352,"column":8},"end":{"line":352,"column":36}},"49":{"start":{"line":353,"column":8},"end":{"line":357,"column":9}},"50":{"start":{"line":355,"column":12},"end":{"line":355,"column":31}},"51":{"start":{"line":356,"column":12},"end":{"line":356,"column":37}},"52":{"start":{"line":370,"column":8},"end":{"line":371,"column":36}},"53":{"start":{"line":372,"column":8},"end":{"line":375,"column":9}},"54":{"start":{"line":374,"column":12},"end":{"line":374,"column":37}},"55":{"start":{"line":376,"column":8},"end":{"line":376,"column":33}},"56":{"start":{"line":390,"column":8},"end":{"line":394,"column":36}},"57":{"start":{"line":395,"column":8},"end":{"line":415,"column":9}},"58":{"start":{"line":397,"column":12},"end":{"line":397,"column":21}},"59":{"start":{"line":398,"column":12},"end":{"line":398,"column":31}},"60":{"start":{"line":399,"column":12},"end":{"line":406,"column":13}},"61":{"start":{"line":401,"column":16},"end":{"line":401,"column":31}},"62":{"start":{"line":402,"column":16},"end":{"line":405,"column":17}},"63":{"start":{"line":404,"column":20},"end":{"line":404,"column":54}},"64":{"start":{"line":408,"column":13},"end":{"line":415,"column":9}},"65":{"start":{"line":410,"column":12},"end":{"line":410,"column":30}},"66":{"start":{"line":414,"column":12},"end":{"line":414,"column":23}},"67":{"start":{"line":416,"column":8},"end":{"line":416,"column":19}},"68":{"start":{"line":427,"column":8},"end":{"line":428,"column":53}},"69":{"start":{"line":429,"column":8},"end":{"line":429,"column":32}},"70":{"start":{"line":430,"column":8},"end":{"line":430,"column":21}},"71":{"start":{"line":444,"column":8},"end":{"line":444,"column":23}},"72":{"start":{"line":445,"column":8},"end":{"line":449,"column":9}},"73":{"start":{"line":446,"column":12},"end":{"line":446,"column":34}},"74":{"start":{"line":448,"column":12},"end":{"line":448,"column":27}},"75":{"start":{"line":450,"column":8},"end":{"line":450,"column":26}},"76":{"start":{"line":462,"column":8},"end":{"line":462,"column":32}},"77":{"start":{"line":463,"column":8},"end":{"line":463,"column":41}},"78":{"start":{"line":464,"column":8},"end":{"line":464,"column":32}},"79":{"start":{"line":477,"column":8},"end":{"line":483,"column":10}},"80":{"start":{"line":484,"column":8},"end":{"line":484,"column":26}},"81":{"start":{"line":496,"column":8},"end":{"line":497,"column":38}},"82":{"start":{"line":500,"column":8},"end":{"line":503,"column":9}},"83":{"start":{"line":502,"column":12},"end":{"line":502,"column":21}},"84":{"start":{"line":504,"column":8},"end":{"line":507,"column":9}},"85":{"start":{"line":506,"column":12},"end":{"line":506,"column":35}},"86":{"start":{"line":508,"column":8},"end":{"line":508,"column":31}},"87":{"start":{"line":520,"column":8},"end":{"line":520,"column":45}},"88":{"start":{"line":521,"column":8},"end":{"line":521,"column":21}},"89":{"start":{"line":533,"column":8},"end":{"line":533,"column":42}},"90":{"start":{"line":534,"column":8},"end":{"line":537,"column":9}},"91":{"start":{"line":536,"column":12},"end":{"line":536,"column":35}},"92":{"start":{"line":538,"column":8},"end":{"line":538,"column":31}},"93":{"start":{"line":550,"column":8},"end":{"line":550,"column":43}},"94":{"start":{"line":551,"column":8},"end":{"line":551,"column":19}},"95":{"start":{"line":563,"column":8},"end":{"line":563,"column":49}},"96":{"start":{"line":583,"column":8},"end":{"line":585,"column":36}},"97":{"start":{"line":586,"column":8},"end":{"line":589,"column":9}},"98":{"start":{"line":588,"column":12},"end":{"line":588,"column":118}},"99":{"start":{"line":590,"column":8},"end":{"line":590,"column":27}},"100":{"start":{"line":605,"column":8},"end":{"line":610,"column":14}},"101":{"start":{"line":611,"column":8},"end":{"line":615,"column":9}},"102":{"start":{"line":613,"column":12},"end":{"line":613,"column":39}},"103":{"start":{"line":614,"column":12},"end":{"line":614,"column":43}},"104":{"start":{"line":616,"column":8},"end":{"line":616,"column":29}},"105":{"start":{"line":617,"column":8},"end":{"line":617,"column":26}},"106":{"start":{"line":629,"column":8},"end":{"line":629,"column":49}},"107":{"start":{"line":645,"column":16},"end":{"line":645,"column":40}},"108":{"start":{"line":660,"column":16},"end":{"line":663,"column":52}},"109":{"start":{"line":664,"column":16},"end":{"line":687,"column":17}},"110":{"start":{"line":666,"column":20},"end":{"line":666,"column":37}},"111":{"start":{"line":667,"column":20},"end":{"line":670,"column":21}},"112":{"start":{"line":669,"column":24},"end":{"line":669,"column":71}},"113":{"start":{"line":673,"column":21},"end":{"line":687,"column":17}},"114":{"start":{"line":675,"column":20},"end":{"line":675,"column":44}},"115":{"start":{"line":676,"column":20},"end":{"line":676,"column":61}},"116":{"start":{"line":680,"column":20},"end":{"line":686,"column":21}},"117":{"start":{"line":682,"column":24},"end":{"line":685,"column":25}},"118":{"start":{"line":684,"column":28},"end":{"line":684,"column":65}},"119":{"start":{"line":688,"column":16},"end":{"line":688,"column":49}},"120":{"start":{"line":689,"column":16},"end":{"line":689,"column":28}},"121":{"start":{"line":711,"column":16},"end":{"line":711,"column":34}},"122":{"start":{"line":725,"column":16},"end":{"line":725,"column":29}},"123":{"start":{"line":739,"column":16},"end":{"line":742,"column":17}},"124":{"start":{"line":741,"column":20},"end":{"line":741,"column":44}},"125":{"start":{"line":743,"column":16},"end":{"line":743,"column":41}},"126":{"start":{"line":771,"column":16},"end":{"line":774,"column":17}},"127":{"start":{"line":773,"column":20},"end":{"line":773,"column":44}},"128":{"start":{"line":775,"column":16},"end":{"line":775,"column":41}},"129":{"start":{"line":828,"column":16},"end":{"line":831,"column":17}},"130":{"start":{"line":830,"column":20},"end":{"line":830,"column":44}},"131":{"start":{"line":832,"column":16},"end":{"line":832,"column":34}},"132":{"start":{"line":845,"column":16},"end":{"line":847,"column":29}},"133":{"start":{"line":848,"column":16},"end":{"line":854,"column":17}},"134":{"start":{"line":850,"column":20},"end":{"line":853,"column":21}},"135":{"start":{"line":852,"column":24},"end":{"line":852,"column":36}},"136":{"start":{"line":855,"column":16},"end":{"line":855,"column":27}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":31},"end":{"line":40,"column":43}},{"start":{"line":40,"column":47},"end":{"line":40,"column":71}}]},"2":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"3":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":12}},{"start":{"line":103,"column":12},"end":{"line":103,"column":12}}]},"4":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":15},"end":{"line":103,"column":36}},{"start":{"line":103,"column":40},"end":{"line":103,"column":62}},{"start":{"line":103,"column":66},"end":{"line":103,"column":91}},{"start":{"line":103,"column":95},"end":{"line":103,"column":117}}]},"5":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]},"6":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":16},"end":{"line":201,"column":16}},{"start":{"line":201,"column":16},"end":{"line":201,"column":16}}]},"7":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"8":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":11},"end":{"line":207,"column":24}},{"start":{"line":207,"column":28},"end":{"line":207,"column":48}}]},"9":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":12},"end":{"line":335,"column":12}},{"start":{"line":335,"column":12},"end":{"line":335,"column":12}}]},"10":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":8},"end":{"line":353,"column":8}},{"start":{"line":353,"column":8},"end":{"line":353,"column":8}}]},"11":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":8},"end":{"line":372,"column":8}},{"start":{"line":372,"column":8},"end":{"line":372,"column":8}}]},"12":{"line":372,"type":"binary-expr","locations":[{"start":{"line":372,"column":11},"end":{"line":372,"column":20}},{"start":{"line":372,"column":24},"end":{"line":372,"column":69}}]},"13":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":8},"end":{"line":395,"column":8}},{"start":{"line":395,"column":8},"end":{"line":395,"column":8}}]},"14":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":16},"end":{"line":402,"column":16}},{"start":{"line":402,"column":16},"end":{"line":402,"column":16}}]},"15":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":13},"end":{"line":408,"column":13}},{"start":{"line":408,"column":13},"end":{"line":408,"column":13}}]},"16":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":8},"end":{"line":445,"column":8}},{"start":{"line":445,"column":8},"end":{"line":445,"column":8}}]},"17":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":8},"end":{"line":500,"column":8}},{"start":{"line":500,"column":8},"end":{"line":500,"column":8}}]},"18":{"line":500,"type":"binary-expr","locations":[{"start":{"line":500,"column":11},"end":{"line":500,"column":20}},{"start":{"line":500,"column":24},"end":{"line":500,"column":33}}]},"19":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":8},"end":{"line":504,"column":8}},{"start":{"line":504,"column":8},"end":{"line":504,"column":8}}]},"20":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":8},"end":{"line":534,"column":8}},{"start":{"line":534,"column":8},"end":{"line":534,"column":8}}]},"21":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":16},"end":{"line":664,"column":16}},{"start":{"line":664,"column":16},"end":{"line":664,"column":16}}]},"22":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":21},"end":{"line":673,"column":21}},{"start":{"line":673,"column":21},"end":{"line":673,"column":21}}]},"23":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":24},"end":{"line":682,"column":24}},{"start":{"line":682,"column":24},"end":{"line":682,"column":24}}]},"24":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":16},"end":{"line":739,"column":16}},{"start":{"line":739,"column":16},"end":{"line":739,"column":16}}]},"25":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":16},"end":{"line":771,"column":16}},{"start":{"line":771,"column":16},"end":{"line":771,"column":16}}]},"26":{"line":828,"type":"if","locations":[{"start":{"line":828,"column":16},"end":{"line":828,"column":16}},{"start":{"line":828,"column":16},"end":{"line":828,"column":16}}]},"27":{"line":828,"type":"binary-expr","locations":[{"start":{"line":828,"column":19},"end":{"line":828,"column":30}},{"start":{"line":828,"column":34},"end":{"line":828,"column":59}}]},"28":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":20},"end":{"line":850,"column":20}},{"start":{"line":850,"column":20},"end":{"line":850,"column":20}}]}},"code":["(function () { YUI.add('axis-base', function (Y, NAME) {","","/**"," * The Charts widget provides an api for displaying data"," * graphically."," *"," * @module charts"," * @main charts"," */","","/**"," * Provides functionality for the handling of axis data in a chart."," *"," * @module charts"," * @submodule axis-base"," */","var Y_Lang = Y.Lang;","","/**"," * The Renderer class is a base class for chart components that use the `styles`"," * attribute."," *"," * @module charts"," * @class Renderer"," * @constructor"," */","function Renderer(){}","","Renderer.ATTRS = {","        /**","         * Style properties for class","         *","         * @attribute styles","         * @type Object","         */","        styles:","        {","            getter: function()","            {","                this._styles = this._styles || this._getDefaultStyles();","                return this._styles;","            },","","            setter: function(val)","            {","                this._styles = this._setStyles(val);","            }","        },","","        /**","         * The graphic in which drawings will be rendered.","         *","         * @attribute graphic","         * @type Graphic","         */","        graphic: {}","};","Renderer.NAME = \"renderer\";","","Renderer.prototype = {","    /**","     * Storage for `styles` attribute.","     *","     * @property _styles","     * @type Object","     * @private","     */","\t_styles: null,","","    /**","     * Method used by `styles` setter.","     *","     * @method _setStyles","     * @param {Object} newStyles Hash of properties to update.","     * @return Object","     * @protected","     */","\t_setStyles: function(newstyles)","\t{","\t\tvar styles = this.get(\"styles\");","        return this._mergeStyles(newstyles, styles);","\t},","","    /**","     * Merges to object literals so that only specified properties are","     * overwritten.","     *","     * @method _mergeStyles","     * @param {Object} a Hash of new styles","     * @param {Object} b Hash of original styles","     * @return Object","     * @protected","     */","    _mergeStyles: function(a, b)","    {","        if(!b)","        {","            b = {};","        }","        var newstyles = Y.merge(b, {});","        Y.Object.each(a, function(value, key)","        {","            if(b.hasOwnProperty(key) && Y_Lang.isObject(value) && !Y_Lang.isFunction(value) && !Y_Lang.isArray(value))","            {","                newstyles[key] = this._mergeStyles(value, b[key]);","            }","            else","            {","                newstyles[key] = value;","            }","        }, this);","        return newstyles;","    },","","    /**","     * Gets the default value for the `styles` attribute.","     *","     * @method _getDefaultStyles","     * @return Object","     * @protected","     */","    _getDefaultStyles: function()","    {","        return {padding:{","            top:0,","            right: 0,","            bottom: 0,","            left: 0","        }};","    }","};","","Y.augment(Renderer, Y.Attribute);","Y.Renderer = Renderer;","","/**"," * The axis-base submodule contains functionality for the handling of axis data in a chart."," *"," * @module charts"," * @submodule axis-base"," */","/**"," * An abstract class that provides the core functionality used by the following classes:"," * <ul>"," *      <li>{{#crossLink \"CategoryAxisBase\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"NumericAxisBase\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"StackedAxisBase\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"TimeAxisBase\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"CategoryAxis\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"NumericAxis\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"StackedAxis\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"TimeAxis\"}}{{/crossLink}}</li>"," *  </ul>"," *"," * @class AxisBase"," * @constructor"," * @extends Base"," * @uses Renderer"," * @param {Object} config (optional) Configuration parameters."," * @submodule axis-base"," */","Y.AxisBase = Y.Base.create(\"axisBase\", Y.Base, [Y.Renderer], {","    /**","     * @method initializer","     * @private","     */","    initializer: function()","    {","        this.after(\"minimumChange\", Y.bind(this._keyChangeHandler, this));","        this.after(\"maximumChange\", Y.bind(this._keyChangeHandler, this));","        this.after(\"keysChange\", this._keyChangeHandler);","        this.after(\"dataProviderChange\", this._dataProviderChangeHandler);","    },","","    /**","     * Returns the value corresponding to the origin on the axis.","     *","     * @method getOrigin","     * @return Number","     */","    getOrigin: function() {","        return this.get(\"minimum\");","    },","","    /**","     * Handles changes to `dataProvider`.","     *","     * @method _dataProviderChangeHandler","     * @param {Object} e Event object.","     * @private","     */","    _dataProviderChangeHandler: function()","    {","        var keyCollection = this.get(\"keyCollection\").concat(),","            keys = this.get(\"keys\"),","            i;","        if(keys)","        {","            for(i in keys)","            {","                if(keys.hasOwnProperty(i))","                {","                    delete keys[i];","                }","            }","        }","        if(keyCollection && keyCollection.length)","        {","            this.set(\"keys\", keyCollection);","        }","    },","","    /**","     * Calculates the maximum and minimum values for the `Data`.","     *","     * @method _updateMinAndMax","     * @private","     */","    _updateMinAndMax: function() {","    },","","    /**","     * Constant used to generate unique id.","     *","     * @property GUID","     * @type String","     * @private","     */","    GUID: \"yuibaseaxis\",","","    /**","     * Type of data used in `Axis`.","     *","     * @property _type","     * @type String","     * @readOnly","     * @private","     */","    _type: null,","","    /**","     * Storage for `setMaximum` attribute.","     *","     * @property _setMaximum","     * @type Object","     * @private","     */","    _setMaximum: null,","","    /**","     * Storage for `setMinimum` attribute.","     *","     * @property _setMinimum","     * @type Object","     * @private","     */","    _setMinimum: null,","","    /**","     * Reference to data array.","     *","     * @property _data","     * @type Array","     * @private","     */","    _data: null,","","    /**","     * Indicates whether the all data is up to date.","     *","     * @property _updateTotalDataFlag","     * @type Boolean","     * @private","     */","    _updateTotalDataFlag: true,","","    /**","     * Storage for `dataReady` attribute.","     *","     * @property _dataReady","     * @type Boolean","     * @readOnly","     * @private","     */","    _dataReady: false,","","    /**","     * Adds an array to the key hash.","     *","     * @method addKey","     * @param value Indicates what key to use in retrieving","     * the array.","     */","    addKey: function (value)","\t{","        this.set(\"keys\", value);","\t},","","    /**","     * Gets an array of values based on a key.","     *","     * @method _getKeyArray","     * @param {String} key Value key associated with the data array.","     * @param {Array} data Array in which the data resides.","     * @return Array","     * @private","     */","    _getKeyArray: function(key, data)","    {","        var i = 0,","            obj,","            keyArray = [],","            len = data.length;","        for(; i < len; ++i)","        {","            obj = data[i];","            keyArray[i] = obj[key];","        }","        return keyArray;","    },","","    /**","     * Updates the total data array.","     *","     * @method _updateTotalData","     * @private","     */","    _updateTotalData: function()","    {","\t\tvar keys = this.get(\"keys\"),","            i;","        this._data = [];","        for(i in keys)","        {","            if(keys.hasOwnProperty(i))","            {","                this._data = this._data.concat(keys[i]);","            }","        }","        this._updateTotalDataFlag = false;","    },","","    /**","     * Removes an array from the key hash.","     *","     * @method removeKey","     * @param {String} value Indicates what key to use in removing from","     * the hash.","     */","    removeKey: function(value)","    {","        var keys = this.get(\"keys\");","        if(keys.hasOwnProperty(value))","        {","            delete keys[value];","            this._keyChangeHandler();","        }","    },","","    /**","     * Returns a value based of a key value and an index.","     *","     * @method getKeyValueAt","     * @param {String} key value used to look up the correct array","     * @param {Number} index within the array","     * @return Number","     */","    getKeyValueAt: function(key, index)","    {","        var value = NaN,","            keys = this.get(\"keys\");","        if(keys[key] && Y_Lang.isNumber(parseFloat(keys[key][index])))","        {","            value = keys[key][index];","        }","        return parseFloat(value);","    },","","    /**","     * Returns values based on key identifiers. When a string is passed as an argument, an array of values is returned.","     * When an array of keys is passed as an argument, an object literal with an array of values mapped to each key is","     * returned.","     *","     * @method getDataByKey","     * @param {String|Array} value value used to identify the array","     * @return Array|Object","     */","    getDataByKey: function (value)","    {","        var obj,","            i,","            len,","            key,","            keys = this.get(\"keys\");","        if(Y_Lang.isArray(value))","        {","            obj = {};","            len = value.length;","            for(i = 0; i < len; i = i + 1)","            {","                key = value[i];","                if(keys[key])","                {","                    obj[key] = this.getDataByKey(key);","                }","            }","        }","        else if(keys[value])","        {","            obj = keys[value];","        }","        else","        {","            obj = null;","        }","        return obj;","    },","","    /**","     * Returns the total number of majorUnits that will appear on an axis.","     *","     * @method getTotalMajorUnits","     * @return Number","     */","    getTotalMajorUnits: function()","    {","        var units,","            majorUnit = this.get(\"styles\").majorUnit;","        units = majorUnit.count;","        return units;","    },","","    /**","     * Gets the distance that the first and last ticks are offset from there respective","     * edges.","     *","     * @method getEdgeOffset","     * @param {Number} ct Number of ticks on the axis.","     * @param {Number} l Length (in pixels) of the axis.","     * @return Number","     */","    getEdgeOffset: function(ct, l)","    {","        var edgeOffset;","        if(this.get(\"calculateEdgeOffset\")) {","            edgeOffset = (l/ct)/2;","        } else {","            edgeOffset = 0;","        }","        return edgeOffset;","    },","","    /**","     * Updates the `Axis` after a change in keys.","     *","     * @method _keyChangeHandler","     * @param {Object} e Event object.","     * @private","     */","    _keyChangeHandler: function()","    {","        this._updateMinAndMax();","        this._updateTotalDataFlag = true;","        this.fire(\"dataUpdate\");","    },","","    /**","     * Gets the default value for the `styles` attribute. Overrides","     * base implementation.","     *","     * @method _getDefaultStyles","     * @return Object","     * @protected","     */","    _getDefaultStyles: function()","    {","        var axisstyles = {","            majorUnit: {","                determinant:\"count\",","                count:11,","                distance:75","            }","        };","        return axisstyles;","    },","","    /**","     * Getter method for maximum attribute.","     *","     * @method _maximumGetter","     * @return Number","     * @private","     */","    _maximumGetter: function ()","    {","        var max = this.get(\"dataMaximum\"),","            min = this.get(\"minimum\");","        //If all values are zero, force a range so that the Axis and related series","        //will still render.","        if(min === 0 && max === 0)","        {","            max = 10;","        }","        if(Y_Lang.isNumber(this._setMaximum))","        {","            max = this._setMaximum;","        }","        return parseFloat(max);","    },","","    /**","     * Setter method for maximum attribute.","     *","     * @method _maximumSetter","     * @param {Object} value","     * @private","     */","    _maximumSetter: function (value)","    {","        this._setMaximum = parseFloat(value);","        return value;","    },","","    /**","     * Getter method for minimum attribute.","     *","     * @method _minimumGetter","     * @return Number","     * @private","     */","    _minimumGetter: function ()","    {","        var min = this.get(\"dataMinimum\");","        if(Y_Lang.isNumber(this._setMinimum))","        {","            min = this._setMinimum;","        }","        return parseFloat(min);","    },","","    /**","     * Setter method for minimum attribute.","     *","     * @method _minimumSetter","     * @param {Object} value","     * @private","     */","    _minimumSetter: function(val)","    {","        this._setMinimum = parseFloat(val);","        return val;","    },","","    /**","     * Indicates whether or not the maximum attribute has been explicitly set.","     *","     * @method _getSetMax","     * @return Boolean","     * @private","     */","    _getSetMax: function()","    {","        return Y_Lang.isNumber(this._setMaximum);","    },","","","    /**","     * Returns and array of coordinates corresponding to an array of data values.","     *","     * @method _getCoordsFromValues","     * @param {Number} min The minimum for the axis.","     * @param {Number} max The maximum for the axis.","     * @param {length} length The distance that the axis spans.","     * @param {Array} dataValues An array of values.","     * @param {Number} offset Value in which to offset the coordinates.","     * @param {Boolean} reverse Indicates whether the coordinates should start from","     * the end of an axis. Only used in the numeric implementation.","     * @return Array","     * @private","     */","    _getCoordsFromValues: function(min, max, length, dataValues, offset, reverse)","    {","        var i,","            valuecoords = [],","            len = dataValues.length;","        for(i = 0; i < len; i = i + 1)","        {","            valuecoords.push(this._getCoordFromValue.apply(this, [min, max, length, dataValues[i], offset, reverse]));","        }","        return valuecoords;","    },","","    /**","     * Returns and array of data values based on the axis' range and number of values.","     *","     * @method _getDataValuesByCount","     * @param {Number} count The number of values to be used.","     * @param {Number} min The minimum value of the axis.","     * @param {Number} max The maximum value of the axis.","     * @return Array","     * @private","     */","    _getDataValuesByCount: function(count, min, max)","    {","        var dataValues = [],","            dataValue = min,","            len = count - 1,","            range = max - min,","            increm = range/len,","            i;","        for(i = 0; i < len; i = i + 1)","        {","            dataValues.push(dataValue);","            dataValue = dataValue + increm;","        }","        dataValues.push(max);","        return dataValues;","    },","","    /**","     * Indicates whether or not the minimum attribute has been explicitly set.","     *","     * @method _getSetMin","     * @return Boolean","     * @private","     */","    _getSetMin: function()","    {","        return Y_Lang.isNumber(this._setMinimum);","    }","}, {","    ATTRS: {","        /**","         * Determines whether and offset is automatically calculated for the edges of the axis.","         *","         * @attribute calculateEdgeOffset","         * @type Boolean","         */","        calculateEdgeOffset: {","            value: false","        },","","        labelFunction: {","            valueFn: function() {","                return this.formatLabel;","            }","        },","","        /**","         * Hash of array identifed by a string value.","         *","         * @attribute keys","         * @type Object","         */","        keys: {","            value: {},","","            setter: function(val)","            {","                var keys = {},","                    i,","                    len,","                    data = this.get(\"dataProvider\");","                if(Y_Lang.isArray(val))","                {","                    len = val.length;","                    for(i = 0; i < len; ++i)","                    {","                        keys[val[i]] = this._getKeyArray(val[i], data);","                    }","","                }","                else if(Y_Lang.isString(val))","                {","                    keys = this.get(\"keys\");","                    keys[val] = this._getKeyArray(val, data);","                }","                else","                {","                    for(i in val)","                    {","                        if(val.hasOwnProperty(i))","                        {","                            keys[i] = this._getKeyArray(i, data);","                        }","                    }","                }","                this._updateTotalDataFlag = true;","                return keys;","            }","        },","","        /**","         *Returns the type of axis data","         *  <dl>","         *      <dt>time</dt><dd>Manages time data</dd>","         *      <dt>stacked</dt><dd>Manages stacked numeric data</dd>","         *      <dt>numeric</dt><dd>Manages numeric data</dd>","         *      <dt>category</dt><dd>Manages categorical data</dd>","         *  </dl>","         *","         * @attribute type","         * @type String","         */","        type:","        {","            readOnly: true,","","            getter: function ()","            {","                return this._type;","            }","        },","","        /**","         * Instance of `ChartDataProvider` that the class uses","         * to build its own data.","         *","         * @attribute dataProvider","         * @type Array","         */","        dataProvider:{","            setter: function (value)","            {","                return value;","            }","        },","","        /**","         * The maximum value contained in the `data` array. Used for","         * `maximum` when `autoMax` is true.","         *","         * @attribute dataMaximum","         * @type Number","         */","        dataMaximum: {","            getter: function ()","            {","                if(!Y_Lang.isNumber(this._dataMaximum))","                {","                    this._updateMinAndMax();","                }","                return this._dataMaximum;","            }","        },","","        /**","         * The maximum value that will appear on an axis.","         *","         * @attribute maximum","         * @type Number","         */","        maximum: {","            lazyAdd: false,","","            getter: \"_maximumGetter\",","","            setter: \"_maximumSetter\"","        },","","        /**","         * The minimum value contained in the `data` array. Used for","         * `minimum` when `autoMin` is true.","         *","         * @attribute dataMinimum","         * @type Number","         */","        dataMinimum: {","            getter: function ()","            {","                if(!Y_Lang.isNumber(this._dataMinimum))","                {","                    this._updateMinAndMax();","                }","                return this._dataMinimum;","            }","        },","","        /**","         * The minimum value that will appear on an axis.","         *","         * @attribute minimum","         * @type Number","         */","        minimum: {","            lazyAdd: false,","","            getter: \"_minimumGetter\",","","            setter: \"_minimumSetter\"","        },","","        /**","         * Determines whether the maximum is calculated or explicitly","         * set by the user.","         *","         * @attribute setMax","         * @type Boolean","         */","        setMax: {","            readOnly: true,","","            getter: \"_getSetMax\"","        },","","        /**","         * Determines whether the minimum is calculated or explicitly","         * set by the user.","         *","         * @attribute setMin","         * @type Boolean","         */","        setMin: {","            readOnly: true,","","            getter: \"_getSetMin\"","        },","","        /**","         * Array of axis data","         *","         * @attribute data","         * @type Array","         */","        data: {","            getter: function ()","            {","                if(!this._data || this._updateTotalDataFlag)","                {","                    this._updateTotalData();","                }","                return this._data;","            }","        },","","        /**","         * Array containing all the keys in the axis.","","         * @attribute keyCollection","         * @type Array","         */","        keyCollection: {","            getter: function()","            {","                var keys = this.get(\"keys\"),","                    i,","                    col = [];","                for(i in keys)","                {","                    if(keys.hasOwnProperty(i))","                    {","                        col.push(i);","                    }","                }","                return col;","            },","            readOnly: true","        },","","        /**","         * Object which should have by the labelFunction","         *","         * @attribute labelFunctionScope","         * @type Object","         */","        labelFunctionScope: {}","    }","});","","","}, '@VERSION@', {\"requires\": [\"classnamemanager\", \"datatype-number\", \"datatype-date\", \"base\", \"event-custom\"]});","","}());"]};
}
var __cov_wclOkU_OVk6DW$rAimWqSA = __coverage__['build/axis-base/axis-base.js'];
__cov_wclOkU_OVk6DW$rAimWqSA.s['1']++;YUI.add('axis-base',function(Y,NAME){__cov_wclOkU_OVk6DW$rAimWqSA.f['1']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['2']++;var Y_Lang=Y.Lang;__cov_wclOkU_OVk6DW$rAimWqSA.s['3']++;function Renderer(){__cov_wclOkU_OVk6DW$rAimWqSA.f['2']++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['4']++;Renderer.ATTRS={styles:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['3']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['5']++;this._styles=(__cov_wclOkU_OVk6DW$rAimWqSA.b['1'][0]++,this._styles)||(__cov_wclOkU_OVk6DW$rAimWqSA.b['1'][1]++,this._getDefaultStyles());__cov_wclOkU_OVk6DW$rAimWqSA.s['6']++;return this._styles;},setter:function(val){__cov_wclOkU_OVk6DW$rAimWqSA.f['4']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['7']++;this._styles=this._setStyles(val);}},graphic:{}};__cov_wclOkU_OVk6DW$rAimWqSA.s['8']++;Renderer.NAME='renderer';__cov_wclOkU_OVk6DW$rAimWqSA.s['9']++;Renderer.prototype={_styles:null,_setStyles:function(newstyles){__cov_wclOkU_OVk6DW$rAimWqSA.f['5']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['10']++;var styles=this.get('styles');__cov_wclOkU_OVk6DW$rAimWqSA.s['11']++;return this._mergeStyles(newstyles,styles);},_mergeStyles:function(a,b){__cov_wclOkU_OVk6DW$rAimWqSA.f['6']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['12']++;if(!b){__cov_wclOkU_OVk6DW$rAimWqSA.b['2'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['13']++;b={};}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['2'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['14']++;var newstyles=Y.merge(b,{});__cov_wclOkU_OVk6DW$rAimWqSA.s['15']++;Y.Object.each(a,function(value,key){__cov_wclOkU_OVk6DW$rAimWqSA.f['7']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['16']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['4'][0]++,b.hasOwnProperty(key))&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['4'][1]++,Y_Lang.isObject(value))&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['4'][2]++,!Y_Lang.isFunction(value))&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['4'][3]++,!Y_Lang.isArray(value))){__cov_wclOkU_OVk6DW$rAimWqSA.b['3'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['17']++;newstyles[key]=this._mergeStyles(value,b[key]);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['3'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['18']++;newstyles[key]=value;}},this);__cov_wclOkU_OVk6DW$rAimWqSA.s['19']++;return newstyles;},_getDefaultStyles:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['8']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['20']++;return{padding:{top:0,right:0,bottom:0,left:0}};}};__cov_wclOkU_OVk6DW$rAimWqSA.s['21']++;Y.augment(Renderer,Y.Attribute);__cov_wclOkU_OVk6DW$rAimWqSA.s['22']++;Y.Renderer=Renderer;__cov_wclOkU_OVk6DW$rAimWqSA.s['23']++;Y.AxisBase=Y.Base.create('axisBase',Y.Base,[Y.Renderer],{initializer:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['9']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['24']++;this.after('minimumChange',Y.bind(this._keyChangeHandler,this));__cov_wclOkU_OVk6DW$rAimWqSA.s['25']++;this.after('maximumChange',Y.bind(this._keyChangeHandler,this));__cov_wclOkU_OVk6DW$rAimWqSA.s['26']++;this.after('keysChange',this._keyChangeHandler);__cov_wclOkU_OVk6DW$rAimWqSA.s['27']++;this.after('dataProviderChange',this._dataProviderChangeHandler);},getOrigin:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['10']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['28']++;return this.get('minimum');},_dataProviderChangeHandler:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['11']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['29']++;var keyCollection=this.get('keyCollection').concat(),keys=this.get('keys'),i;__cov_wclOkU_OVk6DW$rAimWqSA.s['30']++;if(keys){__cov_wclOkU_OVk6DW$rAimWqSA.b['5'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['31']++;for(i in keys){__cov_wclOkU_OVk6DW$rAimWqSA.s['32']++;if(keys.hasOwnProperty(i)){__cov_wclOkU_OVk6DW$rAimWqSA.b['6'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['33']++;delete keys[i];}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['6'][1]++;}}}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['5'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['34']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['8'][0]++,keyCollection)&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['8'][1]++,keyCollection.length)){__cov_wclOkU_OVk6DW$rAimWqSA.b['7'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['35']++;this.set('keys',keyCollection);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['7'][1]++;}},_updateMinAndMax:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['12']++;},GUID:'yuibaseaxis',_type:null,_setMaximum:null,_setMinimum:null,_data:null,_updateTotalDataFlag:true,_dataReady:false,addKey:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['13']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['36']++;this.set('keys',value);},_getKeyArray:function(key,data){__cov_wclOkU_OVk6DW$rAimWqSA.f['14']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['37']++;var i=0,obj,keyArray=[],len=data.length;__cov_wclOkU_OVk6DW$rAimWqSA.s['38']++;for(;i<len;++i){__cov_wclOkU_OVk6DW$rAimWqSA.s['39']++;obj=data[i];__cov_wclOkU_OVk6DW$rAimWqSA.s['40']++;keyArray[i]=obj[key];}__cov_wclOkU_OVk6DW$rAimWqSA.s['41']++;return keyArray;},_updateTotalData:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['15']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['42']++;var keys=this.get('keys'),i;__cov_wclOkU_OVk6DW$rAimWqSA.s['43']++;this._data=[];__cov_wclOkU_OVk6DW$rAimWqSA.s['44']++;for(i in keys){__cov_wclOkU_OVk6DW$rAimWqSA.s['45']++;if(keys.hasOwnProperty(i)){__cov_wclOkU_OVk6DW$rAimWqSA.b['9'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['46']++;this._data=this._data.concat(keys[i]);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['9'][1]++;}}__cov_wclOkU_OVk6DW$rAimWqSA.s['47']++;this._updateTotalDataFlag=false;},removeKey:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['16']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['48']++;var keys=this.get('keys');__cov_wclOkU_OVk6DW$rAimWqSA.s['49']++;if(keys.hasOwnProperty(value)){__cov_wclOkU_OVk6DW$rAimWqSA.b['10'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['50']++;delete keys[value];__cov_wclOkU_OVk6DW$rAimWqSA.s['51']++;this._keyChangeHandler();}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['10'][1]++;}},getKeyValueAt:function(key,index){__cov_wclOkU_OVk6DW$rAimWqSA.f['17']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['52']++;var value=NaN,keys=this.get('keys');__cov_wclOkU_OVk6DW$rAimWqSA.s['53']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['12'][0]++,keys[key])&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['12'][1]++,Y_Lang.isNumber(parseFloat(keys[key][index])))){__cov_wclOkU_OVk6DW$rAimWqSA.b['11'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['54']++;value=keys[key][index];}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['11'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['55']++;return parseFloat(value);},getDataByKey:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['18']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['56']++;var obj,i,len,key,keys=this.get('keys');__cov_wclOkU_OVk6DW$rAimWqSA.s['57']++;if(Y_Lang.isArray(value)){__cov_wclOkU_OVk6DW$rAimWqSA.b['13'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['58']++;obj={};__cov_wclOkU_OVk6DW$rAimWqSA.s['59']++;len=value.length;__cov_wclOkU_OVk6DW$rAimWqSA.s['60']++;for(i=0;i<len;i=i+1){__cov_wclOkU_OVk6DW$rAimWqSA.s['61']++;key=value[i];__cov_wclOkU_OVk6DW$rAimWqSA.s['62']++;if(keys[key]){__cov_wclOkU_OVk6DW$rAimWqSA.b['14'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['63']++;obj[key]=this.getDataByKey(key);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['14'][1]++;}}}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['13'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['64']++;if(keys[value]){__cov_wclOkU_OVk6DW$rAimWqSA.b['15'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['65']++;obj=keys[value];}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['15'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['66']++;obj=null;}}__cov_wclOkU_OVk6DW$rAimWqSA.s['67']++;return obj;},getTotalMajorUnits:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['19']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['68']++;var units,majorUnit=this.get('styles').majorUnit;__cov_wclOkU_OVk6DW$rAimWqSA.s['69']++;units=majorUnit.count;__cov_wclOkU_OVk6DW$rAimWqSA.s['70']++;return units;},getEdgeOffset:function(ct,l){__cov_wclOkU_OVk6DW$rAimWqSA.f['20']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['71']++;var edgeOffset;__cov_wclOkU_OVk6DW$rAimWqSA.s['72']++;if(this.get('calculateEdgeOffset')){__cov_wclOkU_OVk6DW$rAimWqSA.b['16'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['73']++;edgeOffset=l/ct/2;}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['16'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['74']++;edgeOffset=0;}__cov_wclOkU_OVk6DW$rAimWqSA.s['75']++;return edgeOffset;},_keyChangeHandler:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['21']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['76']++;this._updateMinAndMax();__cov_wclOkU_OVk6DW$rAimWqSA.s['77']++;this._updateTotalDataFlag=true;__cov_wclOkU_OVk6DW$rAimWqSA.s['78']++;this.fire('dataUpdate');},_getDefaultStyles:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['22']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['79']++;var axisstyles={majorUnit:{determinant:'count',count:11,distance:75}};__cov_wclOkU_OVk6DW$rAimWqSA.s['80']++;return axisstyles;},_maximumGetter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['23']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['81']++;var max=this.get('dataMaximum'),min=this.get('minimum');__cov_wclOkU_OVk6DW$rAimWqSA.s['82']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['18'][0]++,min===0)&&(__cov_wclOkU_OVk6DW$rAimWqSA.b['18'][1]++,max===0)){__cov_wclOkU_OVk6DW$rAimWqSA.b['17'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['83']++;max=10;}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['17'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['84']++;if(Y_Lang.isNumber(this._setMaximum)){__cov_wclOkU_OVk6DW$rAimWqSA.b['19'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['85']++;max=this._setMaximum;}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['19'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['86']++;return parseFloat(max);},_maximumSetter:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['24']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['87']++;this._setMaximum=parseFloat(value);__cov_wclOkU_OVk6DW$rAimWqSA.s['88']++;return value;},_minimumGetter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['25']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['89']++;var min=this.get('dataMinimum');__cov_wclOkU_OVk6DW$rAimWqSA.s['90']++;if(Y_Lang.isNumber(this._setMinimum)){__cov_wclOkU_OVk6DW$rAimWqSA.b['20'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['91']++;min=this._setMinimum;}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['20'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['92']++;return parseFloat(min);},_minimumSetter:function(val){__cov_wclOkU_OVk6DW$rAimWqSA.f['26']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['93']++;this._setMinimum=parseFloat(val);__cov_wclOkU_OVk6DW$rAimWqSA.s['94']++;return val;},_getSetMax:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['27']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['95']++;return Y_Lang.isNumber(this._setMaximum);},_getCoordsFromValues:function(min,max,length,dataValues,offset,reverse){__cov_wclOkU_OVk6DW$rAimWqSA.f['28']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['96']++;var i,valuecoords=[],len=dataValues.length;__cov_wclOkU_OVk6DW$rAimWqSA.s['97']++;for(i=0;i<len;i=i+1){__cov_wclOkU_OVk6DW$rAimWqSA.s['98']++;valuecoords.push(this._getCoordFromValue.apply(this,[min,max,length,dataValues[i],offset,reverse]));}__cov_wclOkU_OVk6DW$rAimWqSA.s['99']++;return valuecoords;},_getDataValuesByCount:function(count,min,max){__cov_wclOkU_OVk6DW$rAimWqSA.f['29']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['100']++;var dataValues=[],dataValue=min,len=count-1,range=max-min,increm=range/len,i;__cov_wclOkU_OVk6DW$rAimWqSA.s['101']++;for(i=0;i<len;i=i+1){__cov_wclOkU_OVk6DW$rAimWqSA.s['102']++;dataValues.push(dataValue);__cov_wclOkU_OVk6DW$rAimWqSA.s['103']++;dataValue=dataValue+increm;}__cov_wclOkU_OVk6DW$rAimWqSA.s['104']++;dataValues.push(max);__cov_wclOkU_OVk6DW$rAimWqSA.s['105']++;return dataValues;},_getSetMin:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['30']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['106']++;return Y_Lang.isNumber(this._setMinimum);}},{ATTRS:{calculateEdgeOffset:{value:false},labelFunction:{valueFn:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['31']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['107']++;return this.formatLabel;}},keys:{value:{},setter:function(val){__cov_wclOkU_OVk6DW$rAimWqSA.f['32']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['108']++;var keys={},i,len,data=this.get('dataProvider');__cov_wclOkU_OVk6DW$rAimWqSA.s['109']++;if(Y_Lang.isArray(val)){__cov_wclOkU_OVk6DW$rAimWqSA.b['21'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['110']++;len=val.length;__cov_wclOkU_OVk6DW$rAimWqSA.s['111']++;for(i=0;i<len;++i){__cov_wclOkU_OVk6DW$rAimWqSA.s['112']++;keys[val[i]]=this._getKeyArray(val[i],data);}}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['21'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['113']++;if(Y_Lang.isString(val)){__cov_wclOkU_OVk6DW$rAimWqSA.b['22'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['114']++;keys=this.get('keys');__cov_wclOkU_OVk6DW$rAimWqSA.s['115']++;keys[val]=this._getKeyArray(val,data);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['22'][1]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['116']++;for(i in val){__cov_wclOkU_OVk6DW$rAimWqSA.s['117']++;if(val.hasOwnProperty(i)){__cov_wclOkU_OVk6DW$rAimWqSA.b['23'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['118']++;keys[i]=this._getKeyArray(i,data);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['23'][1]++;}}}}__cov_wclOkU_OVk6DW$rAimWqSA.s['119']++;this._updateTotalDataFlag=true;__cov_wclOkU_OVk6DW$rAimWqSA.s['120']++;return keys;}},type:{readOnly:true,getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['33']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['121']++;return this._type;}},dataProvider:{setter:function(value){__cov_wclOkU_OVk6DW$rAimWqSA.f['34']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['122']++;return value;}},dataMaximum:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['35']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['123']++;if(!Y_Lang.isNumber(this._dataMaximum)){__cov_wclOkU_OVk6DW$rAimWqSA.b['24'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['124']++;this._updateMinAndMax();}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['24'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['125']++;return this._dataMaximum;}},maximum:{lazyAdd:false,getter:'_maximumGetter',setter:'_maximumSetter'},dataMinimum:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['36']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['126']++;if(!Y_Lang.isNumber(this._dataMinimum)){__cov_wclOkU_OVk6DW$rAimWqSA.b['25'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['127']++;this._updateMinAndMax();}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['25'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['128']++;return this._dataMinimum;}},minimum:{lazyAdd:false,getter:'_minimumGetter',setter:'_minimumSetter'},setMax:{readOnly:true,getter:'_getSetMax'},setMin:{readOnly:true,getter:'_getSetMin'},data:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['37']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['129']++;if((__cov_wclOkU_OVk6DW$rAimWqSA.b['27'][0]++,!this._data)||(__cov_wclOkU_OVk6DW$rAimWqSA.b['27'][1]++,this._updateTotalDataFlag)){__cov_wclOkU_OVk6DW$rAimWqSA.b['26'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['130']++;this._updateTotalData();}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['26'][1]++;}__cov_wclOkU_OVk6DW$rAimWqSA.s['131']++;return this._data;}},keyCollection:{getter:function(){__cov_wclOkU_OVk6DW$rAimWqSA.f['38']++;__cov_wclOkU_OVk6DW$rAimWqSA.s['132']++;var keys=this.get('keys'),i,col=[];__cov_wclOkU_OVk6DW$rAimWqSA.s['133']++;for(i in keys){__cov_wclOkU_OVk6DW$rAimWqSA.s['134']++;if(keys.hasOwnProperty(i)){__cov_wclOkU_OVk6DW$rAimWqSA.b['28'][0]++;__cov_wclOkU_OVk6DW$rAimWqSA.s['135']++;col.push(i);}else{__cov_wclOkU_OVk6DW$rAimWqSA.b['28'][1]++;}}__cov_wclOkU_OVk6DW$rAimWqSA.s['136']++;return col;},readOnly:true},labelFunctionScope:{}}});},'@VERSION@',{'requires':['classnamemanager','datatype-number','datatype-date','base','event-custom']});

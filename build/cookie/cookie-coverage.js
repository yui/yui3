if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/cookie/cookie.js']) {
   __coverage__['build/cookie/cookie.js'] = {"path":"build/cookie/cookie.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":18},"end":{"line":1,"column":37}}},"2":{"name":"error","line":27,"loc":{"start":{"line":27,"column":4},"end":{"line":27,"column":27}}},"3":{"name":"validateCookieName","line":34,"loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":37}}},"4":{"name":"validateSubcookieName","line":43,"loc":{"start":{"line":43,"column":4},"end":{"line":43,"column":43}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":30},"end":{"line":71,"column":137}}},"6":{"name":"(anonymous_6)","line":114,"loc":{"start":{"line":114,"column":34},"end":{"line":114,"column":74}}},"7":{"name":"(anonymous_7)","line":121,"loc":{"start":{"line":121,"column":25},"end":{"line":121,"column":45}}},"8":{"name":"(anonymous_8)","line":138,"loc":{"start":{"line":138,"column":27},"end":{"line":138,"column":43}}},"9":{"name":"(anonymous_9)","line":164,"loc":{"start":{"line":164,"column":29},"end":{"line":164,"column":117}}},"10":{"name":"(anonymous_10)","line":170,"loc":{"start":{"line":170,"column":60},"end":{"line":170,"column":71}}},"11":{"name":"(anonymous_11)","line":218,"loc":{"start":{"line":218,"column":17},"end":{"line":218,"column":33}}},"12":{"name":"(anonymous_12)","line":234,"loc":{"start":{"line":234,"column":16},"end":{"line":234,"column":31}}},"13":{"name":"(anonymous_13)","line":259,"loc":{"start":{"line":259,"column":14},"end":{"line":259,"column":39}}},"14":{"name":"(anonymous_14)","line":306,"loc":{"start":{"line":306,"column":17},"end":{"line":306,"column":125}}},"15":{"name":"(anonymous_15)","line":338,"loc":{"start":{"line":338,"column":18},"end":{"line":338,"column":67}}},"16":{"name":"(anonymous_16)","line":361,"loc":{"start":{"line":361,"column":17},"end":{"line":361,"column":42}}},"17":{"name":"(anonymous_17)","line":386,"loc":{"start":{"line":386,"column":20},"end":{"line":386,"column":53}}},"18":{"name":"(anonymous_18)","line":433,"loc":{"start":{"line":433,"column":14},"end":{"line":433,"column":46}}},"19":{"name":"(anonymous_19)","line":460,"loc":{"start":{"line":460,"column":17},"end":{"line":460,"column":58}}},"20":{"name":"(anonymous_20)","line":493,"loc":{"start":{"line":493,"column":18},"end":{"line":493,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":509,"column":44}},"2":{"start":{"line":9,"column":4},"end":{"line":22,"column":35}},"3":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"4":{"start":{"line":28,"column":8},"end":{"line":28,"column":37}},"5":{"start":{"line":34,"column":4},"end":{"line":38,"column":5}},"6":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"7":{"start":{"line":36,"column":12},"end":{"line":36,"column":61}},"8":{"start":{"line":43,"column":4},"end":{"line":47,"column":5}},"9":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"10":{"start":{"line":45,"column":12},"end":{"line":45,"column":64}},"11":{"start":{"line":54,"column":4},"end":{"line":506,"column":6}},"12":{"start":{"line":73,"column":12},"end":{"line":73,"column":36}},"13":{"start":{"line":75,"column":12},"end":{"line":78,"column":41}},"14":{"start":{"line":81,"column":12},"end":{"line":101,"column":13}},"15":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"16":{"start":{"line":84,"column":20},"end":{"line":84,"column":65}},"17":{"start":{"line":88,"column":16},"end":{"line":90,"column":17}},"18":{"start":{"line":89,"column":20},"end":{"line":89,"column":45}},"19":{"start":{"line":93,"column":16},"end":{"line":95,"column":17}},"20":{"start":{"line":94,"column":20},"end":{"line":94,"column":49}},"21":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"22":{"start":{"line":99,"column":20},"end":{"line":99,"column":39}},"23":{"start":{"line":103,"column":12},"end":{"line":103,"column":24}},"24":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"25":{"start":{"line":116,"column":16},"end":{"line":116,"column":87}},"26":{"start":{"line":119,"column":12},"end":{"line":119,"column":37}},"27":{"start":{"line":121,"column":12},"end":{"line":125,"column":15}},"28":{"start":{"line":122,"column":16},"end":{"line":124,"column":17}},"29":{"start":{"line":123,"column":20},"end":{"line":123,"column":73}},"30":{"start":{"line":127,"column":12},"end":{"line":127,"column":34}},"31":{"start":{"line":140,"column":12},"end":{"line":142,"column":33}},"32":{"start":{"line":144,"column":12},"end":{"line":149,"column":13}},"33":{"start":{"line":145,"column":16},"end":{"line":148,"column":17}},"34":{"start":{"line":146,"column":20},"end":{"line":146,"column":55}},"35":{"start":{"line":147,"column":20},"end":{"line":147,"column":68}},"36":{"start":{"line":151,"column":12},"end":{"line":151,"column":24}},"37":{"start":{"line":166,"column":12},"end":{"line":166,"column":41}},"38":{"start":{"line":168,"column":12},"end":{"line":201,"column":13}},"39":{"start":{"line":170,"column":16},"end":{"line":174,"column":43}},"40":{"start":{"line":170,"column":72},"end":{"line":170,"column":81}},"41":{"start":{"line":176,"column":16},"end":{"line":199,"column":17}},"42":{"start":{"line":178,"column":20},"end":{"line":178,"column":72}},"43":{"start":{"line":179,"column":20},"end":{"line":190,"column":21}},"44":{"start":{"line":180,"column":24},"end":{"line":185,"column":25}},"45":{"start":{"line":181,"column":28},"end":{"line":181,"column":68}},"46":{"start":{"line":182,"column":28},"end":{"line":182,"column":109}},"47":{"start":{"line":188,"column":24},"end":{"line":188,"column":60}},"48":{"start":{"line":189,"column":24},"end":{"line":189,"column":41}},"49":{"start":{"line":192,"column":20},"end":{"line":198,"column":21}},"50":{"start":{"line":193,"column":24},"end":{"line":195,"column":25}},"51":{"start":{"line":194,"column":28},"end":{"line":194,"column":62}},"52":{"start":{"line":197,"column":24},"end":{"line":197,"column":58}},"53":{"start":{"line":203,"column":12},"end":{"line":203,"column":27}},"54":{"start":{"line":219,"column":12},"end":{"line":219,"column":25}},"55":{"start":{"line":236,"column":12},"end":{"line":236,"column":37}},"56":{"start":{"line":238,"column":12},"end":{"line":238,"column":68}},"57":{"start":{"line":240,"column":12},"end":{"line":240,"column":48}},"58":{"start":{"line":261,"column":12},"end":{"line":261,"column":37}},"59":{"start":{"line":263,"column":12},"end":{"line":265,"column":26}},"60":{"start":{"line":268,"column":12},"end":{"line":275,"column":13}},"61":{"start":{"line":269,"column":16},"end":{"line":269,"column":36}},"62":{"start":{"line":270,"column":16},"end":{"line":270,"column":29}},"63":{"start":{"line":271,"column":19},"end":{"line":275,"column":13}},"64":{"start":{"line":272,"column":16},"end":{"line":272,"column":46}},"65":{"start":{"line":274,"column":16},"end":{"line":274,"column":29}},"66":{"start":{"line":277,"column":12},"end":{"line":277,"column":81}},"67":{"start":{"line":278,"column":12},"end":{"line":278,"column":35}},"68":{"start":{"line":281,"column":12},"end":{"line":283,"column":13}},"69":{"start":{"line":282,"column":16},"end":{"line":282,"column":28}},"70":{"start":{"line":285,"column":12},"end":{"line":289,"column":13}},"71":{"start":{"line":286,"column":16},"end":{"line":286,"column":30}},"72":{"start":{"line":288,"column":16},"end":{"line":288,"column":41}},"73":{"start":{"line":308,"column":12},"end":{"line":308,"column":64}},"74":{"start":{"line":310,"column":12},"end":{"line":325,"column":13}},"75":{"start":{"line":312,"column":16},"end":{"line":312,"column":47}},"76":{"start":{"line":314,"column":16},"end":{"line":316,"column":17}},"77":{"start":{"line":315,"column":20},"end":{"line":315,"column":32}},"78":{"start":{"line":318,"column":16},"end":{"line":322,"column":17}},"79":{"start":{"line":319,"column":20},"end":{"line":319,"column":41}},"80":{"start":{"line":321,"column":20},"end":{"line":321,"column":52}},"81":{"start":{"line":324,"column":16},"end":{"line":324,"column":28}},"82":{"start":{"line":340,"column":12},"end":{"line":340,"column":37}},"83":{"start":{"line":342,"column":12},"end":{"line":342,"column":78}},"84":{"start":{"line":343,"column":12},"end":{"line":345,"column":13}},"85":{"start":{"line":344,"column":16},"end":{"line":344,"column":60}},"86":{"start":{"line":346,"column":12},"end":{"line":346,"column":24}},"87":{"start":{"line":363,"column":12},"end":{"line":363,"column":37}},"88":{"start":{"line":366,"column":12},"end":{"line":368,"column":15}},"89":{"start":{"line":371,"column":12},"end":{"line":371,"column":47}},"90":{"start":{"line":388,"column":12},"end":{"line":388,"column":37}},"91":{"start":{"line":390,"column":12},"end":{"line":390,"column":43}},"92":{"start":{"line":392,"column":12},"end":{"line":392,"column":36}},"93":{"start":{"line":395,"column":12},"end":{"line":395,"column":42}},"94":{"start":{"line":398,"column":12},"end":{"line":417,"column":13}},"95":{"start":{"line":399,"column":16},"end":{"line":399,"column":37}},"96":{"start":{"line":401,"column":16},"end":{"line":414,"column":17}},"97":{"start":{"line":404,"column":20},"end":{"line":404,"column":61}},"98":{"start":{"line":407,"column":20},"end":{"line":411,"column":21}},"99":{"start":{"line":408,"column":24},"end":{"line":410,"column":25}},"100":{"start":{"line":409,"column":28},"end":{"line":409,"column":69}},"101":{"start":{"line":413,"column":20},"end":{"line":413,"column":54}},"102":{"start":{"line":416,"column":16},"end":{"line":416,"column":26}},"103":{"start":{"line":435,"column":12},"end":{"line":435,"column":37}},"104":{"start":{"line":437,"column":12},"end":{"line":439,"column":13}},"105":{"start":{"line":438,"column":16},"end":{"line":438,"column":66}},"106":{"start":{"line":441,"column":12},"end":{"line":441,"column":36}},"107":{"start":{"line":443,"column":12},"end":{"line":443,"column":84}},"108":{"start":{"line":444,"column":12},"end":{"line":444,"column":30}},"109":{"start":{"line":445,"column":12},"end":{"line":445,"column":24}},"110":{"start":{"line":462,"column":12},"end":{"line":462,"column":37}},"111":{"start":{"line":464,"column":12},"end":{"line":464,"column":43}},"112":{"start":{"line":466,"column":12},"end":{"line":468,"column":13}},"113":{"start":{"line":467,"column":16},"end":{"line":467,"column":79}},"114":{"start":{"line":470,"column":12},"end":{"line":470,"column":42}},"115":{"start":{"line":472,"column":12},"end":{"line":474,"column":13}},"116":{"start":{"line":473,"column":16},"end":{"line":473,"column":26}},"117":{"start":{"line":476,"column":12},"end":{"line":476,"column":34}},"118":{"start":{"line":478,"column":12},"end":{"line":478,"column":53}},"119":{"start":{"line":495,"column":12},"end":{"line":495,"column":37}},"120":{"start":{"line":497,"column":12},"end":{"line":499,"column":13}},"121":{"start":{"line":498,"column":16},"end":{"line":498,"column":75}},"122":{"start":{"line":501,"column":12},"end":{"line":501,"column":119}},"123":{"start":{"line":502,"column":12},"end":{"line":502,"column":30}},"124":{"start":{"line":503,"column":12},"end":{"line":503,"column":24}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":27}},{"start":{"line":35,"column":31},"end":{"line":35,"column":42}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"4":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":30}},{"start":{"line":44,"column":34},"end":{"line":44,"column":48}}]},"5":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":22},"end":{"line":73,"column":29}},{"start":{"line":73,"column":33},"end":{"line":73,"column":35}}]},"6":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":71},"end":{"line":75,"column":84}},{"start":{"line":75,"column":87},"end":{"line":75,"column":92}}]},"7":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":12}},{"start":{"line":81,"column":12},"end":{"line":81,"column":12}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":16},"end":{"line":83,"column":16}},{"start":{"line":83,"column":16},"end":{"line":83,"column":16}}]},"9":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":16},"end":{"line":88,"column":16}},{"start":{"line":88,"column":16},"end":{"line":88,"column":16}}]},"10":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":20},"end":{"line":88,"column":34}},{"start":{"line":88,"column":38},"end":{"line":88,"column":49}}]},"11":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":16},"end":{"line":93,"column":16}},{"start":{"line":93,"column":16},"end":{"line":93,"column":16}}]},"12":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":20},"end":{"line":93,"column":36}},{"start":{"line":93,"column":40},"end":{"line":93,"column":53}}]},"13":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":16},"end":{"line":98,"column":16}},{"start":{"line":98,"column":16},"end":{"line":98,"column":16}}]},"14":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":12}},{"start":{"line":115,"column":12},"end":{"line":115,"column":12}}]},"15":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":16},"end":{"line":122,"column":16}},{"start":{"line":122,"column":16},"end":{"line":122,"column":16}}]},"16":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":20},"end":{"line":122,"column":38}},{"start":{"line":122,"column":42},"end":{"line":122,"column":61}}]},"17":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":12}},{"start":{"line":144,"column":12},"end":{"line":144,"column":12}}]},"18":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":12},"end":{"line":168,"column":12}},{"start":{"line":168,"column":12},"end":{"line":168,"column":12}}]},"19":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":16},"end":{"line":168,"column":30}},{"start":{"line":168,"column":34},"end":{"line":168,"column":49}}]},"20":{"line":170,"type":"cond-expr","locations":[{"start":{"line":170,"column":60},"end":{"line":170,"column":82}},{"start":{"line":170,"column":85},"end":{"line":170,"column":91}}]},"21":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":20},"end":{"line":179,"column":20}},{"start":{"line":179,"column":20},"end":{"line":179,"column":20}}]},"22":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":20},"end":{"line":192,"column":20}},{"start":{"line":192,"column":20},"end":{"line":192,"column":20}}]},"23":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":24},"end":{"line":192,"column":45}},{"start":{"line":192,"column":49},"end":{"line":192,"column":77}}]},"24":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":24},"end":{"line":193,"column":24}},{"start":{"line":193,"column":24},"end":{"line":193,"column":24}}]},"25":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":12},"end":{"line":268,"column":12}},{"start":{"line":268,"column":12},"end":{"line":268,"column":12}}]},"26":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":19},"end":{"line":271,"column":19}},{"start":{"line":271,"column":19},"end":{"line":271,"column":19}}]},"27":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":12},"end":{"line":281,"column":12}},{"start":{"line":281,"column":12},"end":{"line":281,"column":12}}]},"28":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":12},"end":{"line":285,"column":12}},{"start":{"line":285,"column":12},"end":{"line":285,"column":12}}]},"29":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":12},"end":{"line":310,"column":12}},{"start":{"line":310,"column":12},"end":{"line":310,"column":12}}]},"30":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":16},"end":{"line":314,"column":16}},{"start":{"line":314,"column":16},"end":{"line":314,"column":16}}]},"31":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":16},"end":{"line":318,"column":16}},{"start":{"line":318,"column":16},"end":{"line":318,"column":16}}]},"32":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":12},"end":{"line":343,"column":12}},{"start":{"line":343,"column":12},"end":{"line":343,"column":12}}]},"33":{"line":366,"type":"binary-expr","locations":[{"start":{"line":366,"column":30},"end":{"line":366,"column":37}},{"start":{"line":366,"column":41},"end":{"line":366,"column":43}}]},"34":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":22},"end":{"line":392,"column":29}},{"start":{"line":392,"column":33},"end":{"line":392,"column":35}}]},"35":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":12},"end":{"line":398,"column":12}},{"start":{"line":398,"column":12},"end":{"line":398,"column":12}}]},"36":{"line":398,"type":"binary-expr","locations":[{"start":{"line":398,"column":16},"end":{"line":398,"column":30}},{"start":{"line":398,"column":34},"end":{"line":398,"column":62}}]},"37":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":16},"end":{"line":401,"column":16}},{"start":{"line":401,"column":16},"end":{"line":401,"column":16}}]},"38":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":24},"end":{"line":408,"column":24}},{"start":{"line":408,"column":24},"end":{"line":408,"column":24}}]},"39":{"line":408,"type":"binary-expr","locations":[{"start":{"line":408,"column":28},"end":{"line":408,"column":52}},{"start":{"line":408,"column":56},"end":{"line":408,"column":78}},{"start":{"line":408,"column":82},"end":{"line":408,"column":105}}]},"40":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":12},"end":{"line":437,"column":12}},{"start":{"line":437,"column":12},"end":{"line":437,"column":12}}]},"41":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":22},"end":{"line":441,"column":29}},{"start":{"line":441,"column":33},"end":{"line":441,"column":35}}]},"42":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":12},"end":{"line":466,"column":12}},{"start":{"line":466,"column":12},"end":{"line":466,"column":12}}]},"43":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":12},"end":{"line":472,"column":12}},{"start":{"line":472,"column":12},"end":{"line":472,"column":12}}]},"44":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":12},"end":{"line":497,"column":12}},{"start":{"line":497,"column":12},"end":{"line":497,"column":12}}]}},"code":["(function () { YUI.add('cookie', function (Y, NAME) {","","/**\r"," * Utilities for cookie management\r"," * @module cookie\r"," */\r","\r","    //shortcuts\r","    var L       = Y.Lang,\r","        O       = Y.Object,\r","        NULL    = null,\r","\r","        //shortcuts to functions\r","        isString    = L.isString,\r","        isObject    = L.isObject,\r","        isUndefined = L.isUndefined,\r","        isFunction  = L.isFunction,\r","        encode      = encodeURIComponent,\r","        decode      = decodeURIComponent,\r","\r","        //shortcut to document\r","        doc         = Y.config.doc;\r","\r","    /*\r","     * Throws an error message.\r","     */\r","    function error(message){\r","        throw new TypeError(message);\r","    }\r","\r","    /*\r","     * Checks the validity of a cookie name.\r","     */\r","    function validateCookieName(name){\r","        if (!isString(name) || name === \"\"){\r","            error(\"Cookie name must be a non-empty string.\");\r","        }\r","    }\r","\r","    /*\r","     * Checks the validity of a subcookie name.\r","     */\r","    function validateSubcookieName(subName){\r","        if (!isString(subName) || subName === \"\"){\r","            error(\"Subcookie name must be a non-empty string.\");\r","        }\r","    }\r","\r","    /**\r","     * Cookie utility.\r","     * @class Cookie\r","     * @static\r","     */\r","    Y.Cookie = {\r","\r","        //-------------------------------------------------------------------------\r","        // Private Methods\r","        //-------------------------------------------------------------------------\r","\r","        /**\r","         * Creates a cookie string that can be assigned into document.cookie.\r","         * @param {String} name The name of the cookie.\r","         * @param {String} value The value of the cookie.\r","         * @param {Boolean} encodeValue True to encode the value, false to leave as-is.\r","         * @param {Object} options (Optional) Options for the cookie.\r","         * @return {String} The formatted cookie string.\r","         * @method _createCookieString\r","         * @private\r","         * @static\r","         */\r","        _createCookieString : function (name /*:String*/, value /*:Variant*/, encodeValue /*:Boolean*/, options /*:Object*/) /*:String*/ {\r","\r","            options = options || {};\r","\r","            var text /*:String*/ = encode(name) + \"=\" + (encodeValue ? encode(value) : value),\r","                expires = options.expires,\r","                path    = options.path,\r","                domain  = options.domain;\r","\r","\r","            if (isObject(options)){\r","                //expiration date\r","                if (expires instanceof Date){\r","                    text += \"; expires=\" + expires.toUTCString();\r","                }\r","\r","                //path\r","                if (isString(path) && path !== \"\"){\r","                    text += \"; path=\" + path;\r","                }\r","\r","                //domain\r","                if (isString(domain) && domain !== \"\"){\r","                    text += \"; domain=\" + domain;\r","                }\r","\r","                //secure\r","                if (options.secure === true){\r","                    text += \"; secure\";\r","                }\r","            }\r","\r","            return text;\r","        },\r","\r","        /**\r","         * Formats a cookie value for an object containing multiple values.\r","         * @param {Object} hash An object of key-value pairs to create a string for.\r","         * @return {String} A string suitable for use as a cookie value.\r","         * @method _createCookieHashString\r","         * @private\r","         * @static\r","         */\r","        _createCookieHashString : function (hash /*:Object*/) /*:String*/ {\r","            if (!isObject(hash)){\r","                error(\"Cookie._createCookieHashString(): Argument must be an object.\");\r","            }\r","\r","            var text /*:Array*/ = [];\r","\r","            O.each(hash, function(value, key){\r","                if (!isFunction(value) && !isUndefined(value)){\r","                    text.push(encode(key) + \"=\" + encode(String(value)));\r","                }\r","            });\r","\r","            return text.join(\"&\");\r","        },\r","\r","        /**\r","         * Parses a cookie hash string into an object.\r","         * @param {String} text The cookie hash string to parse (format: n1=v1&n2=v2).\r","         * @return {Object} An object containing entries for each cookie value.\r","         * @method _parseCookieHash\r","         * @private\r","         * @static\r","         */\r","        _parseCookieHash : function (text) {\r","\r","            var hashParts   = text.split(\"&\"),\r","                hashPart    = NULL,\r","                hash        = {};\r","\r","            if (text.length){\r","                for (var i=0, len=hashParts.length; i < len; i++){\r","                    hashPart = hashParts[i].split(\"=\");\r","                    hash[decode(hashPart[0])] = decode(hashPart[1]);\r","                }\r","            }\r","\r","            return hash;\r","        },\r","\r","        /**\r","         * Parses a cookie string into an object representing all accessible cookies.\r","         * @param {String} text The cookie string to parse.\r","         * @param {Boolean} shouldDecode (Optional) Indicates if the cookie values should be decoded or not. Default is true.\r","         * @param {Object} options (Optional) Contains settings for loading the cookie.\r","         * @return {Object} An object containing entries for each accessible cookie.\r","         * @method _parseCookieString\r","         * @private\r","         * @static\r","         */\r","        _parseCookieString : function (text /*:String*/, shouldDecode /*:Boolean*/, options /*:Object*/) /*:Object*/ {\r","\r","            var cookies /*:Object*/ = {};\r","\r","            if (isString(text) && text.length > 0) {\r","\r","                var decodeValue = (shouldDecode === false ? function(s){return s;} : decode),\r","                    cookieParts = text.split(/;\\s/g),\r","                    cookieName  = NULL,\r","                    cookieValue = NULL,\r","                    cookieNameValue = NULL;\r","\r","                for (var i=0, len=cookieParts.length; i < len; i++){\r","                    //check for normally-formatted cookie (name-value)\r","                    cookieNameValue = cookieParts[i].match(/([^=]+)=/i);\r","                    if (cookieNameValue instanceof Array){\r","                        try {\r","                            cookieName = decode(cookieNameValue[1]);\r","                            cookieValue = decodeValue(cookieParts[i].substring(cookieNameValue[1].length+1));\r","                        } catch (ex){\r","                            //intentionally ignore the cookie - the encoding is wrong\r","                        }\r","                    } else {\r","                        //means the cookie does not have an \"=\", so treat it as a boolean flag\r","                        cookieName = decode(cookieParts[i]);\r","                        cookieValue = \"\";\r","                    }\r","                    // don't overwrite an already loaded cookie if set by option\r","                    if (!isUndefined(options) && options.reverseCookieLoading) {\r","                        if (isUndefined(cookies[cookieName])) {\r","                            cookies[cookieName] = cookieValue;\r","                        }\r","                    } else {\r","                        cookies[cookieName] = cookieValue;\r","                    }\r","                }\r","\r","            }\r","\r","            return cookies;\r","        },\r","\r","        /**\r","         * Sets the document object that the cookie utility uses for setting\r","         * cookies. This method is necessary to ensure that the cookie utility\r","         * unit tests can pass even when run on a domain instead of locally.\r","         * This method should not be used otherwise; you should use\r","         * <code>Y.config.doc</code> to change the document that the cookie\r","         * utility uses for everyday purposes.\r","         * @param {Object} newDoc The object to use as the document.\r","         * @return {void}\r","         * @method _setDoc\r","         * @private\r","         */\r","        _setDoc: function(newDoc){\r","            doc = newDoc;\r","        },\r","\r","        //-------------------------------------------------------------------------\r","        // Public Methods\r","        //-------------------------------------------------------------------------\r","\r","        /**\r","         * Determines if the cookie with the given name exists. This is useful for\r","         * Boolean cookies (those that do not follow the name=value convention).\r","         * @param {String} name The name of the cookie to check.\r","         * @return {Boolean} True if the cookie exists, false if not.\r","         * @method exists\r","         * @static\r","         */\r","        exists: function(name) {\r","\r","            validateCookieName(name);   //throws error\r","\r","            var cookies = this._parseCookieString(doc.cookie, true);\r","\r","            return cookies.hasOwnProperty(name);\r","        },\r","\r","        /**\r","         * Returns the cookie value for the given name.\r","         * @param {String} name The name of the cookie to retrieve.\r","         * @param {Function|Object} options (Optional) An object containing one or more\r","         *      cookie options: raw (true/false), reverseCookieLoading (true/false)\r","         *      and converter (a function).\r","         *      The converter function is run on the value before returning it. The\r","         *      function is not used if the cookie doesn't exist. The function can be\r","         *      passed instead of the options object for backwards compatibility. When\r","         *      raw is set to true, the cookie value is not URI decoded.\r","         * @return {Variant} If no converter is specified, returns a string or null if\r","         *      the cookie doesn't exist. If the converter is specified, returns the value\r","         *      returned from the converter or null if the cookie doesn't exist.\r","         * @method get\r","         * @static\r","         */\r","        get : function (name, options) {\r","\r","            validateCookieName(name);   //throws error\r","\r","            var cookies,\r","                cookie,\r","                converter;\r","\r","            //if options is a function, then it's the converter\r","            if (isFunction(options)) {\r","                converter = options;\r","                options = {};\r","            } else if (isObject(options)) {\r","                converter = options.converter;\r","            } else {\r","                options = {};\r","            }\r","\r","            cookies = this._parseCookieString(doc.cookie, !options.raw, options);\r","            cookie = cookies[name];\r","\r","            //should return null, not undefined if the cookie doesn't exist\r","            if (isUndefined(cookie)) {\r","                return NULL;\r","            }\r","\r","            if (!isFunction(converter)){\r","                return cookie;\r","            } else {\r","                return converter(cookie);\r","            }\r","        },\r","\r","        /**\r","         * Returns the value of a subcookie.\r","         * @param {String} name The name of the cookie to retrieve.\r","         * @param {String} subName The name of the subcookie to retrieve.\r","         * @param {Function} converter (Optional) A function to run on the value before returning\r","         *      it. The function is not used if the cookie doesn't exist.\r","         * @param {Object} options (Optional) Containing one or more settings for cookie parsing.\r","         * @return {Variant} If the cookie doesn't exist, null is returned. If the subcookie\r","         *      doesn't exist, null if also returned. If no converter is specified and the\r","         *      subcookie exists, a string is returned. If a converter is specified and the\r","         *      subcookie exists, the value returned from the converter is returned.\r","         * @method getSub\r","         * @static\r","         */\r","        getSub : function (name /*:String*/, subName /*:String*/, converter /*:Function*/, options /*:Object*/) /*:Variant*/ {\r","\r","            var hash /*:Variant*/ = this.getSubs(name, options);\r","\r","            if (hash !== NULL) {\r","\r","                validateSubcookieName(subName);   //throws error\r","\r","                if (isUndefined(hash[subName])){\r","                    return NULL;\r","                }\r","\r","                if (!isFunction(converter)){\r","                    return hash[subName];\r","                } else {\r","                    return converter(hash[subName]);\r","                }\r","            } else {\r","                return NULL;\r","            }\r","\r","        },\r","\r","        /**\r","         * Returns an object containing name-value pairs stored in the cookie with the given name.\r","         * @param {String} name The name of the cookie to retrieve.\r","         * @param {Object} options (Optional) Containing one or more settings for cookie parsing.\r","         * @return {Object} An object of name-value pairs if the cookie with the given name\r","         *      exists, null if it does not.\r","         * @method getSubs\r","         * @static\r","         */\r","        getSubs : function (name /*:String*/, options /*:Object*/) {\r","\r","            validateCookieName(name);   //throws error\r","\r","            var cookies = this._parseCookieString(doc.cookie, false, options);\r","            if (isString(cookies[name])){\r","                return this._parseCookieHash(cookies[name]);\r","            }\r","            return NULL;\r","        },\r","\r","        /**\r","         * Removes a cookie from the machine by setting its expiration date to\r","         * sometime in the past.\r","         * @param {String} name The name of the cookie to remove.\r","         * @param {Object} options (Optional) An object containing one or more\r","         *      cookie options: path (a string), domain (a string),\r","         *      and secure (true/false). The expires option will be overwritten\r","         *      by the method.\r","         * @return {String} The created cookie string.\r","         * @method remove\r","         * @static\r","         */\r","        remove : function (name, options) {\r","\r","            validateCookieName(name);   //throws error\r","\r","            //set options\r","            options = Y.merge(options || {}, {\r","                expires: new Date(0)\r","            });\r","\r","            //set cookie\r","            return this.set(name, \"\", options);\r","        },\r","\r","        /**\r","         * Removes a sub cookie with a given name.\r","         * @param {String} name The name of the cookie in which the subcookie exists.\r","         * @param {String} subName The name of the subcookie to remove.\r","         * @param {Object} options (Optional) An object containing one or more\r","         *      cookie options: path (a string), domain (a string), expires (a Date object),\r","         *      removeIfEmpty (true/false), and secure (true/false). This must be the same\r","         *      settings as the original subcookie.\r","         * @return {String} The created cookie string.\r","         * @method removeSub\r","         * @static\r","         */\r","        removeSub : function(name, subName, options) {\r","\r","            validateCookieName(name);   //throws error\r","\r","            validateSubcookieName(subName);   //throws error\r","\r","            options = options || {};\r","\r","            //get all subcookies for this cookie\r","            var subs = this.getSubs(name);\r","\r","            //delete the indicated subcookie\r","            if (isObject(subs) && subs.hasOwnProperty(subName)){\r","                delete subs[subName];\r","\r","                if (!options.removeIfEmpty) {\r","                    //reset the cookie\r","\r","                    return this.setSubs(name, subs, options);\r","                } else {\r","                    //reset the cookie if there are subcookies left, else remove\r","                    for (var key in subs){\r","                        if (subs.hasOwnProperty(key) && !isFunction(subs[key]) && !isUndefined(subs[key])){\r","                            return this.setSubs(name, subs, options);\r","                        }\r","                    }\r","\r","                    return this.remove(name, options);\r","                }\r","            } else {\r","                return \"\";\r","            }\r","\r","        },\r","\r","        /**\r","         * Sets a cookie with a given name and value.\r","         * @param {String} name The name of the cookie to set.\r","         * @param {Variant} value The value to set for the cookie.\r","         * @param {Object} options (Optional) An object containing one or more\r","         *      cookie options: path (a string), domain (a string), expires (a Date object),\r","         *      secure (true/false), and raw (true/false). Setting raw to true indicates\r","         *      that the cookie should not be URI encoded before being set.\r","         * @return {String} The created cookie string.\r","         * @method set\r","         * @static\r","         */\r","        set : function (name, value, options) {\r","\r","            validateCookieName(name);   //throws error\r","\r","            if (isUndefined(value)){\r","                error(\"Cookie.set(): Value cannot be undefined.\");\r","            }\r","\r","            options = options || {};\r","\r","            var text = this._createCookieString(name, value, !options.raw, options);\r","            doc.cookie = text;\r","            return text;\r","        },\r","\r","        /**\r","         * Sets a sub cookie with a given name to a particular value.\r","         * @param {String} name The name of the cookie to set.\r","         * @param {String} subName The name of the subcookie to set.\r","         * @param {Variant} value The value to set.\r","         * @param {Object} options (Optional) An object containing one or more\r","         *      cookie options: path (a string), domain (a string), expires (a Date object),\r","         *      and secure (true/false).\r","         * @return {String} The created cookie string.\r","         * @method setSub\r","         * @static\r","         */\r","        setSub : function (name, subName, value, options) {\r","\r","            validateCookieName(name);   //throws error\r","\r","            validateSubcookieName(subName);   //throws error\r","\r","            if (isUndefined(value)){\r","                error(\"Cookie.setSub(): Subcookie value cannot be undefined.\");\r","            }\r","\r","            var hash = this.getSubs(name);\r","\r","            if (!isObject(hash)){\r","                hash = {};\r","            }\r","\r","            hash[subName] = value;\r","\r","            return this.setSubs(name, hash, options);\r","\r","        },\r","\r","        /**\r","         * Sets a cookie with a given name to contain a hash of name-value pairs.\r","         * @param {String} name The name of the cookie to set.\r","         * @param {Object} value An object containing name-value pairs.\r","         * @param {Object} options (Optional) An object containing one or more\r","         *      cookie options: path (a string), domain (a string), expires (a Date object),\r","         *      and secure (true/false).\r","         * @return {String} The created cookie string.\r","         * @method setSubs\r","         * @static\r","         */\r","        setSubs : function (name, value, options) {\r","\r","            validateCookieName(name);   //throws error\r","\r","            if (!isObject(value)){\r","                error(\"Cookie.setSubs(): Cookie value must be an object.\");\r","            }\r","\r","            var text /*:String*/ = this._createCookieString(name, this._createCookieHashString(value), false, options);\r","            doc.cookie = text;\r","            return text;\r","        }\r","\r","    };\r","","","}, '@VERSION@', {\"requires\": [\"yui-base\"]});","","}());"]};
}
var __cov_UfmK$qhwjwcuv6JhJYTUZg = __coverage__['build/cookie/cookie.js'];
__cov_UfmK$qhwjwcuv6JhJYTUZg.s['1']++;YUI.add('cookie',function(Y,NAME){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['1']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['2']++;var L=Y.Lang,O=Y.Object,NULL=null,isString=L.isString,isObject=L.isObject,isUndefined=L.isUndefined,isFunction=L.isFunction,encode=encodeURIComponent,decode=decodeURIComponent,doc=Y.config.doc;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['3']++;function error(message){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['2']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['4']++;throw new TypeError(message);}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['5']++;function validateCookieName(name){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['3']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['6']++;if((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['2'][0]++,!isString(name))||(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['2'][1]++,name==='')){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['1'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['7']++;error('Cookie name must be a non-empty string.');}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['1'][1]++;}}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['8']++;function validateSubcookieName(subName){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['4']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['9']++;if((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['4'][0]++,!isString(subName))||(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['4'][1]++,subName==='')){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['3'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['10']++;error('Subcookie name must be a non-empty string.');}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['3'][1]++;}}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['11']++;Y.Cookie={_createCookieString:function(name,value,encodeValue,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['5']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['12']++;options=(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['5'][0]++,options)||(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['5'][1]++,{});__cov_UfmK$qhwjwcuv6JhJYTUZg.s['13']++;var text=encode(name)+'='+(encodeValue?(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['6'][0]++,encode(value)):(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['6'][1]++,value)),expires=options.expires,path=options.path,domain=options.domain;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['14']++;if(isObject(options)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['7'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['15']++;if(expires instanceof Date){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['8'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['16']++;text+='; expires='+expires.toUTCString();}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['8'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['17']++;if((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['10'][0]++,isString(path))&&(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['10'][1]++,path!=='')){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['9'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['18']++;text+='; path='+path;}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['9'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['19']++;if((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['12'][0]++,isString(domain))&&(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['12'][1]++,domain!=='')){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['11'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['20']++;text+='; domain='+domain;}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['11'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['21']++;if(options.secure===true){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['13'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['22']++;text+='; secure';}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['13'][1]++;}}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['7'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['23']++;return text;},_createCookieHashString:function(hash){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['6']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['24']++;if(!isObject(hash)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['14'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['25']++;error('Cookie._createCookieHashString(): Argument must be an object.');}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['14'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['26']++;var text=[];__cov_UfmK$qhwjwcuv6JhJYTUZg.s['27']++;O.each(hash,function(value,key){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['7']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['28']++;if((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['16'][0]++,!isFunction(value))&&(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['16'][1]++,!isUndefined(value))){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['15'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['29']++;text.push(encode(key)+'='+encode(String(value)));}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['15'][1]++;}});__cov_UfmK$qhwjwcuv6JhJYTUZg.s['30']++;return text.join('&');},_parseCookieHash:function(text){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['8']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['31']++;var hashParts=text.split('&'),hashPart=NULL,hash={};__cov_UfmK$qhwjwcuv6JhJYTUZg.s['32']++;if(text.length){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['17'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['33']++;for(var i=0,len=hashParts.length;i<len;i++){__cov_UfmK$qhwjwcuv6JhJYTUZg.s['34']++;hashPart=hashParts[i].split('=');__cov_UfmK$qhwjwcuv6JhJYTUZg.s['35']++;hash[decode(hashPart[0])]=decode(hashPart[1]);}}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['17'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['36']++;return hash;},_parseCookieString:function(text,shouldDecode,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['9']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['37']++;var cookies={};__cov_UfmK$qhwjwcuv6JhJYTUZg.s['38']++;if((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['19'][0]++,isString(text))&&(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['19'][1]++,text.length>0)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['18'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['39']++;var decodeValue=shouldDecode===false?(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['20'][0]++,function(s){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['10']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['40']++;return s;}):(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['20'][1]++,decode),cookieParts=text.split(/;\s/g),cookieName=NULL,cookieValue=NULL,cookieNameValue=NULL;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['41']++;for(var i=0,len=cookieParts.length;i<len;i++){__cov_UfmK$qhwjwcuv6JhJYTUZg.s['42']++;cookieNameValue=cookieParts[i].match(/([^=]+)=/i);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['43']++;if(cookieNameValue instanceof Array){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['21'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['44']++;try{__cov_UfmK$qhwjwcuv6JhJYTUZg.s['45']++;cookieName=decode(cookieNameValue[1]);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['46']++;cookieValue=decodeValue(cookieParts[i].substring(cookieNameValue[1].length+1));}catch(ex){}}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['21'][1]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['47']++;cookieName=decode(cookieParts[i]);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['48']++;cookieValue='';}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['49']++;if((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['23'][0]++,!isUndefined(options))&&(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['23'][1]++,options.reverseCookieLoading)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['22'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['50']++;if(isUndefined(cookies[cookieName])){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['24'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['51']++;cookies[cookieName]=cookieValue;}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['24'][1]++;}}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['22'][1]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['52']++;cookies[cookieName]=cookieValue;}}}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['18'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['53']++;return cookies;},_setDoc:function(newDoc){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['11']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['54']++;doc=newDoc;},exists:function(name){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['12']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['55']++;validateCookieName(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['56']++;var cookies=this._parseCookieString(doc.cookie,true);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['57']++;return cookies.hasOwnProperty(name);},get:function(name,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['13']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['58']++;validateCookieName(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['59']++;var cookies,cookie,converter;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['60']++;if(isFunction(options)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['25'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['61']++;converter=options;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['62']++;options={};}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['25'][1]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['63']++;if(isObject(options)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['26'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['64']++;converter=options.converter;}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['26'][1]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['65']++;options={};}}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['66']++;cookies=this._parseCookieString(doc.cookie,!options.raw,options);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['67']++;cookie=cookies[name];__cov_UfmK$qhwjwcuv6JhJYTUZg.s['68']++;if(isUndefined(cookie)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['27'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['69']++;return NULL;}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['27'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['70']++;if(!isFunction(converter)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['28'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['71']++;return cookie;}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['28'][1]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['72']++;return converter(cookie);}},getSub:function(name,subName,converter,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['14']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['73']++;var hash=this.getSubs(name,options);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['74']++;if(hash!==NULL){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['29'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['75']++;validateSubcookieName(subName);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['76']++;if(isUndefined(hash[subName])){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['30'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['77']++;return NULL;}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['30'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['78']++;if(!isFunction(converter)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['31'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['79']++;return hash[subName];}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['31'][1]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['80']++;return converter(hash[subName]);}}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['29'][1]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['81']++;return NULL;}},getSubs:function(name,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['15']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['82']++;validateCookieName(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['83']++;var cookies=this._parseCookieString(doc.cookie,false,options);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['84']++;if(isString(cookies[name])){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['32'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['85']++;return this._parseCookieHash(cookies[name]);}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['32'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['86']++;return NULL;},remove:function(name,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['16']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['87']++;validateCookieName(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['88']++;options=Y.merge((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['33'][0]++,options)||(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['33'][1]++,{}),{expires:new Date(0)});__cov_UfmK$qhwjwcuv6JhJYTUZg.s['89']++;return this.set(name,'',options);},removeSub:function(name,subName,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['17']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['90']++;validateCookieName(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['91']++;validateSubcookieName(subName);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['92']++;options=(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['34'][0]++,options)||(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['34'][1]++,{});__cov_UfmK$qhwjwcuv6JhJYTUZg.s['93']++;var subs=this.getSubs(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['94']++;if((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['36'][0]++,isObject(subs))&&(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['36'][1]++,subs.hasOwnProperty(subName))){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['35'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['95']++;delete subs[subName];__cov_UfmK$qhwjwcuv6JhJYTUZg.s['96']++;if(!options.removeIfEmpty){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['37'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['97']++;return this.setSubs(name,subs,options);}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['37'][1]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['98']++;for(var key in subs){__cov_UfmK$qhwjwcuv6JhJYTUZg.s['99']++;if((__cov_UfmK$qhwjwcuv6JhJYTUZg.b['39'][0]++,subs.hasOwnProperty(key))&&(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['39'][1]++,!isFunction(subs[key]))&&(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['39'][2]++,!isUndefined(subs[key]))){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['38'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['100']++;return this.setSubs(name,subs,options);}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['38'][1]++;}}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['101']++;return this.remove(name,options);}}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['35'][1]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['102']++;return'';}},set:function(name,value,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['18']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['103']++;validateCookieName(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['104']++;if(isUndefined(value)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['40'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['105']++;error('Cookie.set(): Value cannot be undefined.');}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['40'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['106']++;options=(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['41'][0]++,options)||(__cov_UfmK$qhwjwcuv6JhJYTUZg.b['41'][1]++,{});__cov_UfmK$qhwjwcuv6JhJYTUZg.s['107']++;var text=this._createCookieString(name,value,!options.raw,options);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['108']++;doc.cookie=text;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['109']++;return text;},setSub:function(name,subName,value,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['19']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['110']++;validateCookieName(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['111']++;validateSubcookieName(subName);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['112']++;if(isUndefined(value)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['42'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['113']++;error('Cookie.setSub(): Subcookie value cannot be undefined.');}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['42'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['114']++;var hash=this.getSubs(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['115']++;if(!isObject(hash)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['43'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['116']++;hash={};}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['43'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['117']++;hash[subName]=value;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['118']++;return this.setSubs(name,hash,options);},setSubs:function(name,value,options){__cov_UfmK$qhwjwcuv6JhJYTUZg.f['20']++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['119']++;validateCookieName(name);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['120']++;if(!isObject(value)){__cov_UfmK$qhwjwcuv6JhJYTUZg.b['44'][0]++;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['121']++;error('Cookie.setSubs(): Cookie value must be an object.');}else{__cov_UfmK$qhwjwcuv6JhJYTUZg.b['44'][1]++;}__cov_UfmK$qhwjwcuv6JhJYTUZg.s['122']++;var text=this._createCookieString(name,this._createCookieHashString(value),false,options);__cov_UfmK$qhwjwcuv6JhJYTUZg.s['123']++;doc.cookie=text;__cov_UfmK$qhwjwcuv6JhJYTUZg.s['124']++;return text;}};},'@VERSION@',{'requires':['yui-base']});

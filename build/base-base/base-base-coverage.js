if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/base-base/base-base.js']) {
   __coverage__['build/base-base/base-base.js'] = {"path":"build/base-base/base-base.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":21},"end":{"line":1,"column":40}}},"2":{"name":"Base","line":71,"loc":{"start":{"line":71,"column":4},"end":{"line":71,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":170,"column":82}},"2":{"start":{"line":19,"column":4},"end":{"line":22,"column":43}},"3":{"start":{"line":71,"column":4},"end":{"line":75,"column":5}},"4":{"start":{"line":72,"column":8},"end":{"line":72,"column":40}},"5":{"start":{"line":73,"column":8},"end":{"line":73,"column":46}},"6":{"start":{"line":74,"column":8},"end":{"line":74,"column":47}},"7":{"start":{"line":86,"column":4},"end":{"line":86,"column":73}},"8":{"start":{"line":103,"column":4},"end":{"line":103,"column":88}},"9":{"start":{"line":119,"column":4},"end":{"line":119,"column":23}},"10":{"start":{"line":135,"column":4},"end":{"line":135,"column":60}},"11":{"start":{"line":156,"column":4},"end":{"line":156,"column":44}},"12":{"start":{"line":158,"column":4},"end":{"line":158,"column":42}},"13":{"start":{"line":159,"column":4},"end":{"line":159,"column":49}},"14":{"start":{"line":162,"column":4},"end":{"line":162,"column":47}},"15":{"start":{"line":165,"column":4},"end":{"line":165,"column":38}},"16":{"start":{"line":167,"column":4},"end":{"line":167,"column":18}}},"branchMap":{},"code":["(function () { YUI.add('base-base', function (Y, NAME) {","","    /**\r","     * The base module provides the Base class, which objects requiring attribute and custom event support can extend.\r","     * The module also provides two ways to reuse code - It augments Base with the Plugin.Host interface which provides\r","     * plugin support and also provides the BaseCore.build method which provides a way to build custom classes using extensions.\r","     *\r","     * @module base\r","     */\r","\r","    /**\r","     * The base-base submodule provides the Base class without the Plugin support, provided by Plugin.Host,\r","     * and without the extension support provided by BaseCore.build.\r","     *\r","     * @module base\r","     * @submodule base-base\r","     */\r","\r","    var AttributeCore   = Y.AttributeCore,\r","        AttributeExtras = Y.AttributeExtras,\r","        BaseCore        = Y.BaseCore,\r","        BaseObservable  = Y.BaseObservable;\r","\r","    /**\r","     * <p>\r","     * A base class which objects requiring attributes and custom event support can\r","     * extend. Base also handles the chaining of initializer and destructor methods across\r","     * the hierarchy as part of object construction and destruction. Additionally, attributes configured\r","     * through the static <a href=\"#property_ATTRS\">ATTRS</a> property for each class\r","     * in the hierarchy will be initialized by Base.\r","     * </p>\r","     *\r","     * <p>\r","     * The static <a href=\"#property_NAME\">NAME</a> property of each class extending\r","     * from Base will be used as the identifier for the class, and is used by Base to prefix\r","     * all events fired by instances of that class.\r","     * </p>\r","     *\r","     * @class Base\r","     * @constructor\r","     * @uses BaseCore\r","     * @uses BaseObservable\r","     * @uses AttributeCore\r","     * @uses AttributeObservable\r","     * @uses AttributeExtras\r","     * @uses EventTarget\r","     *\r","     * @param {Object} config Object with configuration property name/value pairs. The object can be\r","     * used to provide default values for the objects published attributes.\r","     *\r","     * <p>\r","     * The config object can also contain the following non-attribute properties, providing a convenient\r","     * way to configure events listeners and plugins for the instance, as part of the constructor call:\r","     * </p>\r","     *\r","     * <dl>\r","     *   <dt>on</dt>\r","     *   <dd>An event name to listener function map, to register event listeners for the \"on\" moment of the event.\r","     *       A constructor convenience property for the <a href=\"Base.html#method_on\">on</a> method.</dd>\r","     *   <dt>after</dt>\r","     *   <dd>An event name to listener function map, to register event listeners for the \"after\" moment of the event.\r","     *       A constructor convenience property for the <a href=\"Base.html#method_after\">after</a> method.</dd>\r","     *   <dt>bubbleTargets</dt>\r","     *   <dd>An object, or array of objects, to register as bubble targets for bubbled events fired by this instance.\r","     *       A constructor convenience property for the <a href=\"EventTarget.html#method_addTarget\">addTarget</a> method.</dd>\r","     *   <dt>plugins</dt>\r","     *   <dd>A plugin, or array of plugins to be plugged into the instance (see PluginHost's plug method for signature details).\r","     *       A constructor convenience property for the <a href=\"Plugin.Host.html#method_plug\">plug</a> method.</dd>\r","     * </dl>\r","     */\r","    function Base() {\r","        BaseCore.apply(this, arguments);\r","        BaseObservable.apply(this, arguments);\r","        AttributeExtras.apply(this, arguments);\r","    }\r","\r","    /**\r","     * The list of properties which can be configured for\r","     * each attribute (e.g. setter, getter, writeOnce, readOnly etc.)\r","     *\r","     * @property _ATTR_CFG\r","     * @type Array\r","     * @static\r","     * @private\r","     */\r","    Base._ATTR_CFG = BaseCore._ATTR_CFG.concat(BaseObservable._ATTR_CFG);\r","\r","    /**\r","     * The array of non-attribute configuration properties supported by this class.\r","     *\r","     * `Base` supports \"on\", \"after\", \"plugins\" and \"bubbleTargets\" properties,\r","     * which are not set up as attributes.\r","     *\r","     * This property is primarily required so that when\r","     * <a href=\"#property__allowAdHocAttrs\">`_allowAdHocAttrs`</a> is enabled by\r","     * a class, non-attribute configurations don't get added as ad-hoc attributes.\r","     *\r","     * @property _NON_ATTRS_CFG\r","     * @type Array\r","     * @static\r","     * @private\r","     */\r","    Base._NON_ATTRS_CFG = BaseCore._NON_ATTRS_CFG.concat(BaseObservable._NON_ATTRS_CFG);\r","\r","    /**\r","     * <p>\r","     * The string to be used to identify instances of\r","     * this class, for example in prefixing events.\r","     * </p>\r","     * <p>\r","     * Classes extending Base, should define their own\r","     * static NAME property, which should be camelCase by\r","     * convention (e.g. MyClass.NAME = \"myClass\";).\r","     * </p>\r","     * @property NAME\r","     * @type String\r","     * @static\r","     */\r","    Base.NAME = 'base';\r","\r","    /**\r","     * The default set of attributes which will be available for instances of this class, and\r","     * their configuration. In addition to the configuration properties listed by\r","     * Attribute's <a href=\"Attribute.html#method_addAttr\">addAttr</a> method, the attribute\r","     * can also be configured with a \"cloneDefaultValue\" property, which defines how the statically\r","     * defined value field should be protected (\"shallow\", \"deep\" and false are supported values).\r","     *\r","     * By default if the value is an object literal or an array it will be \"shallow\" cloned, to\r","     * protect the default value.\r","     *\r","     * @property ATTRS\r","     * @type Object\r","     * @static\r","     */\r","    Base.ATTRS = AttributeCore.protectAttrs(BaseCore.ATTRS);\r","\r","    /**\r","    Provides a way to safely modify a `Y.Base` subclass' static `ATTRS` after\r","    the class has been defined or created.\r","\r","    Base-based classes cache information about the class hierarchy in order to\r","    efficiently create instances. This cache includes includes the aggregated\r","    `ATTRS` configs. If the static `ATTRS` configs need to be modified after the\r","    class has been defined or create, then use this method which will make sure\r","    to clear any cached data before making any modifications.\r","\r","    @method modifyAttrs\r","    @param {Function} [ctor] The constructor function whose `ATTRS` should be\r","        modified. If a `ctor` function is not specified, then `this` is assumed\r","        to be the constructor which hosts the `ATTRS`.\r","    @param {Object} configs The collection of `ATTRS` configs to mix with the\r","        existing attribute configurations.\r","    @static\r","    @since 3.10.0\r","    **/\r","    Base.modifyAttrs = BaseCore.modifyAttrs;\r","\r","    Y.mix(Base, BaseCore, false, null, 1);\r","    Y.mix(Base, AttributeExtras, false, null, 1);\r","\r","    // Needs to be `true`, to overwrite methods from `BaseCore`.\r","    Y.mix(Base, BaseObservable, true, null, 1);\r","\r","    // Fix constructor\r","    Base.prototype.constructor = Base;\r","\r","    Y.Base = Base;\r","","","}, '@VERSION@', {\"requires\": [\"attribute-base\", \"base-core\", \"base-observable\"]});","","}());"]};
}
var __cov_f7g9dZFunplQrlRqAhOGDw = __coverage__['build/base-base/base-base.js'];
__cov_f7g9dZFunplQrlRqAhOGDw.s['1']++;YUI.add('base-base',function(Y,NAME){__cov_f7g9dZFunplQrlRqAhOGDw.f['1']++;__cov_f7g9dZFunplQrlRqAhOGDw.s['2']++;var AttributeCore=Y.AttributeCore,AttributeExtras=Y.AttributeExtras,BaseCore=Y.BaseCore,BaseObservable=Y.BaseObservable;__cov_f7g9dZFunplQrlRqAhOGDw.s['3']++;function Base(){__cov_f7g9dZFunplQrlRqAhOGDw.f['2']++;__cov_f7g9dZFunplQrlRqAhOGDw.s['4']++;BaseCore.apply(this,arguments);__cov_f7g9dZFunplQrlRqAhOGDw.s['5']++;BaseObservable.apply(this,arguments);__cov_f7g9dZFunplQrlRqAhOGDw.s['6']++;AttributeExtras.apply(this,arguments);}__cov_f7g9dZFunplQrlRqAhOGDw.s['7']++;Base._ATTR_CFG=BaseCore._ATTR_CFG.concat(BaseObservable._ATTR_CFG);__cov_f7g9dZFunplQrlRqAhOGDw.s['8']++;Base._NON_ATTRS_CFG=BaseCore._NON_ATTRS_CFG.concat(BaseObservable._NON_ATTRS_CFG);__cov_f7g9dZFunplQrlRqAhOGDw.s['9']++;Base.NAME='base';__cov_f7g9dZFunplQrlRqAhOGDw.s['10']++;Base.ATTRS=AttributeCore.protectAttrs(BaseCore.ATTRS);__cov_f7g9dZFunplQrlRqAhOGDw.s['11']++;Base.modifyAttrs=BaseCore.modifyAttrs;__cov_f7g9dZFunplQrlRqAhOGDw.s['12']++;Y.mix(Base,BaseCore,false,null,1);__cov_f7g9dZFunplQrlRqAhOGDw.s['13']++;Y.mix(Base,AttributeExtras,false,null,1);__cov_f7g9dZFunplQrlRqAhOGDw.s['14']++;Y.mix(Base,BaseObservable,true,null,1);__cov_f7g9dZFunplQrlRqAhOGDw.s['15']++;Base.prototype.constructor=Base;__cov_f7g9dZFunplQrlRqAhOGDw.s['16']++;Y.Base=Base;},'@VERSION@',{'requires':['attribute-base','base-core','base-observable']});

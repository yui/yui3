YUI.add("event-simulate",function(a){(function(){var i=a.Lang,g=a.Array,b=i.isFunction,n=i.isString,j=i.isBoolean,k=i.isObject,p=i.isNumber,t=a.config.doc,o={click:1,dblclick:1,mouseover:1,mouseout:1,mousedown:1,mouseup:1,mousemove:1,contextmenu:1},r={keydown:1,keyup:1,keypress:1},d={submit:1,blur:1,change:1,focus:1,resize:1,scroll:1,select:1},m={scroll:1,resize:1,reset:1,submit:1,change:1,select:1,error:1,abort:1},c={touchstart:1,touchmove:1,touchend:1,touchcancel:1},h={gesturestart:1,gesturechange:1,gestureend:1};a.mix(m,o);a.mix(m,r);a.mix(m,c);function l(z,D,y,w,F,v,u,E,B,H,G){if(!z){a.error("simulateKeyEvent(): Invalid target.");}if(n(D)){D=D.toLowerCase();switch(D){case"textevent":D="keypress";break;case"keyup":case"keydown":case"keypress":break;default:a.error("simulateKeyEvent(): Event type '"+D+"' not supported.");}}else{a.error("simulateKeyEvent(): Event type must be a string.");}if(!j(y)){y=true;}if(!j(w)){w=true;}if(!k(F)){F=a.config.win;}if(!j(v)){v=false;}if(!j(u)){u=false;}if(!j(E)){E=false;}if(!j(B)){B=false;}if(!p(H)){H=0;}if(!p(G)){G=0;}var C=null;if(b(t.createEvent)){try{C=t.createEvent("KeyEvents");C.initKeyEvent(D,y,w,F,v,u,E,B,H,G);}catch(A){try{C=t.createEvent("Events");}catch(x){C=t.createEvent("UIEvents");}finally{C.initEvent(D,y,w);C.view=F;C.altKey=u;C.ctrlKey=v;C.shiftKey=E;C.metaKey=B;C.keyCode=H;C.charCode=G;}}z.dispatchEvent(C);}else{if(k(t.createEventObject)){C=t.createEventObject();C.bubbles=y;C.cancelable=w;C.view=F;C.ctrlKey=v;C.altKey=u;C.shiftKey=E;C.metaKey=B;C.keyCode=(G>0)?G:H;z.fireEvent("on"+D,C);}else{a.error("simulateKeyEvent(): No event simulation framework present.");}}}function f(E,J,B,y,K,D,A,z,x,v,w,u,I,G,C,F){if(!E){a.error("simulateMouseEvent(): Invalid target.");}if(n(J)){J=J.toLowerCase();if(!o[J]){a.error("simulateMouseEvent(): Event type '"+J+"' not supported.");}}else{a.error("simulateMouseEvent(): Event type must be a string.");}if(!j(B)){B=true;}if(!j(y)){y=(J!="mousemove");}if(!k(K)){K=a.config.win;}if(!p(D)){D=1;}if(!p(A)){A=0;}if(!p(z)){z=0;}if(!p(x)){x=0;}if(!p(v)){v=0;}if(!j(w)){w=false;}if(!j(u)){u=false;}if(!j(I)){I=false;}if(!j(G)){G=false;}if(!p(C)){C=0;}F=F||null;var H=null;if(b(t.createEvent)){H=t.createEvent("MouseEvents");if(H.initMouseEvent){H.initMouseEvent(J,B,y,K,D,A,z,x,v,w,u,I,G,C,F);}else{H=t.createEvent("UIEvents");H.initEvent(J,B,y);H.view=K;H.detail=D;H.screenX=A;H.screenY=z;H.clientX=x;H.clientY=v;H.ctrlKey=w;H.altKey=u;H.metaKey=G;H.shiftKey=I;H.button=C;H.relatedTarget=F;}if(F&&!H.relatedTarget){if(J=="mouseout"){H.toElement=F;}else{if(J=="mouseover"){H.fromElement=F;}}}E.dispatchEvent(H);}else{if(k(t.createEventObject)){H=t.createEventObject();H.bubbles=B;H.cancelable=y;H.view=K;H.detail=D;H.screenX=A;H.screenY=z;H.clientX=x;H.clientY=v;H.ctrlKey=w;H.altKey=u;H.metaKey=G;H.shiftKey=I;switch(C){case 0:H.button=1;break;case 1:H.button=4;break;case 2:break;default:H.button=0;}H.relatedTarget=F;E.fireEvent("on"+J,H);}else{a.error("simulateMouseEvent(): No event simulation framework present.");}}}function e(A,z,w,v,u,y){if(!A){a.error("simulateUIEvent(): Invalid target.");}if(n(z)){z=z.toLowerCase();if(!d[z]){a.error("simulateUIEvent(): Event type '"+z+"' not supported.");}}else{a.error("simulateUIEvent(): Event type must be a string.");}var x=null;if(!j(w)){w=(z in m);}if(!j(v)){v=(z=="submit");}if(!k(u)){u=a.config.win;}if(!p(y)){y=1;}if(b(t.createEvent)){x=t.createEvent("UIEvents");x.initUIEvent(z,w,v,u,y);A.dispatchEvent(x);}else{if(k(t.createEventObject)){x=t.createEventObject();x.bubbles=w;x.cancelable=v;x.view=u;x.detail=y;A.fireEvent("on"+z,x);}else{a.error("simulateUIEvent(): No event simulation framework present.");}}}function s(E,I,C,y,J,D,A,z,x,v,w,u,H,F,B,K){var G;if(!a.UA.ios||a.UA.ios<2){a.error("simulateGestureEvent(): Native gesture DOM eventframe is not available in this platform.");}if(!E){a.error("simulateGestureEvent(): Invalid target.");}if(a.Lang.isString(I)){I=I.toLowerCase();if(!h[I]){a.error("simulateTouchEvent(): Event type '"+I+"' not supported.");}}else{a.error("simulateGestureEvent(): Event type must be a string.");}if(!a.Lang.isBoolean(C)){C=true;}if(!a.Lang.isBoolean(y)){y=true;}if(!a.Lang.isObject(J)){J=a.config.win;}if(!a.Lang.isNumber(D)){D=2;}if(!a.Lang.isNumber(A)){A=0;}if(!a.Lang.isNumber(z)){z=0;}if(!a.Lang.isNumber(x)){x=0;}if(!a.Lang.isNumber(v)){v=0;}if(!a.Lang.isBoolean(w)){w=false;}if(!a.Lang.isBoolean(u)){u=false;}if(!a.Lang.isBoolean(H)){H=false;}if(!a.Lang.isBoolean(F)){F=false;}if(!a.Lang.isNumber(B)){B=1;}if(!a.Lang.isNumber(K)){K=0;}G=t.createEvent("GestureEvent");G.initGestureEvent(I,C,y,J,D,A,z,x,v,w,u,H,F,E,B,K);E.dispatchEvent(G);}function q(L,z,A,M,C,J,u,N,G,F,w,v,E,x,D,I,y,K,H){var B;if(!L){a.error("simulateTouchEvent(): Invalid target.");}if(a.Lang.isString(z)){z=z.toLowerCase();if(!c[z]){a.error("simulateTouchEvent(): Event type '"+z+"' not supported.");}}else{a.error("simulateTouchEvent(): Event type must be a string.");}if(z==="touchstart"||z==="touchmove"){if(D.length===0){a.error("simulateTouchEvent(): No touch object in touches");}}else{if(z==="touchend"){if(y.length===0){a.error("simulateTouchEvent(): No touch object in changedTouches");}}}if(!a.Lang.isBoolean(A)){A=true;}if(!a.Lang.isBoolean(M)){M=(z!="touchcancel");}if(!a.Lang.isObject(C)){C=a.config.win;}if(!a.Lang.isNumber(J)){J=1;}if(!a.Lang.isNumber(u)){u=0;}if(!a.Lang.isNumber(N)){N=0;}if(!a.Lang.isNumber(G)){G=0;}if(!a.Lang.isNumber(F)){F=0;}if(!a.Lang.isBoolean(w)){w=false;}if(!a.Lang.isBoolean(v)){v=false;}if(!a.Lang.isBoolean(E)){E=false;}if(!a.Lang.isBoolean(x)){x=false;}if(!a.Lang.isNumber(K)){K=1;}if(!a.Lang.isNumber(H)){H=0;}if(a.Lang.isFunction(t.createEvent)){if(a.UA.android){if(a.UA.android<4){B=t.createEvent("MouseEvents");B.initMouseEvent(z,A,M,C,J,u,N,G,F,w,v,E,x,0,L);B.touches=D;B.targetTouches=I;B.changedTouches=y;}else{B=t.createEvent("TouchEvent");B.initTouchEvent(D,I,y,z,C,u,N,G,F,w,v,E,x);}}else{if(a.UA.ios){if(a.UA.ios>=2){B=t.createEvent("TouchEvent");B.initTouchEvent(z,A,M,C,J,u,N,G,F,w,v,E,x,D,I,y,K,H);
}else{a.error("simulateTouchEvent(): No touch event simulation framework present for iOS, "+a.UA.ios+".");}}else{a.error("simulateTouchEvent(): Not supported agent yet, "+a.UA.userAgent);}}L.dispatchEvent(B);}else{a.error("simulateTouchEvent(): No event simulation framework present.");}}a.Event.simulate=function(w,v,u){u=u||{};if(o[v]){f(w,v,u.bubbles,u.cancelable,u.view,u.detail,u.screenX,u.screenY,u.clientX,u.clientY,u.ctrlKey,u.altKey,u.shiftKey,u.metaKey,u.button,u.relatedTarget);}else{if(r[v]){l(w,v,u.bubbles,u.cancelable,u.view,u.ctrlKey,u.altKey,u.shiftKey,u.metaKey,u.keyCode,u.charCode);}else{if(d[v]){e(w,v,u.bubbles,u.cancelable,u.view,u.detail);}else{if(c[v]){if((a.config.win&&("ontouchstart" in a.config.win))&&!(a.UA.chrome&&a.UA.chrome<6)){q(w,v,u.bubbles,u.cancelable,u.view,u.detail,u.screenX,u.screenY,u.clientX,u.clientY,u.ctrlKey,u.altKey,u.shiftKey,u.metaKey,u.touches,u.targetTouches,u.changedTouches,u.scale,u.rotation);}else{a.error("simulate(): Event '"+v+"' can't be simulated. Use gesture-simulate module instead.");}}else{if(a.UA.ios&&a.UA.ios>=2&&h[v]){s(w,v,u.bubbles,u.cancelable,u.view,u.detail,u.screenX,u.screenY,u.clientX,u.clientY,u.ctrlKey,u.altKey,u.shiftKey,u.metaKey,u.scale,u.rotation);}else{a.error("simulate(): Event '"+v+"' can't be simulated.");}}}}}};})();},"@VERSION@",{requires:["event-base"]});
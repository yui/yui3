if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/attribute-core/attribute-core.js']) {
   __coverage__['build/attribute-core/attribute-core.js'] = {"path":"build/attribute-core/attribute-core.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0,0,0],"97":[0,0],"98":[0,0],"99":[0,0,0],"100":[0,0],"101":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":45}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":25}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":13},"end":{"line":32,"column":38}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":16},"end":{"line":49,"column":36}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":36}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":19},"end":{"line":86,"column":39}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":28},"end":{"line":96,"column":49}}},"8":{"name":"(anonymous_8)","line":110,"loc":{"start":{"line":110,"column":13},"end":{"line":110,"column":33}}},"9":{"name":"(anonymous_9)","line":131,"loc":{"start":{"line":131,"column":17},"end":{"line":131,"column":43}}},"10":{"name":"AttributeCore","line":225,"loc":{"start":{"line":225,"column":4},"end":{"line":225,"column":48}}},"11":{"name":"(anonymous_11)","line":273,"loc":{"start":{"line":273,"column":33},"end":{"line":273,"column":50}}},"12":{"name":"(anonymous_12)","line":300,"loc":{"start":{"line":300,"column":24},"end":{"line":300,"column":54}}},"13":{"name":"(anonymous_13)","line":403,"loc":{"start":{"line":403,"column":17},"end":{"line":403,"column":46}}},"14":{"name":"(anonymous_14)","line":460,"loc":{"start":{"line":460,"column":19},"end":{"line":460,"column":34}}},"15":{"name":"(anonymous_15)","line":476,"loc":{"start":{"line":476,"column":14},"end":{"line":476,"column":29}}},"16":{"name":"(anonymous_16)","line":489,"loc":{"start":{"line":489,"column":21},"end":{"line":489,"column":36}}},"17":{"name":"(anonymous_17)","line":500,"loc":{"start":{"line":500,"column":22},"end":{"line":500,"column":37}}},"18":{"name":"(anonymous_18)","line":522,"loc":{"start":{"line":522,"column":14},"end":{"line":522,"column":40}}},"19":{"name":"(anonymous_19)","line":538,"loc":{"start":{"line":538,"column":15},"end":{"line":538,"column":41}}},"20":{"name":"(anonymous_20)","line":559,"loc":{"start":{"line":559,"column":19},"end":{"line":559,"column":53}}},"21":{"name":"(anonymous_21)","line":650,"loc":{"start":{"line":650,"column":19},"end":{"line":650,"column":34}}},"22":{"name":"(anonymous_22)","line":700,"loc":{"start":{"line":700,"column":23},"end":{"line":700,"column":38}}},"23":{"name":"(anonymous_23)","line":714,"loc":{"start":{"line":714,"column":23},"end":{"line":714,"column":45}}},"24":{"name":"(anonymous_24)","line":737,"loc":{"start":{"line":737,"column":22},"end":{"line":737,"column":77}}},"25":{"name":"(anonymous_25)","line":814,"loc":{"start":{"line":814,"column":19},"end":{"line":814,"column":41}}},"26":{"name":"(anonymous_26)","line":828,"loc":{"start":{"line":828,"column":20},"end":{"line":828,"column":42}}},"27":{"name":"(anonymous_27)","line":846,"loc":{"start":{"line":846,"column":19},"end":{"line":846,"column":35}}},"28":{"name":"(anonymous_28)","line":859,"loc":{"start":{"line":859,"column":20},"end":{"line":859,"column":36}}},"29":{"name":"(anonymous_29)","line":901,"loc":{"start":{"line":901,"column":19},"end":{"line":901,"column":48}}},"30":{"name":"(anonymous_30)","line":930,"loc":{"start":{"line":930,"column":20},"end":{"line":930,"column":49}}},"31":{"name":"(anonymous_31)","line":986,"loc":{"start":{"line":986,"column":24},"end":{"line":986,"column":44}}},"32":{"name":"(anonymous_32)","line":1030,"loc":{"start":{"line":1030,"column":26},"end":{"line":1030,"column":58}}},"33":{"name":"(anonymous_33)","line":1092,"loc":{"start":{"line":1092,"column":21},"end":{"line":1092,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1110,"column":39}},"2":{"start":{"line":14,"column":4},"end":{"line":20,"column":6}},"3":{"start":{"line":19,"column":8},"end":{"line":19,"column":23}},"4":{"start":{"line":22,"column":4},"end":{"line":149,"column":6}},"5":{"start":{"line":33,"column":12},"end":{"line":33,"column":39}},"6":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"7":{"start":{"line":36,"column":16},"end":{"line":36,"column":44}},"8":{"start":{"line":39,"column":12},"end":{"line":39,"column":28}},"9":{"start":{"line":50,"column":12},"end":{"line":51,"column":20}},"10":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"11":{"start":{"line":54,"column":16},"end":{"line":54,"column":44}},"12":{"start":{"line":57,"column":12},"end":{"line":61,"column":13}},"13":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"14":{"start":{"line":59,"column":20},"end":{"line":59,"column":41}},"15":{"start":{"line":72,"column":12},"end":{"line":72,"column":39}},"16":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"17":{"start":{"line":75,"column":16},"end":{"line":75,"column":33}},"18":{"start":{"line":87,"column":12},"end":{"line":87,"column":21}},"19":{"start":{"line":89,"column":12},"end":{"line":99,"column":13}},"20":{"start":{"line":90,"column":16},"end":{"line":90,"column":33}},"21":{"start":{"line":92,"column":16},"end":{"line":94,"column":17}},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":38}},"23":{"start":{"line":96,"column":16},"end":{"line":98,"column":25}},"24":{"start":{"line":97,"column":20},"end":{"line":97,"column":77}},"25":{"start":{"line":111,"column":12},"end":{"line":111,"column":39}},"26":{"start":{"line":113,"column":12},"end":{"line":115,"column":13}},"27":{"start":{"line":114,"column":16},"end":{"line":114,"column":33}},"28":{"start":{"line":132,"column":12},"end":{"line":133,"column":25}},"29":{"start":{"line":135,"column":12},"end":{"line":145,"column":13}},"30":{"start":{"line":136,"column":16},"end":{"line":136,"column":27}},"31":{"start":{"line":137,"column":19},"end":{"line":145,"column":13}},"32":{"start":{"line":138,"column":16},"end":{"line":138,"column":25}},"33":{"start":{"line":140,"column":16},"end":{"line":144,"column":17}},"34":{"start":{"line":141,"column":20},"end":{"line":143,"column":21}},"35":{"start":{"line":142,"column":24},"end":{"line":142,"column":45}},"36":{"start":{"line":147,"column":12},"end":{"line":147,"column":23}},"37":{"start":{"line":168,"column":4},"end":{"line":192,"column":22}},"38":{"start":{"line":225,"column":4},"end":{"line":233,"column":5}},"39":{"start":{"line":230,"column":8},"end":{"line":230,"column":28}},"40":{"start":{"line":232,"column":8},"end":{"line":232,"column":48}},"41":{"start":{"line":247,"column":4},"end":{"line":247,"column":37}},"42":{"start":{"line":248,"column":4},"end":{"line":248,"column":48}},"43":{"start":{"line":262,"column":4},"end":{"line":262,"column":122}},"44":{"start":{"line":273,"column":4},"end":{"line":284,"column":6}},"45":{"start":{"line":274,"column":8},"end":{"line":281,"column":9}},"46":{"start":{"line":275,"column":12},"end":{"line":275,"column":35}},"47":{"start":{"line":276,"column":12},"end":{"line":280,"column":13}},"48":{"start":{"line":277,"column":16},"end":{"line":279,"column":17}},"49":{"start":{"line":278,"column":20},"end":{"line":278,"column":55}},"50":{"start":{"line":283,"column":8},"end":{"line":283,"column":21}},"51":{"start":{"line":286,"column":4},"end":{"line":1105,"column":6}},"52":{"start":{"line":301,"column":12},"end":{"line":301,"column":40}},"53":{"start":{"line":302,"column":12},"end":{"line":302,"column":49}},"54":{"start":{"line":406,"column":12},"end":{"line":409,"column":25}},"55":{"start":{"line":411,"column":12},"end":{"line":411,"column":34}},"56":{"start":{"line":413,"column":12},"end":{"line":413,"column":66}},"57":{"start":{"line":415,"column":12},"end":{"line":447,"column":13}},"58":{"start":{"line":416,"column":16},"end":{"line":419,"column":19}},"59":{"start":{"line":423,"column":16},"end":{"line":446,"column":17}},"60":{"start":{"line":425,"column":20},"end":{"line":425,"column":49}},"61":{"start":{"line":429,"column":20},"end":{"line":433,"column":21}},"62":{"start":{"line":431,"column":24},"end":{"line":431,"column":45}},"63":{"start":{"line":432,"column":24},"end":{"line":432,"column":44}},"64":{"start":{"line":435,"column":20},"end":{"line":435,"column":40}},"65":{"start":{"line":436,"column":20},"end":{"line":436,"column":47}},"66":{"start":{"line":438,"column":20},"end":{"line":438,"column":47}},"67":{"start":{"line":440,"column":20},"end":{"line":443,"column":21}},"68":{"start":{"line":442,"column":24},"end":{"line":442,"column":46}},"69":{"start":{"line":445,"column":20},"end":{"line":445,"column":53}},"70":{"start":{"line":449,"column":12},"end":{"line":449,"column":24}},"71":{"start":{"line":461,"column":12},"end":{"line":461,"column":50}},"72":{"start":{"line":477,"column":12},"end":{"line":477,"column":39}},"73":{"start":{"line":490,"column":12},"end":{"line":490,"column":47}},"74":{"start":{"line":501,"column":12},"end":{"line":502,"column":48}},"75":{"start":{"line":504,"column":12},"end":{"line":504,"column":47}},"76":{"start":{"line":505,"column":12},"end":{"line":505,"column":37}},"77":{"start":{"line":506,"column":12},"end":{"line":506,"column":40}},"78":{"start":{"line":523,"column":12},"end":{"line":523,"column":50}},"79":{"start":{"line":539,"column":12},"end":{"line":539,"column":56}},"80":{"start":{"line":560,"column":12},"end":{"line":569,"column":29}},"81":{"start":{"line":571,"column":12},"end":{"line":575,"column":13}},"82":{"start":{"line":572,"column":16},"end":{"line":572,"column":31}},"83":{"start":{"line":573,"column":16},"end":{"line":573,"column":39}},"84":{"start":{"line":574,"column":16},"end":{"line":574,"column":36}},"85":{"start":{"line":577,"column":12},"end":{"line":579,"column":13}},"86":{"start":{"line":578,"column":16},"end":{"line":578,"column":40}},"87":{"start":{"line":581,"column":12},"end":{"line":581,"column":49}},"88":{"start":{"line":583,"column":12},"end":{"line":583,"column":43}},"89":{"start":{"line":585,"column":12},"end":{"line":588,"column":13}},"90":{"start":{"line":587,"column":16},"end":{"line":587,"column":35}},"91":{"start":{"line":590,"column":12},"end":{"line":590,"column":38}},"92":{"start":{"line":591,"column":12},"end":{"line":591,"column":44}},"93":{"start":{"line":593,"column":12},"end":{"line":602,"column":13}},"94":{"start":{"line":595,"column":16},"end":{"line":597,"column":17}},"95":{"start":{"line":596,"column":20},"end":{"line":596,"column":37}},"96":{"start":{"line":599,"column":16},"end":{"line":601,"column":17}},"97":{"start":{"line":600,"column":20},"end":{"line":600,"column":37}},"98":{"start":{"line":604,"column":12},"end":{"line":606,"column":13}},"99":{"start":{"line":605,"column":16},"end":{"line":605,"column":33}},"100":{"start":{"line":608,"column":12},"end":{"line":632,"column":13}},"101":{"start":{"line":610,"column":16},"end":{"line":612,"column":17}},"102":{"start":{"line":611,"column":20},"end":{"line":611,"column":46}},"103":{"start":{"line":614,"column":16},"end":{"line":620,"column":17}},"104":{"start":{"line":615,"column":19},"end":{"line":615,"column":65}},"105":{"start":{"line":617,"column":19},"end":{"line":619,"column":20}},"106":{"start":{"line":618,"column":23},"end":{"line":618,"column":40}},"107":{"start":{"line":622,"column":16},"end":{"line":631,"column":17}},"108":{"start":{"line":623,"column":20},"end":{"line":623,"column":38}},"109":{"start":{"line":624,"column":20},"end":{"line":630,"column":21}},"110":{"start":{"line":625,"column":24},"end":{"line":625,"column":76}},"111":{"start":{"line":629,"column":24},"end":{"line":629,"column":80}},"112":{"start":{"line":634,"column":12},"end":{"line":634,"column":24}},"113":{"start":{"line":651,"column":12},"end":{"line":657,"column":20}},"114":{"start":{"line":659,"column":12},"end":{"line":662,"column":13}},"115":{"start":{"line":660,"column":16},"end":{"line":660,"column":39}},"116":{"start":{"line":661,"column":16},"end":{"line":661,"column":36}},"117":{"start":{"line":665,"column":12},"end":{"line":670,"column":13}},"118":{"start":{"line":666,"column":16},"end":{"line":666,"column":25}},"119":{"start":{"line":667,"column":16},"end":{"line":667,"column":46}},"120":{"start":{"line":668,"column":16},"end":{"line":668,"column":41}},"121":{"start":{"line":669,"column":16},"end":{"line":669,"column":49}},"122":{"start":{"line":673,"column":12},"end":{"line":675,"column":13}},"123":{"start":{"line":674,"column":16},"end":{"line":674,"column":40}},"124":{"start":{"line":677,"column":12},"end":{"line":677,"column":42}},"125":{"start":{"line":679,"column":12},"end":{"line":679,"column":45}},"126":{"start":{"line":681,"column":12},"end":{"line":683,"column":13}},"127":{"start":{"line":682,"column":16},"end":{"line":682,"column":38}},"128":{"start":{"line":685,"column":12},"end":{"line":685,"column":68}},"129":{"start":{"line":686,"column":12},"end":{"line":686,"column":55}},"130":{"start":{"line":688,"column":12},"end":{"line":688,"column":23}},"131":{"start":{"line":701,"column":12},"end":{"line":701,"column":46}},"132":{"start":{"line":702,"column":12},"end":{"line":702,"column":144}},"133":{"start":{"line":715,"column":12},"end":{"line":715,"column":46}},"134":{"start":{"line":716,"column":12},"end":{"line":720,"column":13}},"135":{"start":{"line":717,"column":16},"end":{"line":717,"column":41}},"136":{"start":{"line":719,"column":16},"end":{"line":719,"column":52}},"137":{"start":{"line":739,"column":12},"end":{"line":748,"column":22}},"138":{"start":{"line":750,"column":12},"end":{"line":763,"column":13}},"139":{"start":{"line":751,"column":16},"end":{"line":754,"column":17}},"140":{"start":{"line":753,"column":20},"end":{"line":753,"column":48}},"141":{"start":{"line":755,"column":16},"end":{"line":762,"column":17}},"142":{"start":{"line":756,"column":20},"end":{"line":756,"column":69}},"143":{"start":{"line":758,"column":20},"end":{"line":761,"column":21}},"144":{"start":{"line":759,"column":24},"end":{"line":759,"column":50}},"145":{"start":{"line":760,"column":24},"end":{"line":760,"column":37}},"146":{"start":{"line":765,"column":12},"end":{"line":800,"column":13}},"147":{"start":{"line":766,"column":16},"end":{"line":784,"column":17}},"148":{"start":{"line":767,"column":20},"end":{"line":770,"column":21}},"149":{"start":{"line":769,"column":24},"end":{"line":769,"column":46}},"150":{"start":{"line":771,"column":20},"end":{"line":783,"column":21}},"151":{"start":{"line":772,"column":24},"end":{"line":772,"column":71}},"152":{"start":{"line":774,"column":24},"end":{"line":782,"column":25}},"153":{"start":{"line":775,"column":28},"end":{"line":779,"column":29}},"154":{"start":{"line":776,"column":32},"end":{"line":776,"column":58}},"155":{"start":{"line":778,"column":32},"end":{"line":778,"column":49}},"156":{"start":{"line":780,"column":31},"end":{"line":782,"column":25}},"157":{"start":{"line":781,"column":28},"end":{"line":781,"column":44}},"158":{"start":{"line":786,"column":16},"end":{"line":796,"column":17}},"159":{"start":{"line":787,"column":20},"end":{"line":795,"column":21}},"160":{"start":{"line":788,"column":24},"end":{"line":788,"column":41}},"161":{"start":{"line":791,"column":24},"end":{"line":793,"column":25}},"162":{"start":{"line":792,"column":28},"end":{"line":792,"column":51}},"163":{"start":{"line":794,"column":24},"end":{"line":794,"column":60}},"164":{"start":{"line":799,"column":16},"end":{"line":799,"column":33}},"165":{"start":{"line":802,"column":12},"end":{"line":802,"column":28}},"166":{"start":{"line":815,"column":12},"end":{"line":815,"column":47}},"167":{"start":{"line":829,"column":12},"end":{"line":829,"column":21}},"168":{"start":{"line":830,"column":12},"end":{"line":834,"column":13}},"169":{"start":{"line":831,"column":16},"end":{"line":833,"column":17}},"170":{"start":{"line":832,"column":20},"end":{"line":832,"column":54}},"171":{"start":{"line":835,"column":12},"end":{"line":835,"column":24}},"172":{"start":{"line":847,"column":12},"end":{"line":847,"column":41}},"173":{"start":{"line":860,"column":12},"end":{"line":862,"column":48}},"174":{"start":{"line":865,"column":12},"end":{"line":867,"column":13}},"175":{"start":{"line":866,"column":16},"end":{"line":866,"column":49}},"176":{"start":{"line":869,"column":12},"end":{"line":876,"column":13}},"177":{"start":{"line":870,"column":16},"end":{"line":870,"column":32}},"178":{"start":{"line":872,"column":16},"end":{"line":875,"column":17}},"179":{"start":{"line":874,"column":20},"end":{"line":874,"column":47}},"180":{"start":{"line":878,"column":12},"end":{"line":878,"column":23}},"181":{"start":{"line":902,"column":12},"end":{"line":902,"column":28}},"182":{"start":{"line":903,"column":12},"end":{"line":908,"column":13}},"183":{"start":{"line":904,"column":16},"end":{"line":904,"column":35}},"184":{"start":{"line":905,"column":16},"end":{"line":905,"column":57}},"185":{"start":{"line":906,"column":16},"end":{"line":906,"column":56}},"186":{"start":{"line":907,"column":16},"end":{"line":907,"column":49}},"187":{"start":{"line":910,"column":12},"end":{"line":910,"column":24}},"188":{"start":{"line":931,"column":12},"end":{"line":934,"column":22}},"189":{"start":{"line":936,"column":12},"end":{"line":956,"column":13}},"190":{"start":{"line":937,"column":16},"end":{"line":955,"column":17}},"191":{"start":{"line":940,"column":20},"end":{"line":940,"column":41}},"192":{"start":{"line":941,"column":20},"end":{"line":941,"column":57}},"193":{"start":{"line":944,"column":20},"end":{"line":944,"column":77}},"194":{"start":{"line":946,"column":20},"end":{"line":948,"column":21}},"195":{"start":{"line":947,"column":24},"end":{"line":947,"column":46}},"196":{"start":{"line":950,"column":20},"end":{"line":952,"column":21}},"197":{"start":{"line":951,"column":24},"end":{"line":951,"column":49}},"198":{"start":{"line":954,"column":20},"end":{"line":954,"column":54}},"199":{"start":{"line":987,"column":12},"end":{"line":991,"column":21}},"200":{"start":{"line":993,"column":12},"end":{"line":1012,"column":13}},"201":{"start":{"line":994,"column":16},"end":{"line":1008,"column":17}},"202":{"start":{"line":995,"column":20},"end":{"line":1007,"column":21}},"203":{"start":{"line":996,"column":24},"end":{"line":1006,"column":25}},"204":{"start":{"line":997,"column":28},"end":{"line":997,"column":48}},"205":{"start":{"line":998,"column":28},"end":{"line":998,"column":48}},"206":{"start":{"line":999,"column":28},"end":{"line":999,"column":68}},"207":{"start":{"line":1000,"column":28},"end":{"line":1003,"column":30}},"208":{"start":{"line":1005,"column":28},"end":{"line":1005,"column":51}},"209":{"start":{"line":1009,"column":16},"end":{"line":1009,"column":56}},"210":{"start":{"line":1011,"column":16},"end":{"line":1011,"column":28}},"211":{"start":{"line":1031,"column":12},"end":{"line":1041,"column":24}},"212":{"start":{"line":1043,"column":12},"end":{"line":1050,"column":13}},"213":{"start":{"line":1045,"column":16},"end":{"line":1045,"column":43}},"214":{"start":{"line":1046,"column":16},"end":{"line":1049,"column":17}},"215":{"start":{"line":1047,"column":20},"end":{"line":1047,"column":39}},"216":{"start":{"line":1048,"column":20},"end":{"line":1048,"column":38}},"217":{"start":{"line":1052,"column":12},"end":{"line":1060,"column":13}},"218":{"start":{"line":1053,"column":16},"end":{"line":1055,"column":17}},"219":{"start":{"line":1054,"column":20},"end":{"line":1054,"column":40}},"220":{"start":{"line":1056,"column":16},"end":{"line":1059,"column":17}},"221":{"start":{"line":1057,"column":20},"end":{"line":1057,"column":52}},"222":{"start":{"line":1058,"column":20},"end":{"line":1058,"column":33}},"223":{"start":{"line":1062,"column":12},"end":{"line":1075,"column":13}},"224":{"start":{"line":1065,"column":16},"end":{"line":1065,"column":45}},"225":{"start":{"line":1067,"column":16},"end":{"line":1074,"column":17}},"226":{"start":{"line":1068,"column":20},"end":{"line":1068,"column":44}},"227":{"start":{"line":1069,"column":20},"end":{"line":1073,"column":21}},"228":{"start":{"line":1070,"column":24},"end":{"line":1070,"column":47}},"229":{"start":{"line":1071,"column":24},"end":{"line":1071,"column":50}},"230":{"start":{"line":1072,"column":24},"end":{"line":1072,"column":54}},"231":{"start":{"line":1077,"column":12},"end":{"line":1077,"column":23}},"232":{"start":{"line":1094,"column":12},"end":{"line":1094,"column":52}},"233":{"start":{"line":1096,"column":12},"end":{"line":1099,"column":87}},"234":{"start":{"line":1101,"column":12},"end":{"line":1103,"column":13}},"235":{"start":{"line":1102,"column":16},"end":{"line":1102,"column":81}},"236":{"start":{"line":1107,"column":4},"end":{"line":1107,"column":36}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":12}},{"start":{"line":35,"column":12},"end":{"line":35,"column":12}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":12}},{"start":{"line":53,"column":12},"end":{"line":53,"column":12}}]},"3":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":58,"column":16}},{"start":{"line":58,"column":16},"end":{"line":58,"column":16}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]},"5":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":12}},{"start":{"line":89,"column":12},"end":{"line":89,"column":12}}]},"6":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16}},{"start":{"line":92,"column":16},"end":{"line":92,"column":16}}]},"7":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":64},"end":{"line":97,"column":67}},{"start":{"line":97,"column":70},"end":{"line":97,"column":75}}]},"8":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"9":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":12},"end":{"line":135,"column":12}},{"start":{"line":135,"column":12},"end":{"line":135,"column":12}}]},"10":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":19},"end":{"line":137,"column":19}},{"start":{"line":137,"column":19},"end":{"line":137,"column":19}}]},"11":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":20},"end":{"line":141,"column":20}},{"start":{"line":141,"column":20},"end":{"line":141,"column":20}}]},"12":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":8},"end":{"line":274,"column":8}},{"start":{"line":274,"column":8},"end":{"line":274,"column":8}}]},"13":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":16},"end":{"line":277,"column":16}},{"start":{"line":277,"column":16},"end":{"line":277,"column":16}}]},"14":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":21},"end":{"line":411,"column":27}},{"start":{"line":411,"column":31},"end":{"line":411,"column":33}}]},"15":{"line":413,"type":"cond-expr","locations":[{"start":{"line":413,"column":42},"end":{"line":413,"column":58}},{"start":{"line":413,"column":61},"end":{"line":413,"column":65}}]},"16":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":12},"end":{"line":415,"column":12}},{"start":{"line":415,"column":12},"end":{"line":415,"column":12}}]},"17":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":16},"end":{"line":415,"column":20}},{"start":{"line":415,"column":24},"end":{"line":415,"column":45}}]},"18":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":16},"end":{"line":423,"column":16}},{"start":{"line":423,"column":16},"end":{"line":423,"column":16}}]},"19":{"line":423,"type":"binary-expr","locations":[{"start":{"line":423,"column":20},"end":{"line":423,"column":41}},{"start":{"line":423,"column":45},"end":{"line":423,"column":73}}]},"20":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":20},"end":{"line":429,"column":20}},{"start":{"line":429,"column":20},"end":{"line":429,"column":20}}]},"21":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":20},"end":{"line":440,"column":20}},{"start":{"line":440,"column":20},"end":{"line":440,"column":20}}]},"22":{"line":571,"type":"if","locations":[{"start":{"line":571,"column":12},"end":{"line":571,"column":12}},{"start":{"line":571,"column":12},"end":{"line":571,"column":12}}]},"23":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":12},"end":{"line":577,"column":12}},{"start":{"line":577,"column":12},"end":{"line":577,"column":12}}]},"24":{"line":581,"type":"binary-expr","locations":[{"start":{"line":581,"column":18},"end":{"line":581,"column":42}},{"start":{"line":581,"column":46},"end":{"line":581,"column":48}}]},"25":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":12},"end":{"line":585,"column":12}},{"start":{"line":585,"column":12},"end":{"line":585,"column":12}}]},"26":{"line":585,"type":"binary-expr","locations":[{"start":{"line":585,"column":16},"end":{"line":585,"column":26}},{"start":{"line":585,"column":30},"end":{"line":585,"column":48}},{"start":{"line":585,"column":52},"end":{"line":585,"column":69}}]},"27":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":12},"end":{"line":593,"column":12}},{"start":{"line":593,"column":12},"end":{"line":593,"column":12}}]},"28":{"line":593,"type":"binary-expr","locations":[{"start":{"line":593,"column":16},"end":{"line":593,"column":27}},{"start":{"line":593,"column":31},"end":{"line":593,"column":37}}]},"29":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":16},"end":{"line":595,"column":16}},{"start":{"line":595,"column":16},"end":{"line":595,"column":16}}]},"30":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":16},"end":{"line":599,"column":16}},{"start":{"line":599,"column":16},"end":{"line":599,"column":16}}]},"31":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":12},"end":{"line":604,"column":12}},{"start":{"line":604,"column":12},"end":{"line":604,"column":12}}]},"32":{"line":604,"type":"binary-expr","locations":[{"start":{"line":604,"column":16},"end":{"line":604,"column":29}},{"start":{"line":604,"column":33},"end":{"line":604,"column":39}},{"start":{"line":604,"column":43},"end":{"line":604,"column":66}}]},"33":{"line":608,"type":"if","locations":[{"start":{"line":608,"column":12},"end":{"line":608,"column":12}},{"start":{"line":608,"column":12},"end":{"line":608,"column":12}}]},"34":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":16},"end":{"line":610,"column":16}},{"start":{"line":610,"column":16},"end":{"line":610,"column":16}}]},"35":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":16},"end":{"line":614,"column":16}},{"start":{"line":614,"column":16},"end":{"line":614,"column":16}}]},"36":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":19},"end":{"line":617,"column":19}},{"start":{"line":617,"column":19},"end":{"line":617,"column":19}}]},"37":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":16},"end":{"line":622,"column":16}},{"start":{"line":622,"column":16},"end":{"line":622,"column":16}}]},"38":{"line":623,"type":"binary-expr","locations":[{"start":{"line":623,"column":27},"end":{"line":623,"column":31}},{"start":{"line":623,"column":35},"end":{"line":623,"column":37}}]},"39":{"line":624,"type":"if","locations":[{"start":{"line":624,"column":20},"end":{"line":624,"column":20}},{"start":{"line":624,"column":20},"end":{"line":624,"column":20}}]},"40":{"line":624,"type":"binary-expr","locations":[{"start":{"line":624,"column":24},"end":{"line":624,"column":45}},{"start":{"line":624,"column":49},"end":{"line":624,"column":61}}]},"41":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":12},"end":{"line":659,"column":12}},{"start":{"line":659,"column":12},"end":{"line":659,"column":12}}]},"42":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":12},"end":{"line":665,"column":12}},{"start":{"line":665,"column":12},"end":{"line":665,"column":12}}]},"43":{"line":665,"type":"binary-expr","locations":[{"start":{"line":665,"column":16},"end":{"line":665,"column":27}},{"start":{"line":665,"column":31},"end":{"line":665,"column":48}}]},"44":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":12},"end":{"line":673,"column":12}},{"start":{"line":673,"column":12},"end":{"line":673,"column":12}}]},"45":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":12},"end":{"line":681,"column":12}},{"start":{"line":681,"column":12},"end":{"line":681,"column":12}}]},"46":{"line":681,"type":"binary-expr","locations":[{"start":{"line":681,"column":16},"end":{"line":681,"column":22}},{"start":{"line":681,"column":26},"end":{"line":681,"column":38}}]},"47":{"line":685,"type":"cond-expr","locations":[{"start":{"line":685,"column":29},"end":{"line":685,"column":61}},{"start":{"line":685,"column":64},"end":{"line":685,"column":67}}]},"48":{"line":686,"type":"cond-expr","locations":[{"start":{"line":686,"column":27},"end":{"line":686,"column":48}},{"start":{"line":686,"column":51},"end":{"line":686,"column":54}}]},"49":{"line":702,"type":"cond-expr","locations":[{"start":{"line":702,"column":96},"end":{"line":702,"column":112}},{"start":{"line":702,"column":115},"end":{"line":702,"column":143}}]},"50":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":19},"end":{"line":702,"column":29}},{"start":{"line":702,"column":34},"end":{"line":702,"column":52}},{"start":{"line":702,"column":57},"end":{"line":702,"column":93}}]},"51":{"line":716,"type":"if","locations":[{"start":{"line":716,"column":12},"end":{"line":716,"column":12}},{"start":{"line":716,"column":12},"end":{"line":716,"column":12}}]},"52":{"line":716,"type":"binary-expr","locations":[{"start":{"line":716,"column":16},"end":{"line":716,"column":26}},{"start":{"line":716,"column":31},"end":{"line":716,"column":49}},{"start":{"line":716,"column":54},"end":{"line":716,"column":90}}]},"53":{"line":741,"type":"binary-expr","locations":[{"start":{"line":741,"column":22},"end":{"line":741,"column":56}},{"start":{"line":741,"column":60},"end":{"line":741,"column":62}}]},"54":{"line":746,"type":"binary-expr","locations":[{"start":{"line":746,"column":23},"end":{"line":746,"column":34}},{"start":{"line":746,"column":38},"end":{"line":746,"column":46}}]},"55":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":12},"end":{"line":750,"column":12}},{"start":{"line":750,"column":12},"end":{"line":750,"column":12}}]},"56":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":16},"end":{"line":751,"column":16}},{"start":{"line":751,"column":16},"end":{"line":751,"column":16}}]},"57":{"line":755,"type":"if","locations":[{"start":{"line":755,"column":16},"end":{"line":755,"column":16}},{"start":{"line":755,"column":16},"end":{"line":755,"column":16}}]},"58":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":20},"end":{"line":758,"column":20}},{"start":{"line":758,"column":20},"end":{"line":758,"column":20}}]},"59":{"line":758,"type":"binary-expr","locations":[{"start":{"line":758,"column":24},"end":{"line":758,"column":30}},{"start":{"line":758,"column":34},"end":{"line":758,"column":46}}]},"60":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":12},"end":{"line":765,"column":12}},{"start":{"line":765,"column":12},"end":{"line":765,"column":12}}]},"61":{"line":765,"type":"binary-expr","locations":[{"start":{"line":765,"column":16},"end":{"line":765,"column":26}},{"start":{"line":765,"column":30},"end":{"line":765,"column":35}}]},"62":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":16},"end":{"line":766,"column":16}},{"start":{"line":766,"column":16},"end":{"line":766,"column":16}}]},"63":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":20},"end":{"line":767,"column":20}},{"start":{"line":767,"column":20},"end":{"line":767,"column":20}}]},"64":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":20},"end":{"line":771,"column":20}},{"start":{"line":771,"column":20},"end":{"line":771,"column":20}}]},"65":{"line":774,"type":"if","locations":[{"start":{"line":774,"column":24},"end":{"line":774,"column":24}},{"start":{"line":774,"column":24},"end":{"line":774,"column":24}}]},"66":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":28},"end":{"line":775,"column":28}},{"start":{"line":775,"column":28},"end":{"line":775,"column":28}}]},"67":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":31},"end":{"line":780,"column":31}},{"start":{"line":780,"column":31},"end":{"line":780,"column":31}}]},"68":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":16},"end":{"line":786,"column":16}},{"start":{"line":786,"column":16},"end":{"line":786,"column":16}}]},"69":{"line":787,"type":"if","locations":[{"start":{"line":787,"column":20},"end":{"line":787,"column":20}},{"start":{"line":787,"column":20},"end":{"line":787,"column":20}}]},"70":{"line":787,"type":"binary-expr","locations":[{"start":{"line":787,"column":23},"end":{"line":787,"column":35}},{"start":{"line":787,"column":40},"end":{"line":787,"column":61}},{"start":{"line":787,"column":66},"end":{"line":787,"column":88}}]},"71":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":24},"end":{"line":791,"column":24}},{"start":{"line":791,"column":24},"end":{"line":791,"column":24}}]},"72":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":16},"end":{"line":831,"column":16}},{"start":{"line":831,"column":16},"end":{"line":831,"column":16}}]},"73":{"line":865,"type":"if","locations":[{"start":{"line":865,"column":12},"end":{"line":865,"column":12}},{"start":{"line":865,"column":12},"end":{"line":865,"column":12}}]},"74":{"line":865,"type":"binary-expr","locations":[{"start":{"line":865,"column":16},"end":{"line":865,"column":22}},{"start":{"line":865,"column":26},"end":{"line":865,"column":38}}]},"75":{"line":872,"type":"if","locations":[{"start":{"line":872,"column":16},"end":{"line":872,"column":16}},{"start":{"line":872,"column":16},"end":{"line":872,"column":16}}]},"76":{"line":872,"type":"binary-expr","locations":[{"start":{"line":872,"column":20},"end":{"line":872,"column":33}},{"start":{"line":872,"column":37},"end":{"line":872,"column":97}}]},"77":{"line":903,"type":"if","locations":[{"start":{"line":903,"column":12},"end":{"line":903,"column":12}},{"start":{"line":903,"column":12},"end":{"line":903,"column":12}}]},"78":{"line":937,"type":"if","locations":[{"start":{"line":937,"column":16},"end":{"line":937,"column":16}},{"start":{"line":937,"column":16},"end":{"line":937,"column":16}}]},"79":{"line":946,"type":"if","locations":[{"start":{"line":946,"column":20},"end":{"line":946,"column":20}},{"start":{"line":946,"column":20},"end":{"line":946,"column":20}}]},"80":{"line":950,"type":"if","locations":[{"start":{"line":950,"column":20},"end":{"line":950,"column":20}},{"start":{"line":950,"column":20},"end":{"line":950,"column":20}}]},"81":{"line":993,"type":"if","locations":[{"start":{"line":993,"column":12},"end":{"line":993,"column":12}},{"start":{"line":993,"column":12},"end":{"line":993,"column":12}}]},"82":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":20},"end":{"line":995,"column":20}},{"start":{"line":995,"column":20},"end":{"line":995,"column":20}}]},"83":{"line":996,"type":"if","locations":[{"start":{"line":996,"column":24},"end":{"line":996,"column":24}},{"start":{"line":996,"column":24},"end":{"line":996,"column":24}}]},"84":{"line":999,"type":"binary-expr","locations":[{"start":{"line":999,"column":48},"end":{"line":999,"column":61}},{"start":{"line":999,"column":65},"end":{"line":999,"column":67}}]},"85":{"line":1043,"type":"if","locations":[{"start":{"line":1043,"column":12},"end":{"line":1043,"column":12}},{"start":{"line":1043,"column":12},"end":{"line":1043,"column":12}}]},"86":{"line":1043,"type":"binary-expr","locations":[{"start":{"line":1043,"column":16},"end":{"line":1043,"column":29}},{"start":{"line":1043,"column":33},"end":{"line":1043,"column":43}}]},"87":{"line":1046,"type":"if","locations":[{"start":{"line":1046,"column":16},"end":{"line":1046,"column":16}},{"start":{"line":1046,"column":16},"end":{"line":1046,"column":16}}]},"88":{"line":1046,"type":"binary-expr","locations":[{"start":{"line":1046,"column":20},"end":{"line":1046,"column":26}},{"start":{"line":1046,"column":30},"end":{"line":1046,"column":57}}]},"89":{"line":1052,"type":"if","locations":[{"start":{"line":1052,"column":12},"end":{"line":1052,"column":12}},{"start":{"line":1052,"column":12},"end":{"line":1052,"column":12}}]},"90":{"line":1052,"type":"binary-expr","locations":[{"start":{"line":1052,"column":16},"end":{"line":1052,"column":21}},{"start":{"line":1052,"column":25},"end":{"line":1052,"column":36}}]},"91":{"line":1053,"type":"if","locations":[{"start":{"line":1053,"column":16},"end":{"line":1053,"column":16}},{"start":{"line":1053,"column":16},"end":{"line":1053,"column":16}}]},"92":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":16},"end":{"line":1056,"column":16}},{"start":{"line":1056,"column":16},"end":{"line":1056,"column":16}}]},"93":{"line":1062,"type":"if","locations":[{"start":{"line":1062,"column":12},"end":{"line":1062,"column":12}},{"start":{"line":1062,"column":12},"end":{"line":1062,"column":12}}]},"94":{"line":1062,"type":"binary-expr","locations":[{"start":{"line":1062,"column":16},"end":{"line":1062,"column":29}},{"start":{"line":1062,"column":33},"end":{"line":1062,"column":43}}]},"95":{"line":1067,"type":"if","locations":[{"start":{"line":1067,"column":16},"end":{"line":1067,"column":16}},{"start":{"line":1067,"column":16},"end":{"line":1067,"column":16}}]},"96":{"line":1067,"type":"binary-expr","locations":[{"start":{"line":1067,"column":20},"end":{"line":1067,"column":27}},{"start":{"line":1067,"column":31},"end":{"line":1067,"column":59}},{"start":{"line":1067,"column":64},"end":{"line":1067,"column":81}},{"start":{"line":1067,"column":87},"end":{"line":1067,"column":99}}]},"97":{"line":1094,"type":"binary-expr","locations":[{"start":{"line":1094,"column":20},"end":{"line":1094,"column":25}},{"start":{"line":1094,"column":29},"end":{"line":1094,"column":51}}]},"98":{"line":1098,"type":"binary-expr","locations":[{"start":{"line":1098,"column":28},"end":{"line":1098,"column":32}},{"start":{"line":1098,"column":36},"end":{"line":1098,"column":60}}]},"99":{"line":1099,"type":"binary-expr","locations":[{"start":{"line":1099,"column":32},"end":{"line":1099,"column":41}},{"start":{"line":1099,"column":45},"end":{"line":1099,"column":53}},{"start":{"line":1099,"column":57},"end":{"line":1099,"column":85}}]},"100":{"line":1101,"type":"if","locations":[{"start":{"line":1101,"column":12},"end":{"line":1101,"column":12}},{"start":{"line":1101,"column":12},"end":{"line":1101,"column":12}}]},"101":{"line":1101,"type":"binary-expr","locations":[{"start":{"line":1101,"column":16},"end":{"line":1101,"column":21}},{"start":{"line":1101,"column":25},"end":{"line":1101,"column":34}},{"start":{"line":1101,"column":38},"end":{"line":1101,"column":51}}]}},"code":["(function () { YUI.add('attribute-core', function (Y, NAME) {","","    /**","     * The State class maintains state for a collection of named items, with","     * a varying number of properties defined.","     *","     * It avoids the need to create a separate class for the item, and separate instances","     * of these classes for each item, by storing the state in a 2 level hash table,","     * improving performance when the number of items is likely to be large.","     *","     * @constructor","     * @class State","     */","    Y.State = function() {","        /**","         * Hash of attributes","         * @property data","         */","        this.data = {};","    };","","    Y.State.prototype = {","","        /**","         * Adds a property to an item.","         *","         * @method add","         * @param name {String} The name of the item.","         * @param key {String} The name of the property.","         * @param val {Any} The value of the property.","         */","        add: function(name, key, val) {","            var item = this.data[name];","","            if (!item) {","                item = this.data[name] = {};","            }","","            item[key] = val;","        },","","        /**","         * Adds multiple properties to an item.","         *","         * @method addAll","         * @param name {String} The name of the item.","         * @param obj {Object} A hash of property/value pairs.","         */","        addAll: function(name, obj) {","            var item = this.data[name],","                key;","","            if (!item) {","                item = this.data[name] = {};","            }","","            for (key in obj) {","                if (obj.hasOwnProperty(key)) {","                    item[key] = obj[key];","                }","            }","        },","","        /**","         * Removes a property from an item.","         *","         * @method remove","         * @param name {String} The name of the item.","         * @param key {String} The property to remove.","         */","        remove: function(name, key) {","            var item = this.data[name];","","            if (item) {","                delete item[key];","            }","        },","","        /**","         * Removes multiple properties from an item, or removes the item completely.","         *","         * @method removeAll","         * @param name {String} The name of the item.","         * @param obj {Object|Array} Collection of properties to delete. If not provided, the entire item is removed.","         */","        removeAll: function(name, obj) {","            var data;","","            if (!obj) {","                data = this.data;","","                if (name in data) {","                    delete data[name];","                }","            } else {","                Y.each(obj, function(value, key) {","                    this.remove(name, typeof key === 'string' ? key : value);","                }, this);","            }","        },","","        /**","         * For a given item, returns the value of the property requested, or undefined if not found.","         *","         * @method get","         * @param name {String} The name of the item","         * @param key {String} Optional. The property value to retrieve.","         * @return {Any} The value of the supplied property.","         */","        get: function(name, key) {","            var item = this.data[name];","","            if (item) {","                return item[key];","            }","        },","","        /**","         * For the given item, returns an object with all of the","         * item's property/value pairs. By default the object returned","         * is a shallow copy of the stored data, but passing in true","         * as the second parameter will return a reference to the stored","         * data.","         *","         * @method getAll","         * @param name {String} The name of the item","         * @param reference {boolean} true, if you want a reference to the stored","         * object","         * @return {Object} An object with property/value pairs for the item.","         */","        getAll : function(name, reference) {","            var item = this.data[name],","                key, obj;","","            if (reference) {","                obj = item;","            } else if (item) {","                obj = {};","","                for (key in item) {","                    if (item.hasOwnProperty(key)) {","                        obj[key] = item[key];","                    }","                }","            }","","            return obj;","        }","    };","    /**","     * The attribute module provides an augmentable Attribute implementation, which","     * adds configurable attributes and attribute change events to the class being","     * augmented. It also provides a State class, which is used internally by Attribute,","     * but can also be used independently to provide a name/property/value data structure to","     * store state.","     *","     * @module attribute","     */","","    /**","     * The attribute-core submodule provides the lightest level of attribute handling support","     * without Attribute change events, or lesser used methods such as reset(), modifyAttrs(),","     * and removeAttr().","     *","     * @module attribute","     * @submodule attribute-core","     */","    var O = Y.Object,","        Lang = Y.Lang,","","        DOT = \".\",","","        // Externally configurable props","        GETTER = \"getter\",","        SETTER = \"setter\",","        READ_ONLY = \"readOnly\",","        WRITE_ONCE = \"writeOnce\",","        INIT_ONLY = \"initOnly\",","        VALIDATOR = \"validator\",","        VALUE = \"value\",","        VALUE_FN = \"valueFn\",","        LAZY_ADD = \"lazyAdd\",","","        // Used for internal state management","        ADDED = \"added\",","        BYPASS_PROXY = \"_bypassProxy\",","        INITIALIZING = \"initializing\",","        INIT_VALUE = \"initValue\",","        LAZY = \"lazy\",","        IS_LAZY_ADD = \"isLazyAdd\",","","        INVALID_VALUE;","","    /**","     * <p>","     * AttributeCore provides the lightest level of configurable attribute support. It is designed to be","     * augmented on to a host class, and provides the host with the ability to configure","     * attributes to store and retrieve state, <strong>but without support for attribute change events</strong>.","     * </p>","     * <p>For example, attributes added to the host can be configured:</p>","     * <ul>","     *     <li>As read only.</li>","     *     <li>As write once.</li>","     *     <li>With a setter function, which can be used to manipulate","     *     values passed to Attribute's <a href=\"#method_set\">set</a> method, before they are stored.</li>","     *     <li>With a getter function, which can be used to manipulate stored values,","     *     before they are returned by Attribute's <a href=\"#method_get\">get</a> method.</li>","     *     <li>With a validator function, to validate values before they are stored.</li>","     * </ul>","     *","     * <p>See the <a href=\"#method_addAttr\">addAttr</a> method, for the complete set of configuration","     * options available for attributes.</p>","     *","     * <p>Object/Classes based on AttributeCore can augment <a href=\"AttributeObservable.html\">AttributeObservable</a>","     * (with true for overwrite) and <a href=\"AttributeExtras.html\">AttributeExtras</a> to add attribute event and","     * additional, less commonly used attribute methods, such as `modifyAttr`, `removeAttr` and `reset`.</p>","     *","     * @class AttributeCore","     * @param attrs {Object} The attributes to add during construction (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).","     *        These can also be defined on the constructor being augmented with Attribute by defining the ATTRS property on the constructor.","     * @param values {Object} The initial attribute values to apply (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).","     *        These are not merged/cloned. The caller is responsible for isolating user provided values if required.","     * @param lazy {boolean} Whether or not to add attributes lazily (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).","     */","    function AttributeCore(attrs, values, lazy) {","        // HACK: Fix #2531929","        // Complete hack, to make sure the first clone of a node value in IE doesn't doesn't hurt state - maintains 3.4.1 behavior.","        // Too late in the release cycle to do anything about the core problem.","        // The root issue is that cloning a Y.Node instance results in an object which barfs in IE, when you access it's properties (since 3.3.0).","        this._yuievt = null;","","        this._initAttrHost(attrs, values, lazy);","    }","","    /**","     * <p>The value to return from an attribute setter in order to prevent the set from going through.</p>","     *","     * <p>You can return this value from your setter if you wish to combine validator and setter","     * functionality into a single setter function, which either returns the massaged value to be stored or","     * AttributeCore.INVALID_VALUE to prevent invalid values from being stored.</p>","     *","     * @property INVALID_VALUE","     * @type Object","     * @static","     * @final","     */","    AttributeCore.INVALID_VALUE = {};","    INVALID_VALUE = AttributeCore.INVALID_VALUE;","","    /**","     * The list of properties which can be configured for","     * each attribute (e.g. setter, getter, writeOnce etc.).","     *","     * This property is used internally as a whitelist for faster","     * Y.mix operations.","     *","     * @property _ATTR_CFG","     * @type Array","     * @static","     * @protected","     */","    AttributeCore._ATTR_CFG = [SETTER, GETTER, VALIDATOR, VALUE, VALUE_FN, WRITE_ONCE, READ_ONLY, LAZY_ADD, BYPASS_PROXY];","","    /**","     * Utility method to protect an attribute configuration hash, by merging the","     * entire object and the individual attr config objects.","     *","     * @method protectAttrs","     * @static","     * @param {Object} attrs A hash of attribute to configuration object pairs.","     * @return {Object} A protected version of the `attrs` argument.","     */","    AttributeCore.protectAttrs = function (attrs) {","        if (attrs) {","            attrs = Y.merge(attrs);","            for (var attr in attrs) {","                if (attrs.hasOwnProperty(attr)) {","                    attrs[attr] = Y.merge(attrs[attr]);","                }","            }","        }","","        return attrs;","    };","","    AttributeCore.prototype = {","","        /**","         * Constructor logic for attributes. Initializes the host state, and sets up the inital attributes passed to the","         * constructor.","         *","         * @method _initAttrHost","         * @param attrs {Object} The attributes to add during construction (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).","         *        These can also be defined on the constructor being augmented with Attribute by defining the ATTRS property on the constructor.","         * @param values {Object} The initial attribute values to apply (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).","         *        These are not merged/cloned. The caller is responsible for isolating user provided values if required.","         * @param lazy {boolean} Whether or not to add attributes lazily (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).","         * @private","         */","        _initAttrHost : function(attrs, values, lazy) {","            this._state = new Y.State();","            this._initAttrs(attrs, values, lazy);","        },","","        /**","         * <p>","         * Adds an attribute with the provided configuration to the host object.","         * </p>","         * <p>","         * The config argument object supports the following properties:","         * </p>","         *","         * <dl>","         *    <dt>value &#60;Any&#62;</dt>","         *    <dd>The initial value to set on the attribute</dd>","         *","         *    <dt>valueFn &#60;Function | String&#62;</dt>","         *    <dd>","         *    <p>A function, which will return the initial value to set on the attribute. This is useful","         *    for cases where the attribute configuration is defined statically, but needs to","         *    reference the host instance (\"this\") to obtain an initial value. If both the value and valueFn properties are defined,","         *    the value returned by the valueFn has precedence over the value property, unless it returns undefined, in which","         *    case the value property is used.</p>","         *","         *    <p>valueFn can also be set to a string, representing the name of the instance method to be used to retrieve the value.</p>","         *    </dd>","         *","         *    <dt>readOnly &#60;boolean&#62;</dt>","         *    <dd>Whether or not the attribute is read only. Attributes having readOnly set to true","         *        cannot be modified by invoking the set method.</dd>","         *","         *    <dt>writeOnce &#60;boolean&#62; or &#60;string&#62;</dt>","         *    <dd>","         *        Whether or not the attribute is \"write once\". Attributes having writeOnce set to true,","         *        can only have their values set once, be it through the default configuration,","         *        constructor configuration arguments, or by invoking set.","         *        <p>The writeOnce attribute can also be set to the string \"initOnly\",","         *         in which case the attribute can only be set during initialization","         *        (when used with Base, this means it can only be set during construction)</p>","         *    </dd>","         *","         *    <dt>setter &#60;Function | String&#62;</dt>","         *    <dd>","         *    <p>The setter function used to massage or normalize the value passed to the set method for the attribute.","         *    The value returned by the setter will be the final stored value. Returning","         *    <a href=\"#property_Attribute.INVALID_VALUE\">Attribute.INVALID_VALUE</a>, from the setter will prevent","         *    the value from being stored.","         *    </p>","         *","         *    <p>setter can also be set to a string, representing the name of the instance method to be used as the setter function.</p>","         *    </dd>","         *","         *    <dt>getter &#60;Function | String&#62;</dt>","         *    <dd>","         *    <p>","         *    The getter function used to massage or normalize the value returned by the get method for the attribute.","         *    The value returned by the getter function is the value which will be returned to the user when they","         *    invoke get.","         *    </p>","         *","         *    <p>getter can also be set to a string, representing the name of the instance method to be used as the getter function.</p>","         *    </dd>","         *","         *    <dt>validator &#60;Function | String&#62;</dt>","         *    <dd>","         *    <p>","         *    The validator function invoked prior to setting the stored value. Returning","         *    false from the validator function will prevent the value from being stored.","         *    </p>","         *","         *    <p>validator can also be set to a string, representing the name of the instance method to be used as the validator function.</p>","         *    </dd>","         *","         *    <dt>lazyAdd &#60;boolean&#62;</dt>","         *    <dd>Whether or not to delay initialization of the attribute until the first call to get/set it.","         *    This flag can be used to over-ride lazy initialization on a per attribute basis, when adding multiple attributes through","         *    the <a href=\"#method_addAttrs\">addAttrs</a> method.</dd>","         *","         * </dl>","         *","         * <p>The setter, getter and validator are invoked with the value and name passed in as the first and second arguments, and with","         * the context (\"this\") set to the host object.</p>","         *","         * <p>Configuration properties outside of the list mentioned above are considered private properties used internally by attribute,","         * and are not intended for public use.</p>","         *","         * @method addAttr","         *","         * @param {String} name The name of the attribute.","         * @param {Object} config An object with attribute configuration property/value pairs, specifying the configuration for the attribute.","         *","         * <p>","         * <strong>NOTE:</strong> The configuration object is modified when adding an attribute, so if you need","         * to protect the original values, you will need to merge the object.","         * </p>","         *","         * @param {boolean} lazy (optional) Whether or not to add this attribute lazily (on the first call to get/set).","         *","         * @return {Object} A reference to the host object.","         *","         * @chainable","         */","        addAttr: function(name, config, lazy) {","","","            var host = this, // help compression","                state = host._state,","                value,","                hasValue;","","            config = config || {};","","            lazy = (LAZY_ADD in config) ? config[LAZY_ADD] : lazy;","","            if (lazy && !host.attrAdded(name)) {","                state.addAll(name, {","                    lazy : config,","                    added : true","                });","            } else {","                /*jshint maxlen:200*/","","                if (!host.attrAdded(name) || state.get(name, IS_LAZY_ADD)) {","","                    hasValue = (VALUE in config);","","                /*jshint maxlen:150*/","","                    if (hasValue) {","                        // We'll go through set, don't want to set value in config directly","                        value = config.value;","                        delete config.value;","                    }","","                    config.added = true;","                    config.initializing = true;","","                    state.addAll(name, config);","","                    if (hasValue) {","                        // Go through set, so that raw values get normalized/validated","                        host.set(name, value);","                    }","","                    state.remove(name, INITIALIZING);","                }","            }","","            return host;","        },","","        /**","         * Checks if the given attribute has been added to the host","         *","         * @method attrAdded","         * @param {String} name The name of the attribute to check.","         * @return {boolean} true if an attribute with the given name has been added, false if it hasn't.","         *         This method will return true for lazily added attributes.","         */","        attrAdded: function(name) {","            return !!this._state.get(name, ADDED);","        },","","        /**","         * Returns the current value of the attribute. If the attribute","         * has been configured with a 'getter' function, this method will delegate","         * to the 'getter' to obtain the value of the attribute.","         *","         * @method get","         *","         * @param {String} name The name of the attribute. If the value of the attribute is an Object,","         * dot notation can be used to obtain the value of a property of the object (e.g. <code>get(\"x.y.z\")</code>)","         *","         * @return {Any} The value of the attribute","         */","        get : function(name) {","            return this._getAttr(name);","        },","","        /**","         * Checks whether or not the attribute is one which has been","         * added lazily and still requires initialization.","         *","         * @method _isLazyAttr","         * @private","         * @param {String} name The name of the attribute","         * @return {boolean} true if it's a lazily added attribute, false otherwise.","         */","        _isLazyAttr: function(name) {","            return this._state.get(name, LAZY);","        },","","        /**","         * Finishes initializing an attribute which has been lazily added.","         *","         * @method _addLazyAttr","         * @private","         * @param {Object} name The name of the attribute","         */","        _addLazyAttr: function(name) {","            var state = this._state,","                lazyCfg = state.get(name, LAZY);","","            state.add(name, IS_LAZY_ADD, true);","            state.remove(name, LAZY);","            this.addAttr(name, lazyCfg);","        },","","        /**","         * Sets the value of an attribute.","         *","         * @method set","         * @chainable","         *","         * @param {String} name The name of the attribute. If the","         * current value of the attribute is an Object, dot notation can be used","         * to set the value of a property within the object (e.g. <code>set(\"x.y.z\", 5)</code>).","         * @param {Any} value The value to set the attribute to.","         * @param {Object} [opts] Optional data providing the circumstances for the change.","         * @return {Object} A reference to the host object.","         */","        set : function(name, val, opts) {","            return this._setAttr(name, val, opts);","        },","","        /**","         * Allows setting of readOnly/writeOnce attributes. See <a href=\"#method_set\">set</a> for argument details.","         *","         * @method _set","         * @protected","         * @chainable","         *","         * @param {String} name The name of the attribute.","         * @param {Any} val The value to set the attribute to.","         * @param {Object} [opts] Optional data providing the circumstances for the change.","         * @return {Object} A reference to the host object.","         */","        _set : function(name, val, opts) {","            return this._setAttr(name, val, opts, true);","        },","","        /**","         * Provides the common implementation for the public set and protected _set methods.","         *","         * See <a href=\"#method_set\">set</a> for argument details.","         *","         * @method _setAttr","         * @protected","         * @chainable","         *","         * @param {String} name The name of the attribute.","         * @param {Any} value The value to set the attribute to.","         * @param {Object} [opts] Optional data providing the circumstances for the change.","         * @param {boolean} force If true, allows the caller to set values for","         * readOnly or writeOnce attributes which have already been set.","         *","         * @return {Object} A reference to the host object.","         */","        _setAttr : function(name, val, opts, force)  {","            var allowSet = true,","                state = this._state,","                stateProxy = this._stateProxy,","                cfg,","                initialSet,","                strPath,","                path,","                currVal,","                writeOnce,","                initializing;","","            if (name.indexOf(DOT) !== -1) {","                strPath = name;","                path = name.split(DOT);","                name = path.shift();","            }","","            if (this._isLazyAttr(name)) {","                this._addLazyAttr(name);","            }","","            cfg = state.getAll(name, true) || {};","","            initialSet = (!(VALUE in cfg));","","            if (stateProxy && name in stateProxy && !cfg._bypassProxy) {","                // TODO: Value is always set for proxy. Can we do any better? Maybe take a snapshot as the initial value for the first call to set?","                initialSet = false;","            }","","            writeOnce = cfg.writeOnce;","            initializing = cfg.initializing;","","            if (!initialSet && !force) {","","                if (writeOnce) {","                    allowSet = false;","                }","","                if (cfg.readOnly) {","                    allowSet = false;","                }","            }","","            if (!initializing && !force && writeOnce === INIT_ONLY) {","                allowSet = false;","            }","","            if (allowSet) {","                // Don't need currVal if initialSet (might fail in custom getter if it always expects a non-undefined/non-null value)","                if (!initialSet) {","                    currVal =  this.get(name);","                }","","                if (path) {","                   val = O.setValue(Y.clone(currVal), path, val);","","                   if (val === undefined) {","                       allowSet = false;","                   }","                }","","                if (allowSet) {","                    opts = opts || {};","                    if (!this._fireAttrChange || initializing) {","                        this._setAttrVal(name, strPath, currVal, val, opts);","                    } else {","                        // HACK - no real reason core needs to know about _fireAttrChange, but","                        // it adds fn hops if we want to break it out. Not sure it's worth it for this critical path","                        this._fireAttrChange(name, strPath, currVal, val, opts);","                    }","                }","            }","","            return this;","        },","","        /**","         * Provides the common implementation for the public get method,","         * allowing Attribute hosts to over-ride either method.","         *","         * See <a href=\"#method_get\">get</a> for argument details.","         *","         * @method _getAttr","         * @protected","         * @chainable","         *","         * @param {String} name The name of the attribute.","         * @return {Any} The value of the attribute.","         */","        _getAttr : function(name) {","            var host = this, // help compression","                fullName = name,","                state = host._state,","                path,","                getter,","                val,","                cfg;","","            if (name.indexOf(DOT) !== -1) {","                path = name.split(DOT);","                name = path.shift();","            }","","            // On Demand - Should be rare - handles out of order valueFn references","            if (host._tCfgs && host._tCfgs[name]) {","                cfg = {};","                cfg[name] = host._tCfgs[name];","                delete host._tCfgs[name];","                host._addAttrs(cfg, host._tVals);","            }","","            // Lazy Init","            if (host._isLazyAttr(name)) {","                host._addLazyAttr(name);","            }","","            val = host._getStateVal(name);","","            getter = state.get(name, GETTER);","","            if (getter && !getter.call) {","                getter = this[getter];","            }","","            val = (getter) ? getter.call(host, val, fullName) : val;","            val = (path) ? O.getValue(val, path) : val;","","            return val;","        },","","        /**","         * Gets the stored value for the attribute, from either the","         * internal state object, or the state proxy if it exits","         *","         * @method _getStateVal","         * @private","         * @param {String} name The name of the attribute","         * @return {Any} The stored value of the attribute","         */","        _getStateVal : function(name) {","            var stateProxy = this._stateProxy;","            return stateProxy && (name in stateProxy) && !this._state.get(name, BYPASS_PROXY) ? stateProxy[name] : this._state.get(name, VALUE);","        },","","        /**","         * Sets the stored value for the attribute, in either the","         * internal state object, or the state proxy if it exits","         *","         * @method _setStateVal","         * @private","         * @param {String} name The name of the attribute","         * @param {Any} value The value of the attribute","         */","        _setStateVal : function(name, value) {","            var stateProxy = this._stateProxy;","            if (stateProxy && (name in stateProxy) && !this._state.get(name, BYPASS_PROXY)) {","                stateProxy[name] = value;","            } else {","                this._state.add(name, VALUE, value);","            }","        },","","        /**","         * Updates the stored value of the attribute in the privately held State object,","         * if validation and setter passes.","         *","         * @method _setAttrVal","         * @private","         * @param {String} attrName The attribute name.","         * @param {String} subAttrName The sub-attribute name, if setting a sub-attribute property (\"x.y.z\").","         * @param {Any} prevVal The currently stored value of the attribute.","         * @param {Any} newVal The value which is going to be stored.","         * @param {Object} [opts] Optional data providing the circumstances for the change.","         *","         * @return {booolean} true if the new attribute value was stored, false if not.","         */","        _setAttrVal : function(attrName, subAttrName, prevVal, newVal, opts) {","","            var host = this,","                allowSet = true,","                cfg = this._state.getAll(attrName, true) || {},","                validator = cfg.validator,","                setter = cfg.setter,","                initializing = cfg.initializing,","                prevRawVal = this._getStateVal(attrName),","                name = subAttrName || attrName,","                retVal,","                valid;","","            if (validator) {","                if (!validator.call) {","                    // Assume string - trying to keep critical path tight, so avoiding Lang check","                    validator = this[validator];","                }","                if (validator) {","                    valid = validator.call(host, newVal, name, opts);","","                    if (!valid && initializing) {","                        newVal = cfg.defaultValue;","                        valid = true; // Assume it's valid, for perf.","                    }","                }","            }","","            if (!validator || valid) {","                if (setter) {","                    if (!setter.call) {","                        // Assume string - trying to keep critical path tight, so avoiding Lang check","                        setter = this[setter];","                    }","                    if (setter) {","                        retVal = setter.call(host, newVal, name, opts);","","                        if (retVal === INVALID_VALUE) {","                            if (initializing) {","                                newVal = cfg.defaultValue;","                            } else {","                                allowSet = false;","                            }","                        } else if (retVal !== undefined){","                            newVal = retVal;","                        }","                    }","                }","","                if (allowSet) {","                    if(!subAttrName && (newVal === prevRawVal) && !Lang.isObject(newVal)) {","                        allowSet = false;","                    } else {","                        // Store value","                        if (!(INIT_VALUE in cfg)) {","                            cfg.initValue = newVal;","                        }","                        host._setStateVal(attrName, newVal);","                    }","                }","","            } else {","                allowSet = false;","            }","","            return allowSet;","        },","","        /**","         * Sets multiple attribute values.","         *","         * @method setAttrs","         * @param {Object} attrs  An object with attributes name/value pairs.","         * @param {Object} [opts] Optional data providing the circumstances for the change.","         * @return {Object} A reference to the host object.","         * @chainable","         */","        setAttrs : function(attrs, opts) {","            return this._setAttrs(attrs, opts);","        },","","        /**","         * Implementation behind the public setAttrs method, to set multiple attribute values.","         *","         * @method _setAttrs","         * @protected","         * @param {Object} attrs  An object with attributes name/value pairs.","         * @param {Object} [opts] Optional data providing the circumstances for the change","         * @return {Object} A reference to the host object.","         * @chainable","         */","        _setAttrs : function(attrs, opts) {","            var attr;","            for (attr in attrs) {","                if ( attrs.hasOwnProperty(attr) ) {","                    this.set(attr, attrs[attr], opts);","                }","            }","            return this;","        },","","        /**","         * Gets multiple attribute values.","         *","         * @method getAttrs","         * @param {Array | boolean} attrs Optional. An array of attribute names. If omitted, all attribute values are","         * returned. If set to true, all attributes modified from their initial values are returned.","         * @return {Object} An object with attribute name/value pairs.","         */","        getAttrs : function(attrs) {","            return this._getAttrs(attrs);","        },","","        /**","         * Implementation behind the public getAttrs method, to get multiple attribute values.","         *","         * @method _getAttrs","         * @protected","         * @param {Array | boolean} attrs Optional. An array of attribute names. If omitted, all attribute values are","         * returned. If set to true, all attributes modified from their initial values are returned.","         * @return {Object} An object with attribute name/value pairs.","         */","        _getAttrs : function(attrs) {","            var obj = {},","                attr, i, len,","                modifiedOnly = (attrs === true);","","            // TODO - figure out how to get all \"added\"","            if (!attrs || modifiedOnly) {","                attrs = O.keys(this._state.data);","            }","","            for (i = 0, len = attrs.length; i < len; i++) {","                attr = attrs[i];","","                if (!modifiedOnly || this._getStateVal(attr) != this._state.get(attr, INIT_VALUE)) {","                    // Go through get, to honor cloning/normalization","                    obj[attr] = this.get(attr);","                }","            }","","            return obj;","        },","","        /**","         * Configures a group of attributes, and sets initial values.","         *","         * <p>","         * <strong>NOTE:</strong> This method does not isolate the configuration object by merging/cloning.","         * The caller is responsible for merging/cloning the configuration object if required.","         * </p>","         *","         * @method addAttrs","         * @chainable","         *","         * @param {Object} cfgs An object with attribute name/configuration pairs.","         * @param {Object} values An object with attribute name/value pairs, defining the initial values to apply.","         * Values defined in the cfgs argument will be over-written by values in this argument unless defined as read only.","         * @param {boolean} lazy Whether or not to delay the intialization of these attributes until the first call to get/set.","         * Individual attributes can over-ride this behavior by defining a lazyAdd configuration property in their configuration.","         * See <a href=\"#method_addAttr\">addAttr</a>.","         *","         * @return {Object} A reference to the host object.","         */","        addAttrs : function(cfgs, values, lazy) {","            var host = this; // help compression","            if (cfgs) {","                host._tCfgs = cfgs;","                host._tVals = host._normAttrVals(values);","                host._addAttrs(cfgs, host._tVals, lazy);","                host._tCfgs = host._tVals = null;","            }","","            return host;","        },","","        /**","         * Implementation behind the public addAttrs method.","         *","         * This method is invoked directly by get if it encounters a scenario","         * in which an attribute's valueFn attempts to obtain the","         * value an attribute in the same group of attributes, which has not yet","         * been added (on demand initialization).","         *","         * @method _addAttrs","         * @private","         * @param {Object} cfgs An object with attribute name/configuration pairs.","         * @param {Object} values An object with attribute name/value pairs, defining the initial values to apply.","         * Values defined in the cfgs argument will be over-written by values in this argument unless defined as read only.","         * @param {boolean} lazy Whether or not to delay the intialization of these attributes until the first call to get/set.","         * Individual attributes can over-ride this behavior by defining a lazyAdd configuration property in their configuration.","         * See <a href=\"#method_addAttr\">addAttr</a>.","         */","        _addAttrs : function(cfgs, values, lazy) {","            var host = this, // help compression","                attr,","                attrCfg,","                value;","","            for (attr in cfgs) {","                if (cfgs.hasOwnProperty(attr)) {","","                    // Not Merging. Caller is responsible for isolating configs","                    attrCfg = cfgs[attr];","                    attrCfg.defaultValue = attrCfg.value;","","                    // Handle simple, complex and user values, accounting for read-only","                    value = host._getAttrInitVal(attr, attrCfg, host._tVals);","","                    if (value !== undefined) {","                        attrCfg.value = value;","                    }","","                    if (host._tCfgs[attr]) {","                        delete host._tCfgs[attr];","                    }","","                    host.addAttr(attr, attrCfg, lazy);","                }","            }","        },","","        /**","         * Utility method to protect an attribute configuration","         * hash, by merging the entire object and the individual","         * attr config objects.","         *","         * @method _protectAttrs","         * @protected","         * @param {Object} attrs A hash of attribute to configuration object pairs.","         * @return {Object} A protected version of the attrs argument.","         * @deprecated Use `AttributeCore.protectAttrs()` or","         *   `Attribute.protectAttrs()` which are the same static utility method.","         */","        _protectAttrs : AttributeCore.protectAttrs,","","        /**","         * Utility method to normalize attribute values. The base implementation","         * simply merges the hash to protect the original.","         *","         * @method _normAttrVals","         * @param {Object} valueHash An object with attribute name/value pairs","         *","         * @return {Object} An object literal with 2 properties - \"simple\" and \"complex\",","         * containing simple and complex attribute values respectively keyed","         * by the top level attribute name, or null, if valueHash is falsey.","         *","         * @private","         */","        _normAttrVals : function(valueHash) {","            var vals = {},","                subvals = {},","                path,","                attr,","                v, k;","","            if (valueHash) {","                for (k in valueHash) {","                    if (valueHash.hasOwnProperty(k)) {","                        if (k.indexOf(DOT) !== -1) {","                            path = k.split(DOT);","                            attr = path.shift();","                            v = subvals[attr] = subvals[attr] || [];","                            v[v.length] = {","                                path : path,","                                value: valueHash[k]","                            };","                        } else {","                            vals[k] = valueHash[k];","                        }","                    }","                }","                return { simple:vals, complex:subvals };","            } else {","                return null;","            }","        },","","        /**","         * Returns the initial value of the given attribute from","         * either the default configuration provided, or the","         * over-ridden value if it exists in the set of initValues","         * provided and the attribute is not read-only.","         *","         * @param {String} attr The name of the attribute","         * @param {Object} cfg The attribute configuration object","         * @param {Object} initValues The object with simple and complex attribute name/value pairs returned from _normAttrVals","         *","         * @return {Any} The initial value of the attribute.","         *","         * @method _getAttrInitVal","         * @private","         */","        _getAttrInitVal : function(attr, cfg, initValues) {","            var val = cfg.value,","                valFn = cfg.valueFn,","                tmpVal,","                initValSet = false,","                simple,","                complex,","                i,","                l,","                path,","                subval,","                subvals;","","            if (!cfg.readOnly && initValues) {","                // Simple Attributes","                simple = initValues.simple;","                if (simple && simple.hasOwnProperty(attr)) {","                    val = simple[attr];","                    initValSet = true;","                }","            }","","            if (valFn && !initValSet) {","                if (!valFn.call) {","                    valFn = this[valFn];","                }","                if (valFn) {","                    tmpVal = valFn.call(this, attr);","                    val = tmpVal;","                }","            }","","            if (!cfg.readOnly && initValues) {","","                // Complex Attributes (complex values applied, after simple, in case both are set)","                complex = initValues.complex;","","                if (complex && complex.hasOwnProperty(attr) && (val !== undefined) && (val !== null)) {","                    subvals = complex[attr];","                    for (i = 0, l = subvals.length; i < l; ++i) {","                        path = subvals[i].path;","                        subval = subvals[i].value;","                        O.setValue(val, path, subval);","                    }","                }","            }","","            return val;","        },","","        /**","         * Utility method to set up initial attributes defined during construction,","         * either through the constructor.ATTRS property, or explicitly passed in.","         *","         * @method _initAttrs","         * @protected","         * @param attrs {Object} The attributes to add during construction (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).","         *        These can also be defined on the constructor being augmented with Attribute by defining the ATTRS property on the constructor.","         * @param values {Object} The initial attribute values to apply (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).","         *        These are not merged/cloned. The caller is responsible for isolating user provided values if required.","         * @param lazy {boolean} Whether or not to add attributes lazily (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).","         */","        _initAttrs : function(attrs, values, lazy) {","            // ATTRS support for Node, which is not Base based","            attrs = attrs || this.constructor.ATTRS;","","            var Base = Y.Base,","                BaseCore = Y.BaseCore,","                baseInst = (Base && Y.instanceOf(this, Base)),","                baseCoreInst = (!baseInst && BaseCore && Y.instanceOf(this, BaseCore));","","            if (attrs && !baseInst && !baseCoreInst) {","                this.addAttrs(Y.AttributeCore.protectAttrs(attrs), values, lazy);","            }","        }","    };","","    Y.AttributeCore = AttributeCore;","","","}, '@VERSION@', {\"requires\": [\"oop\"]});","","}());"]};
}
var __cov_jW$Ub3ixQRFlmKpbe0igYQ = __coverage__['build/attribute-core/attribute-core.js'];
__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['1']++;YUI.add('attribute-core',function(Y,NAME){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['1']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['2']++;Y.State=function(){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['2']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['3']++;this.data={};};__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['4']++;Y.State.prototype={add:function(name,key,val){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['3']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['5']++;var item=this.data[name];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['6']++;if(!item){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['1'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['7']++;item=this.data[name]={};}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['1'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['8']++;item[key]=val;},addAll:function(name,obj){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['4']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['9']++;var item=this.data[name],key;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['10']++;if(!item){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['2'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['11']++;item=this.data[name]={};}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['2'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['12']++;for(key in obj){__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['13']++;if(obj.hasOwnProperty(key)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['3'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['14']++;item[key]=obj[key];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['3'][1]++;}}},remove:function(name,key){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['5']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['15']++;var item=this.data[name];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['16']++;if(item){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['4'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['17']++;delete item[key];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['4'][1]++;}},removeAll:function(name,obj){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['6']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['18']++;var data;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['19']++;if(!obj){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['5'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['20']++;data=this.data;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['21']++;if(name in data){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['6'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['22']++;delete data[name];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['6'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['5'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['23']++;Y.each(obj,function(value,key){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['7']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['24']++;this.remove(name,typeof key==='string'?(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['7'][0]++,key):(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['7'][1]++,value));},this);}},get:function(name,key){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['8']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['25']++;var item=this.data[name];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['26']++;if(item){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['8'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['27']++;return item[key];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['8'][1]++;}},getAll:function(name,reference){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['9']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['28']++;var item=this.data[name],key,obj;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['29']++;if(reference){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['9'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['30']++;obj=item;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['9'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['31']++;if(item){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['10'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['32']++;obj={};__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['33']++;for(key in item){__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['34']++;if(item.hasOwnProperty(key)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['11'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['35']++;obj[key]=item[key];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['11'][1]++;}}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['10'][1]++;}}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['36']++;return obj;}};__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['37']++;var O=Y.Object,Lang=Y.Lang,DOT='.',GETTER='getter',SETTER='setter',READ_ONLY='readOnly',WRITE_ONCE='writeOnce',INIT_ONLY='initOnly',VALIDATOR='validator',VALUE='value',VALUE_FN='valueFn',LAZY_ADD='lazyAdd',ADDED='added',BYPASS_PROXY='_bypassProxy',INITIALIZING='initializing',INIT_VALUE='initValue',LAZY='lazy',IS_LAZY_ADD='isLazyAdd',INVALID_VALUE;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['38']++;function AttributeCore(attrs,values,lazy){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['10']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['39']++;this._yuievt=null;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['40']++;this._initAttrHost(attrs,values,lazy);}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['41']++;AttributeCore.INVALID_VALUE={};__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['42']++;INVALID_VALUE=AttributeCore.INVALID_VALUE;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['43']++;AttributeCore._ATTR_CFG=[SETTER,GETTER,VALIDATOR,VALUE,VALUE_FN,WRITE_ONCE,READ_ONLY,LAZY_ADD,BYPASS_PROXY];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['44']++;AttributeCore.protectAttrs=function(attrs){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['11']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['45']++;if(attrs){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['12'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['46']++;attrs=Y.merge(attrs);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['47']++;for(var attr in attrs){__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['48']++;if(attrs.hasOwnProperty(attr)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['13'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['49']++;attrs[attr]=Y.merge(attrs[attr]);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['13'][1]++;}}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['12'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['50']++;return attrs;};__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['51']++;AttributeCore.prototype={_initAttrHost:function(attrs,values,lazy){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['12']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['52']++;this._state=new Y.State();__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['53']++;this._initAttrs(attrs,values,lazy);},addAttr:function(name,config,lazy){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['13']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['54']++;var host=this,state=host._state,value,hasValue;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['55']++;config=(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['14'][0]++,config)||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['14'][1]++,{});__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['56']++;lazy=LAZY_ADD in config?(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['15'][0]++,config[LAZY_ADD]):(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['15'][1]++,lazy);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['57']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['17'][0]++,lazy)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['17'][1]++,!host.attrAdded(name))){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['16'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['58']++;state.addAll(name,{lazy:config,added:true});}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['16'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['59']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['19'][0]++,!host.attrAdded(name))||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['19'][1]++,state.get(name,IS_LAZY_ADD))){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['18'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['60']++;hasValue=VALUE in config;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['61']++;if(hasValue){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['20'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['62']++;value=config.value;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['63']++;delete config.value;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['20'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['64']++;config.added=true;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['65']++;config.initializing=true;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['66']++;state.addAll(name,config);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['67']++;if(hasValue){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['21'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['68']++;host.set(name,value);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['21'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['69']++;state.remove(name,INITIALIZING);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['18'][1]++;}}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['70']++;return host;},attrAdded:function(name){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['14']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['71']++;return!!this._state.get(name,ADDED);},get:function(name){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['15']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['72']++;return this._getAttr(name);},_isLazyAttr:function(name){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['16']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['73']++;return this._state.get(name,LAZY);},_addLazyAttr:function(name){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['17']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['74']++;var state=this._state,lazyCfg=state.get(name,LAZY);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['75']++;state.add(name,IS_LAZY_ADD,true);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['76']++;state.remove(name,LAZY);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['77']++;this.addAttr(name,lazyCfg);},set:function(name,val,opts){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['18']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['78']++;return this._setAttr(name,val,opts);},_set:function(name,val,opts){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['19']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['79']++;return this._setAttr(name,val,opts,true);},_setAttr:function(name,val,opts,force){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['20']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['80']++;var allowSet=true,state=this._state,stateProxy=this._stateProxy,cfg,initialSet,strPath,path,currVal,writeOnce,initializing;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['81']++;if(name.indexOf(DOT)!==-1){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['22'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['82']++;strPath=name;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['83']++;path=name.split(DOT);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['84']++;name=path.shift();}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['22'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['85']++;if(this._isLazyAttr(name)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['23'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['86']++;this._addLazyAttr(name);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['23'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['87']++;cfg=(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['24'][0]++,state.getAll(name,true))||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['24'][1]++,{});__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['88']++;initialSet=!(VALUE in cfg);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['89']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['26'][0]++,stateProxy)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['26'][1]++,name in stateProxy)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['26'][2]++,!cfg._bypassProxy)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['25'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['90']++;initialSet=false;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['25'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['91']++;writeOnce=cfg.writeOnce;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['92']++;initializing=cfg.initializing;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['93']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['28'][0]++,!initialSet)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['28'][1]++,!force)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['27'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['94']++;if(writeOnce){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['29'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['95']++;allowSet=false;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['29'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['96']++;if(cfg.readOnly){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['30'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['97']++;allowSet=false;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['30'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['27'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['98']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['32'][0]++,!initializing)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['32'][1]++,!force)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['32'][2]++,writeOnce===INIT_ONLY)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['31'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['99']++;allowSet=false;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['31'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['100']++;if(allowSet){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['33'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['101']++;if(!initialSet){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['34'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['102']++;currVal=this.get(name);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['34'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['103']++;if(path){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['35'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['104']++;val=O.setValue(Y.clone(currVal),path,val);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['105']++;if(val===undefined){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['36'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['106']++;allowSet=false;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['36'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['35'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['107']++;if(allowSet){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['37'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['108']++;opts=(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['38'][0]++,opts)||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['38'][1]++,{});__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['109']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['40'][0]++,!this._fireAttrChange)||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['40'][1]++,initializing)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['39'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['110']++;this._setAttrVal(name,strPath,currVal,val,opts);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['39'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['111']++;this._fireAttrChange(name,strPath,currVal,val,opts);}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['37'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['33'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['112']++;return this;},_getAttr:function(name){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['21']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['113']++;var host=this,fullName=name,state=host._state,path,getter,val,cfg;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['114']++;if(name.indexOf(DOT)!==-1){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['41'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['115']++;path=name.split(DOT);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['116']++;name=path.shift();}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['41'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['117']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['43'][0]++,host._tCfgs)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['43'][1]++,host._tCfgs[name])){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['42'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['118']++;cfg={};__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['119']++;cfg[name]=host._tCfgs[name];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['120']++;delete host._tCfgs[name];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['121']++;host._addAttrs(cfg,host._tVals);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['42'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['122']++;if(host._isLazyAttr(name)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['44'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['123']++;host._addLazyAttr(name);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['44'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['124']++;val=host._getStateVal(name);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['125']++;getter=state.get(name,GETTER);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['126']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['46'][0]++,getter)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['46'][1]++,!getter.call)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['45'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['127']++;getter=this[getter];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['45'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['128']++;val=getter?(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['47'][0]++,getter.call(host,val,fullName)):(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['47'][1]++,val);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['129']++;val=path?(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['48'][0]++,O.getValue(val,path)):(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['48'][1]++,val);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['130']++;return val;},_getStateVal:function(name){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['22']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['131']++;var stateProxy=this._stateProxy;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['132']++;return(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['50'][0]++,stateProxy)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['50'][1]++,name in stateProxy)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['50'][2]++,!this._state.get(name,BYPASS_PROXY))?(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['49'][0]++,stateProxy[name]):(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['49'][1]++,this._state.get(name,VALUE));},_setStateVal:function(name,value){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['23']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['133']++;var stateProxy=this._stateProxy;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['134']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['52'][0]++,stateProxy)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['52'][1]++,name in stateProxy)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['52'][2]++,!this._state.get(name,BYPASS_PROXY))){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['51'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['135']++;stateProxy[name]=value;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['51'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['136']++;this._state.add(name,VALUE,value);}},_setAttrVal:function(attrName,subAttrName,prevVal,newVal,opts){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['24']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['137']++;var host=this,allowSet=true,cfg=(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['53'][0]++,this._state.getAll(attrName,true))||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['53'][1]++,{}),validator=cfg.validator,setter=cfg.setter,initializing=cfg.initializing,prevRawVal=this._getStateVal(attrName),name=(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['54'][0]++,subAttrName)||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['54'][1]++,attrName),retVal,valid;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['138']++;if(validator){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['55'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['139']++;if(!validator.call){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['56'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['140']++;validator=this[validator];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['56'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['141']++;if(validator){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['57'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['142']++;valid=validator.call(host,newVal,name,opts);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['143']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['59'][0]++,!valid)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['59'][1]++,initializing)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['58'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['144']++;newVal=cfg.defaultValue;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['145']++;valid=true;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['58'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['57'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['55'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['146']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['61'][0]++,!validator)||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['61'][1]++,valid)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['60'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['147']++;if(setter){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['62'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['148']++;if(!setter.call){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['63'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['149']++;setter=this[setter];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['63'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['150']++;if(setter){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['64'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['151']++;retVal=setter.call(host,newVal,name,opts);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['152']++;if(retVal===INVALID_VALUE){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['65'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['153']++;if(initializing){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['66'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['154']++;newVal=cfg.defaultValue;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['66'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['155']++;allowSet=false;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['65'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['156']++;if(retVal!==undefined){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['67'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['157']++;newVal=retVal;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['67'][1]++;}}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['64'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['62'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['158']++;if(allowSet){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['68'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['159']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['70'][0]++,!subAttrName)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['70'][1]++,newVal===prevRawVal)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['70'][2]++,!Lang.isObject(newVal))){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['69'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['160']++;allowSet=false;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['69'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['161']++;if(!(INIT_VALUE in cfg)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['71'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['162']++;cfg.initValue=newVal;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['71'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['163']++;host._setStateVal(attrName,newVal);}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['68'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['60'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['164']++;allowSet=false;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['165']++;return allowSet;},setAttrs:function(attrs,opts){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['25']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['166']++;return this._setAttrs(attrs,opts);},_setAttrs:function(attrs,opts){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['26']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['167']++;var attr;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['168']++;for(attr in attrs){__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['169']++;if(attrs.hasOwnProperty(attr)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['72'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['170']++;this.set(attr,attrs[attr],opts);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['72'][1]++;}}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['171']++;return this;},getAttrs:function(attrs){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['27']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['172']++;return this._getAttrs(attrs);},_getAttrs:function(attrs){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['28']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['173']++;var obj={},attr,i,len,modifiedOnly=attrs===true;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['174']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['74'][0]++,!attrs)||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['74'][1]++,modifiedOnly)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['73'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['175']++;attrs=O.keys(this._state.data);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['73'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['176']++;for(i=0,len=attrs.length;i<len;i++){__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['177']++;attr=attrs[i];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['178']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['76'][0]++,!modifiedOnly)||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['76'][1]++,this._getStateVal(attr)!=this._state.get(attr,INIT_VALUE))){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['75'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['179']++;obj[attr]=this.get(attr);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['75'][1]++;}}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['180']++;return obj;},addAttrs:function(cfgs,values,lazy){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['29']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['181']++;var host=this;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['182']++;if(cfgs){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['77'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['183']++;host._tCfgs=cfgs;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['184']++;host._tVals=host._normAttrVals(values);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['185']++;host._addAttrs(cfgs,host._tVals,lazy);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['186']++;host._tCfgs=host._tVals=null;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['77'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['187']++;return host;},_addAttrs:function(cfgs,values,lazy){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['30']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['188']++;var host=this,attr,attrCfg,value;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['189']++;for(attr in cfgs){__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['190']++;if(cfgs.hasOwnProperty(attr)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['78'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['191']++;attrCfg=cfgs[attr];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['192']++;attrCfg.defaultValue=attrCfg.value;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['193']++;value=host._getAttrInitVal(attr,attrCfg,host._tVals);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['194']++;if(value!==undefined){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['79'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['195']++;attrCfg.value=value;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['79'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['196']++;if(host._tCfgs[attr]){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['80'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['197']++;delete host._tCfgs[attr];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['80'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['198']++;host.addAttr(attr,attrCfg,lazy);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['78'][1]++;}}},_protectAttrs:AttributeCore.protectAttrs,_normAttrVals:function(valueHash){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['31']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['199']++;var vals={},subvals={},path,attr,v,k;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['200']++;if(valueHash){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['81'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['201']++;for(k in valueHash){__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['202']++;if(valueHash.hasOwnProperty(k)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['82'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['203']++;if(k.indexOf(DOT)!==-1){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['83'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['204']++;path=k.split(DOT);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['205']++;attr=path.shift();__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['206']++;v=subvals[attr]=(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['84'][0]++,subvals[attr])||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['84'][1]++,[]);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['207']++;v[v.length]={path:path,value:valueHash[k]};}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['83'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['208']++;vals[k]=valueHash[k];}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['82'][1]++;}}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['209']++;return{simple:vals,complex:subvals};}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['81'][1]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['210']++;return null;}},_getAttrInitVal:function(attr,cfg,initValues){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['32']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['211']++;var val=cfg.value,valFn=cfg.valueFn,tmpVal,initValSet=false,simple,complex,i,l,path,subval,subvals;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['212']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['86'][0]++,!cfg.readOnly)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['86'][1]++,initValues)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['85'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['213']++;simple=initValues.simple;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['214']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['88'][0]++,simple)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['88'][1]++,simple.hasOwnProperty(attr))){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['87'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['215']++;val=simple[attr];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['216']++;initValSet=true;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['87'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['85'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['217']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['90'][0]++,valFn)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['90'][1]++,!initValSet)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['89'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['218']++;if(!valFn.call){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['91'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['219']++;valFn=this[valFn];}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['91'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['220']++;if(valFn){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['92'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['221']++;tmpVal=valFn.call(this,attr);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['222']++;val=tmpVal;}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['92'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['89'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['223']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['94'][0]++,!cfg.readOnly)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['94'][1]++,initValues)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['93'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['224']++;complex=initValues.complex;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['225']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['96'][0]++,complex)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['96'][1]++,complex.hasOwnProperty(attr))&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['96'][2]++,val!==undefined)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['96'][3]++,val!==null)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['95'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['226']++;subvals=complex[attr];__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['227']++;for(i=0,l=subvals.length;i<l;++i){__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['228']++;path=subvals[i].path;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['229']++;subval=subvals[i].value;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['230']++;O.setValue(val,path,subval);}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['95'][1]++;}}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['93'][1]++;}__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['231']++;return val;},_initAttrs:function(attrs,values,lazy){__cov_jW$Ub3ixQRFlmKpbe0igYQ.f['33']++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['232']++;attrs=(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['97'][0]++,attrs)||(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['97'][1]++,this.constructor.ATTRS);__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['233']++;var Base=Y.Base,BaseCore=Y.BaseCore,baseInst=(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['98'][0]++,Base)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['98'][1]++,Y.instanceOf(this,Base)),baseCoreInst=(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['99'][0]++,!baseInst)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['99'][1]++,BaseCore)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['99'][2]++,Y.instanceOf(this,BaseCore));__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['234']++;if((__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['101'][0]++,attrs)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['101'][1]++,!baseInst)&&(__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['101'][2]++,!baseCoreInst)){__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['100'][0]++;__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['235']++;this.addAttrs(Y.AttributeCore.protectAttrs(attrs),values,lazy);}else{__cov_jW$Ub3ixQRFlmKpbe0igYQ.b['100'][1]++;}}};__cov_jW$Ub3ixQRFlmKpbe0igYQ.s['236']++;Y.AttributeCore=AttributeCore;},'@VERSION@',{'requires':['oop']});

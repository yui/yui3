if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/series-line-util/series-line-util.js']) {
   __coverage__['build/series-line-util/series-line-util.js'] = {"path":"build/series-line-util/series-line-util.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":28},"end":{"line":1,"column":47}}},"2":{"name":"Lines","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":16}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":35,"column":4}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":20},"end":{"line":53,"column":4}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":15},"end":{"line":67,"column":4}}},"6":{"name":"(anonymous_6)","line":170,"loc":{"start":{"line":170,"column":16},"end":{"line":171,"column":4}}},"7":{"name":"(anonymous_7)","line":222,"loc":{"start":{"line":222,"column":20},"end":{"line":223,"column":4}}},"8":{"name":"(anonymous_8)","line":268,"loc":{"start":{"line":268,"column":22},"end":{"line":269,"column":4}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":287,"column":16}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":20}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":18}},"4":{"start":{"line":19,"column":0},"end":{"line":282,"column":2}},"5":{"start":{"line":36,"column":8},"end":{"line":36,"column":78}},"6":{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},"7":{"start":{"line":39,"column":12},"end":{"line":39,"column":65}},"8":{"start":{"line":41,"column":8},"end":{"line":41,"column":34}},"9":{"start":{"line":42,"column":8},"end":{"line":42,"column":33}},"10":{"start":{"line":54,"column":8},"end":{"line":57,"column":9}},"11":{"start":{"line":56,"column":12},"end":{"line":56,"column":54}},"12":{"start":{"line":68,"column":8},"end":{"line":71,"column":9}},"13":{"start":{"line":70,"column":12},"end":{"line":70,"column":19}},"14":{"start":{"line":72,"column":8},"end":{"line":95,"column":38}},"15":{"start":{"line":96,"column":8},"end":{"line":105,"column":9}},"16":{"start":{"line":98,"column":12},"end":{"line":98,"column":49}},"17":{"start":{"line":99,"column":12},"end":{"line":99,"column":49}},"18":{"start":{"line":103,"column":12},"end":{"line":103,"column":42}},"19":{"start":{"line":104,"column":12},"end":{"line":104,"column":42}},"20":{"start":{"line":106,"column":8},"end":{"line":106,"column":73}},"21":{"start":{"line":107,"column":8},"end":{"line":111,"column":11}},"22":{"start":{"line":112,"column":8},"end":{"line":160,"column":9}},"23":{"start":{"line":114,"column":12},"end":{"line":114,"column":31}},"24":{"start":{"line":115,"column":12},"end":{"line":115,"column":31}},"25":{"start":{"line":116,"column":12},"end":{"line":116,"column":60}},"26":{"start":{"line":117,"column":12},"end":{"line":121,"column":13}},"27":{"start":{"line":119,"column":16},"end":{"line":119,"column":44}},"28":{"start":{"line":120,"column":16},"end":{"line":120,"column":25}},"29":{"start":{"line":122,"column":12},"end":{"line":156,"column":13}},"30":{"start":{"line":124,"column":16},"end":{"line":124,"column":41}},"31":{"start":{"line":125,"column":16},"end":{"line":125,"column":42}},"32":{"start":{"line":127,"column":17},"end":{"line":156,"column":13}},"33":{"start":{"line":129,"column":16},"end":{"line":138,"column":17}},"34":{"start":{"line":131,"column":20},"end":{"line":131,"column":46}},"35":{"start":{"line":135,"column":20},"end":{"line":137,"column":58}},"36":{"start":{"line":140,"column":17},"end":{"line":156,"column":13}},"37":{"start":{"line":142,"column":16},"end":{"line":142,"column":42}},"38":{"start":{"line":146,"column":16},"end":{"line":155,"column":17}},"39":{"start":{"line":148,"column":20},"end":{"line":150,"column":71}},"40":{"start":{"line":154,"column":20},"end":{"line":154,"column":46}},"41":{"start":{"line":157,"column":12},"end":{"line":157,"column":31}},"42":{"start":{"line":158,"column":12},"end":{"line":158,"column":31}},"43":{"start":{"line":159,"column":12},"end":{"line":159,"column":34}},"44":{"start":{"line":161,"column":8},"end":{"line":161,"column":19}},"45":{"start":{"line":172,"column":8},"end":{"line":175,"column":9}},"46":{"start":{"line":174,"column":12},"end":{"line":174,"column":19}},"47":{"start":{"line":176,"column":8},"end":{"line":190,"column":90}},"48":{"start":{"line":191,"column":8},"end":{"line":195,"column":11}},"49":{"start":{"line":196,"column":8},"end":{"line":196,"column":44}},"50":{"start":{"line":197,"column":8},"end":{"line":206,"column":9}},"51":{"start":{"line":199,"column":12},"end":{"line":199,"column":36}},"52":{"start":{"line":200,"column":12},"end":{"line":200,"column":36}},"53":{"start":{"line":201,"column":12},"end":{"line":201,"column":40}},"54":{"start":{"line":202,"column":12},"end":{"line":202,"column":40}},"55":{"start":{"line":203,"column":12},"end":{"line":203,"column":40}},"56":{"start":{"line":204,"column":12},"end":{"line":204,"column":40}},"57":{"start":{"line":205,"column":12},"end":{"line":205,"column":51}},"58":{"start":{"line":207,"column":8},"end":{"line":207,"column":19}},"59":{"start":{"line":224,"column":8},"end":{"line":224,"column":34}},"60":{"start":{"line":225,"column":8},"end":{"line":225,"column":32}},"61":{"start":{"line":226,"column":8},"end":{"line":234,"column":14}},"62":{"start":{"line":235,"column":8},"end":{"line":235,"column":51}},"63":{"start":{"line":236,"column":8},"end":{"line":236,"column":51}},"64":{"start":{"line":238,"column":8},"end":{"line":244,"column":9}},"65":{"start":{"line":240,"column":12},"end":{"line":240,"column":44}},"66":{"start":{"line":241,"column":12},"end":{"line":241,"column":106}},"67":{"start":{"line":242,"column":12},"end":{"line":242,"column":31}},"68":{"start":{"line":243,"column":12},"end":{"line":243,"column":31}},"69":{"start":{"line":246,"column":8},"end":{"line":246,"column":40}},"70":{"start":{"line":247,"column":8},"end":{"line":247,"column":105}},"71":{"start":{"line":249,"column":8},"end":{"line":256,"column":9}},"72":{"start":{"line":251,"column":12},"end":{"line":251,"column":106}},"73":{"start":{"line":253,"column":13},"end":{"line":256,"column":9}},"74":{"start":{"line":255,"column":12},"end":{"line":255,"column":100}},"75":{"start":{"line":258,"column":8},"end":{"line":258,"column":32}},"76":{"start":{"line":270,"column":8},"end":{"line":280,"column":10}},"77":{"start":{"line":283,"column":0},"end":{"line":283,"column":30}},"78":{"start":{"line":284,"column":0},"end":{"line":284,"column":16}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":22},"end":{"line":36,"column":41}},{"start":{"line":36,"column":45},"end":{"line":36,"column":77}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"4":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"5":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":17},"end":{"line":87,"column":29}},{"start":{"line":87,"column":33},"end":{"line":87,"column":86}}]},"6":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"7":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":41},"end":{"line":106,"column":55}},{"start":{"line":106,"column":58},"end":{"line":106,"column":72}}]},"8":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":25},"end":{"line":116,"column":40}},{"start":{"line":116,"column":44},"end":{"line":116,"column":59}}]},"9":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":117,"column":12}},{"start":{"line":117,"column":12},"end":{"line":117,"column":12}}]},"10":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":122,"column":12}},{"start":{"line":122,"column":12},"end":{"line":122,"column":12}}]},"11":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":17},"end":{"line":127,"column":17}},{"start":{"line":127,"column":17},"end":{"line":127,"column":17}}]},"12":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16}},{"start":{"line":129,"column":16},"end":{"line":129,"column":16}}]},"13":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":17},"end":{"line":140,"column":17}},{"start":{"line":140,"column":17},"end":{"line":140,"column":17}}]},"14":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":16},"end":{"line":146,"column":16}},{"start":{"line":146,"column":16},"end":{"line":146,"column":16}}]},"15":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":172,"column":8}},{"start":{"line":172,"column":8},"end":{"line":172,"column":8}}]},"16":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":20},"end":{"line":190,"column":32}},{"start":{"line":190,"column":36},"end":{"line":190,"column":89}}]},"17":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":19},"end":{"line":224,"column":27}},{"start":{"line":224,"column":31},"end":{"line":224,"column":33}}]},"18":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":18},"end":{"line":225,"column":25}},{"start":{"line":225,"column":29},"end":{"line":225,"column":31}}]},"19":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":8},"end":{"line":249,"column":8}},{"start":{"line":249,"column":8},"end":{"line":249,"column":8}}]},"20":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":13},"end":{"line":253,"column":13}},{"start":{"line":253,"column":13},"end":{"line":253,"column":13}}]}},"code":["(function () { YUI.add('series-line-util', function (Y, NAME) {","","/**\r"," * Provides functionality for drawing lines in a series.\r"," *\r"," * @module charts\r"," * @submodule series-line-util\r"," */\r","/**\r"," * Utility class used for drawing lines.\r"," *\r"," * @class Lines\r"," * @constructor\r"," * @submodule series-line-util\r"," */\r","var Y_Lang = Y.Lang;\r","function Lines(){}\r","\r","Lines.prototype = {\r","    /**\r","     * @property _lineDefaults\r","     * @type Object\r","     * @private\r","     */\r","    _lineDefaults: null,\r","\r","    /**\r","     * Creates a graphic in which to draw a series.\r","     *\r","     * @method _getGraphic\r","     * @return Graphic\r","     * @private\r","     */\r","    _getGraphic: function()\r","    {\r","        var graphic = this.get(\"graphic\") || this.get(\"graph\").get(\"graphic\");\r","        if(!this._lineGraphic)\r","        {\r","            this._lineGraphic = graphic.addShape({type: \"path\"});\r","        }\r","        this._lineGraphic.clear();\r","        return this._lineGraphic;\r","    },\r","\r","    /**\r","     * Toggles visibility\r","     *\r","     * @method _toggleVisible\r","     * @param {Boolean} visible indicates visibilitye\r","     * @private\r","     */\r","    _toggleVisible: function(visible)\r","    {\r","        if(this._lineGraphic)\r","        {\r","            this._lineGraphic.set(\"visible\", visible);\r","        }\r","    },\r","\r","    /**\r","     * Draws lines for the series.\r","     *\r","     * @method drawLines\r","     * @protected\r","     */\r","    drawLines: function()\r","    {\r","        if(this.get(\"xcoords\").length < 1)\r","        {\r","            return;\r","        }\r","        var isNumber = Y_Lang.isNumber,\r","            xcoords,\r","            ycoords,\r","            direction = this.get(\"direction\"),\r","            len,\r","            lastPointValid,\r","            pointValid,\r","            noPointsRendered = true,\r","            lastValidX,\r","            lastValidY,\r","            nextX,\r","            nextY,\r","            i,\r","            styles = this.get(\"styles\").line,\r","            lineType = styles.lineType,\r","            lc = styles.color || this._getDefaultColor(this.get(\"graphOrder\"), \"line\"),\r","            lineAlpha = styles.alpha,\r","            dashLength = styles.dashLength,\r","            gapSpace = styles.gapSpace,\r","            connectDiscontinuousPoints = styles.connectDiscontinuousPoints,\r","            discontinuousType = styles.discontinuousType,\r","            discontinuousDashLength = styles.discontinuousDashLength,\r","            discontinuousGapSpace = styles.discontinuousGapSpace,\r","            path = this._getGraphic();\r","        if(this._stacked)\r","        {\r","            xcoords = this.get(\"stackedXCoords\");\r","            ycoords = this.get(\"stackedYCoords\");\r","        }\r","        else\r","        {\r","            xcoords = this.get(\"xcoords\");\r","            ycoords = this.get(\"ycoords\");\r","        }\r","        len = direction === \"vertical\" ? ycoords.length : xcoords.length;\r","        path.set(\"stroke\", {\r","            weight: styles.weight,\r","            color: lc,\r","            opacity: lineAlpha\r","        });\r","        for(i = 0; i < len; i = ++i)\r","        {\r","            nextX = xcoords[i];\r","            nextY = ycoords[i];\r","            pointValid = isNumber(nextX) && isNumber(nextY);\r","            if(!pointValid)\r","            {\r","                lastPointValid = pointValid;\r","                continue;\r","            }\r","            if(noPointsRendered)\r","            {\r","                noPointsRendered = false;\r","                path.moveTo(nextX, nextY);\r","            }\r","            else if(lastPointValid)\r","            {\r","                if(lineType !== \"dashed\")\r","                {\r","                    path.lineTo(nextX, nextY);\r","                }\r","                else\r","                {\r","                    this.drawDashedLine(path, lastValidX, lastValidY, nextX, nextY,\r","                                                dashLength,\r","                                                gapSpace);\r","                }\r","            }\r","            else if(!connectDiscontinuousPoints)\r","            {\r","                path.moveTo(nextX, nextY);\r","            }\r","            else\r","            {\r","                if(discontinuousType !== \"solid\")\r","                {\r","                    this.drawDashedLine(path, lastValidX, lastValidY, nextX, nextY,\r","                                                discontinuousDashLength,\r","                                                discontinuousGapSpace);\r","                }\r","                else\r","                {\r","                    path.lineTo(nextX, nextY);\r","                }\r","            }\r","            lastValidX = nextX;\r","            lastValidY = nextY;\r","            lastPointValid = true;\r","        }\r","        path.end();\r","    },\r","\r","    /**\r","     * Connects data points with a consistent curve for a series.\r","     *\r","     * @method drawSpline\r","     * @protected\r","     */\r","    drawSpline: function()\r","    {\r","        if(this.get(\"xcoords\").length < 1)\r","        {\r","            return;\r","        }\r","        var xcoords = this.get(\"xcoords\"),\r","            ycoords = this.get(\"ycoords\"),\r","            curvecoords = this.getCurveControlPoints(xcoords, ycoords),\r","            len = curvecoords.length,\r","            cx1,\r","            cx2,\r","            cy1,\r","            cy2,\r","            x,\r","            y,\r","            i = 0,\r","            styles = this.get(\"styles\").line,\r","            path = this._getGraphic(),\r","            lineAlpha = styles.alpha,\r","            color = styles.color || this._getDefaultColor(this.get(\"graphOrder\"), \"line\");\r","        path.set(\"stroke\", {\r","            weight: styles.weight,\r","            color: color,\r","            opacity: lineAlpha\r","        });\r","        path.moveTo(xcoords[0], ycoords[0]);\r","        for(; i < len; i = ++i)\r","        {\r","            x = curvecoords[i].endx;\r","            y = curvecoords[i].endy;\r","            cx1 = curvecoords[i].ctrlx1;\r","            cx2 = curvecoords[i].ctrlx2;\r","            cy1 = curvecoords[i].ctrly1;\r","            cy2 = curvecoords[i].ctrly2;\r","            path.curveTo(cx1, cy1, cx2, cy2, x, y);\r","        }\r","        path.end();\r","    },\r","\r","    /**\r","     * Draws a dashed line between two points.\r","     *\r","     * @method drawDashedLine\r","     * @param {Number} xStart\tThe x position of the start of the line\r","     * @param {Number} yStart\tThe y position of the start of the line\r","     * @param {Number} xEnd\t\tThe x position of the end of the line\r","     * @param {Number} yEnd\t\tThe y position of the end of the line\r","     * @param {Number} dashSize\tthe size of dashes, in pixels\r","     * @param {Number} gapSize\tthe size of gaps between dashes, in pixels\r","     * @private\r","     */\r","    drawDashedLine: function(path, xStart, yStart, xEnd, yEnd, dashSize, gapSize)\r","    {\r","        dashSize = dashSize || 10;\r","        gapSize = gapSize || 10;\r","        var segmentLength = dashSize + gapSize,\r","            xDelta = xEnd - xStart,\r","            yDelta = yEnd - yStart,\r","            delta = Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2)),\r","            segmentCount = Math.floor(Math.abs(delta / segmentLength)),\r","            radians = Math.atan2(yDelta, xDelta),\r","            xCurrent = xStart,\r","            yCurrent = yStart,\r","            i;\r","        xDelta = Math.cos(radians) * segmentLength;\r","        yDelta = Math.sin(radians) * segmentLength;\r","\r","        for(i = 0; i < segmentCount; ++i)\r","        {\r","            path.moveTo(xCurrent, yCurrent);\r","            path.lineTo(xCurrent + Math.cos(radians) * dashSize, yCurrent + Math.sin(radians) * dashSize);\r","            xCurrent += xDelta;\r","            yCurrent += yDelta;\r","        }\r","\r","        path.moveTo(xCurrent, yCurrent);\r","        delta = Math.sqrt((xEnd - xCurrent) * (xEnd - xCurrent) + (yEnd - yCurrent) * (yEnd - yCurrent));\r","\r","        if(delta > dashSize)\r","        {\r","            path.lineTo(xCurrent + Math.cos(radians) * dashSize, yCurrent + Math.sin(radians) * dashSize);\r","        }\r","        else if(delta > 0)\r","        {\r","            path.lineTo(xCurrent + Math.cos(radians) * delta, yCurrent + Math.sin(radians) * delta);\r","        }\r","\r","        path.moveTo(xEnd, yEnd);\r","    },\r","\r","    /**\r","     * Default values for `styles` attribute.\r","     *\r","     * @method _getLineDefaults\r","     * @return Object\r","     * @protected\r","     */\r","    _getLineDefaults: function()\r","    {\r","        return {\r","            alpha: 1,\r","            weight: 6,\r","            lineType:\"solid\",\r","            dashLength:10,\r","            gapSpace:10,\r","            connectDiscontinuousPoints:true,\r","            discontinuousType:\"solid\",\r","            discontinuousDashLength:10,\r","            discontinuousGapSpace:10\r","        };\r","    }\r","};\r","Y.augment(Lines, Y.Attribute);\r","Y.Lines = Lines;\r","","","}, '@VERSION@');","","}());"]};
}
var __cov_pmiYwatEPX7NLbyYcixJvg = __coverage__['build/series-line-util/series-line-util.js'];
__cov_pmiYwatEPX7NLbyYcixJvg.s['1']++;YUI.add('series-line-util',function(Y,NAME){__cov_pmiYwatEPX7NLbyYcixJvg.f['1']++;__cov_pmiYwatEPX7NLbyYcixJvg.s['2']++;var Y_Lang=Y.Lang;__cov_pmiYwatEPX7NLbyYcixJvg.s['3']++;function Lines(){__cov_pmiYwatEPX7NLbyYcixJvg.f['2']++;}__cov_pmiYwatEPX7NLbyYcixJvg.s['4']++;Lines.prototype={_lineDefaults:null,_getGraphic:function(){__cov_pmiYwatEPX7NLbyYcixJvg.f['3']++;__cov_pmiYwatEPX7NLbyYcixJvg.s['5']++;var graphic=(__cov_pmiYwatEPX7NLbyYcixJvg.b['1'][0]++,this.get('graphic'))||(__cov_pmiYwatEPX7NLbyYcixJvg.b['1'][1]++,this.get('graph').get('graphic'));__cov_pmiYwatEPX7NLbyYcixJvg.s['6']++;if(!this._lineGraphic){__cov_pmiYwatEPX7NLbyYcixJvg.b['2'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['7']++;this._lineGraphic=graphic.addShape({type:'path'});}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['2'][1]++;}__cov_pmiYwatEPX7NLbyYcixJvg.s['8']++;this._lineGraphic.clear();__cov_pmiYwatEPX7NLbyYcixJvg.s['9']++;return this._lineGraphic;},_toggleVisible:function(visible){__cov_pmiYwatEPX7NLbyYcixJvg.f['4']++;__cov_pmiYwatEPX7NLbyYcixJvg.s['10']++;if(this._lineGraphic){__cov_pmiYwatEPX7NLbyYcixJvg.b['3'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['11']++;this._lineGraphic.set('visible',visible);}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['3'][1]++;}},drawLines:function(){__cov_pmiYwatEPX7NLbyYcixJvg.f['5']++;__cov_pmiYwatEPX7NLbyYcixJvg.s['12']++;if(this.get('xcoords').length<1){__cov_pmiYwatEPX7NLbyYcixJvg.b['4'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['13']++;return;}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['4'][1]++;}__cov_pmiYwatEPX7NLbyYcixJvg.s['14']++;var isNumber=Y_Lang.isNumber,xcoords,ycoords,direction=this.get('direction'),len,lastPointValid,pointValid,noPointsRendered=true,lastValidX,lastValidY,nextX,nextY,i,styles=this.get('styles').line,lineType=styles.lineType,lc=(__cov_pmiYwatEPX7NLbyYcixJvg.b['5'][0]++,styles.color)||(__cov_pmiYwatEPX7NLbyYcixJvg.b['5'][1]++,this._getDefaultColor(this.get('graphOrder'),'line')),lineAlpha=styles.alpha,dashLength=styles.dashLength,gapSpace=styles.gapSpace,connectDiscontinuousPoints=styles.connectDiscontinuousPoints,discontinuousType=styles.discontinuousType,discontinuousDashLength=styles.discontinuousDashLength,discontinuousGapSpace=styles.discontinuousGapSpace,path=this._getGraphic();__cov_pmiYwatEPX7NLbyYcixJvg.s['15']++;if(this._stacked){__cov_pmiYwatEPX7NLbyYcixJvg.b['6'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['16']++;xcoords=this.get('stackedXCoords');__cov_pmiYwatEPX7NLbyYcixJvg.s['17']++;ycoords=this.get('stackedYCoords');}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['6'][1]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['18']++;xcoords=this.get('xcoords');__cov_pmiYwatEPX7NLbyYcixJvg.s['19']++;ycoords=this.get('ycoords');}__cov_pmiYwatEPX7NLbyYcixJvg.s['20']++;len=direction==='vertical'?(__cov_pmiYwatEPX7NLbyYcixJvg.b['7'][0]++,ycoords.length):(__cov_pmiYwatEPX7NLbyYcixJvg.b['7'][1]++,xcoords.length);__cov_pmiYwatEPX7NLbyYcixJvg.s['21']++;path.set('stroke',{weight:styles.weight,color:lc,opacity:lineAlpha});__cov_pmiYwatEPX7NLbyYcixJvg.s['22']++;for(i=0;i<len;i=++i){__cov_pmiYwatEPX7NLbyYcixJvg.s['23']++;nextX=xcoords[i];__cov_pmiYwatEPX7NLbyYcixJvg.s['24']++;nextY=ycoords[i];__cov_pmiYwatEPX7NLbyYcixJvg.s['25']++;pointValid=(__cov_pmiYwatEPX7NLbyYcixJvg.b['8'][0]++,isNumber(nextX))&&(__cov_pmiYwatEPX7NLbyYcixJvg.b['8'][1]++,isNumber(nextY));__cov_pmiYwatEPX7NLbyYcixJvg.s['26']++;if(!pointValid){__cov_pmiYwatEPX7NLbyYcixJvg.b['9'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['27']++;lastPointValid=pointValid;__cov_pmiYwatEPX7NLbyYcixJvg.s['28']++;continue;}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['9'][1]++;}__cov_pmiYwatEPX7NLbyYcixJvg.s['29']++;if(noPointsRendered){__cov_pmiYwatEPX7NLbyYcixJvg.b['10'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['30']++;noPointsRendered=false;__cov_pmiYwatEPX7NLbyYcixJvg.s['31']++;path.moveTo(nextX,nextY);}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['10'][1]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['32']++;if(lastPointValid){__cov_pmiYwatEPX7NLbyYcixJvg.b['11'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['33']++;if(lineType!=='dashed'){__cov_pmiYwatEPX7NLbyYcixJvg.b['12'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['34']++;path.lineTo(nextX,nextY);}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['12'][1]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['35']++;this.drawDashedLine(path,lastValidX,lastValidY,nextX,nextY,dashLength,gapSpace);}}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['11'][1]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['36']++;if(!connectDiscontinuousPoints){__cov_pmiYwatEPX7NLbyYcixJvg.b['13'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['37']++;path.moveTo(nextX,nextY);}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['13'][1]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['38']++;if(discontinuousType!=='solid'){__cov_pmiYwatEPX7NLbyYcixJvg.b['14'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['39']++;this.drawDashedLine(path,lastValidX,lastValidY,nextX,nextY,discontinuousDashLength,discontinuousGapSpace);}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['14'][1]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['40']++;path.lineTo(nextX,nextY);}}}}__cov_pmiYwatEPX7NLbyYcixJvg.s['41']++;lastValidX=nextX;__cov_pmiYwatEPX7NLbyYcixJvg.s['42']++;lastValidY=nextY;__cov_pmiYwatEPX7NLbyYcixJvg.s['43']++;lastPointValid=true;}__cov_pmiYwatEPX7NLbyYcixJvg.s['44']++;path.end();},drawSpline:function(){__cov_pmiYwatEPX7NLbyYcixJvg.f['6']++;__cov_pmiYwatEPX7NLbyYcixJvg.s['45']++;if(this.get('xcoords').length<1){__cov_pmiYwatEPX7NLbyYcixJvg.b['15'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['46']++;return;}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['15'][1]++;}__cov_pmiYwatEPX7NLbyYcixJvg.s['47']++;var xcoords=this.get('xcoords'),ycoords=this.get('ycoords'),curvecoords=this.getCurveControlPoints(xcoords,ycoords),len=curvecoords.length,cx1,cx2,cy1,cy2,x,y,i=0,styles=this.get('styles').line,path=this._getGraphic(),lineAlpha=styles.alpha,color=(__cov_pmiYwatEPX7NLbyYcixJvg.b['16'][0]++,styles.color)||(__cov_pmiYwatEPX7NLbyYcixJvg.b['16'][1]++,this._getDefaultColor(this.get('graphOrder'),'line'));__cov_pmiYwatEPX7NLbyYcixJvg.s['48']++;path.set('stroke',{weight:styles.weight,color:color,opacity:lineAlpha});__cov_pmiYwatEPX7NLbyYcixJvg.s['49']++;path.moveTo(xcoords[0],ycoords[0]);__cov_pmiYwatEPX7NLbyYcixJvg.s['50']++;for(;i<len;i=++i){__cov_pmiYwatEPX7NLbyYcixJvg.s['51']++;x=curvecoords[i].endx;__cov_pmiYwatEPX7NLbyYcixJvg.s['52']++;y=curvecoords[i].endy;__cov_pmiYwatEPX7NLbyYcixJvg.s['53']++;cx1=curvecoords[i].ctrlx1;__cov_pmiYwatEPX7NLbyYcixJvg.s['54']++;cx2=curvecoords[i].ctrlx2;__cov_pmiYwatEPX7NLbyYcixJvg.s['55']++;cy1=curvecoords[i].ctrly1;__cov_pmiYwatEPX7NLbyYcixJvg.s['56']++;cy2=curvecoords[i].ctrly2;__cov_pmiYwatEPX7NLbyYcixJvg.s['57']++;path.curveTo(cx1,cy1,cx2,cy2,x,y);}__cov_pmiYwatEPX7NLbyYcixJvg.s['58']++;path.end();},drawDashedLine:function(path,xStart,yStart,xEnd,yEnd,dashSize,gapSize){__cov_pmiYwatEPX7NLbyYcixJvg.f['7']++;__cov_pmiYwatEPX7NLbyYcixJvg.s['59']++;dashSize=(__cov_pmiYwatEPX7NLbyYcixJvg.b['17'][0]++,dashSize)||(__cov_pmiYwatEPX7NLbyYcixJvg.b['17'][1]++,10);__cov_pmiYwatEPX7NLbyYcixJvg.s['60']++;gapSize=(__cov_pmiYwatEPX7NLbyYcixJvg.b['18'][0]++,gapSize)||(__cov_pmiYwatEPX7NLbyYcixJvg.b['18'][1]++,10);__cov_pmiYwatEPX7NLbyYcixJvg.s['61']++;var segmentLength=dashSize+gapSize,xDelta=xEnd-xStart,yDelta=yEnd-yStart,delta=Math.sqrt(Math.pow(xDelta,2)+Math.pow(yDelta,2)),segmentCount=Math.floor(Math.abs(delta/segmentLength)),radians=Math.atan2(yDelta,xDelta),xCurrent=xStart,yCurrent=yStart,i;__cov_pmiYwatEPX7NLbyYcixJvg.s['62']++;xDelta=Math.cos(radians)*segmentLength;__cov_pmiYwatEPX7NLbyYcixJvg.s['63']++;yDelta=Math.sin(radians)*segmentLength;__cov_pmiYwatEPX7NLbyYcixJvg.s['64']++;for(i=0;i<segmentCount;++i){__cov_pmiYwatEPX7NLbyYcixJvg.s['65']++;path.moveTo(xCurrent,yCurrent);__cov_pmiYwatEPX7NLbyYcixJvg.s['66']++;path.lineTo(xCurrent+Math.cos(radians)*dashSize,yCurrent+Math.sin(radians)*dashSize);__cov_pmiYwatEPX7NLbyYcixJvg.s['67']++;xCurrent+=xDelta;__cov_pmiYwatEPX7NLbyYcixJvg.s['68']++;yCurrent+=yDelta;}__cov_pmiYwatEPX7NLbyYcixJvg.s['69']++;path.moveTo(xCurrent,yCurrent);__cov_pmiYwatEPX7NLbyYcixJvg.s['70']++;delta=Math.sqrt((xEnd-xCurrent)*(xEnd-xCurrent)+(yEnd-yCurrent)*(yEnd-yCurrent));__cov_pmiYwatEPX7NLbyYcixJvg.s['71']++;if(delta>dashSize){__cov_pmiYwatEPX7NLbyYcixJvg.b['19'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['72']++;path.lineTo(xCurrent+Math.cos(radians)*dashSize,yCurrent+Math.sin(radians)*dashSize);}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['19'][1]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['73']++;if(delta>0){__cov_pmiYwatEPX7NLbyYcixJvg.b['20'][0]++;__cov_pmiYwatEPX7NLbyYcixJvg.s['74']++;path.lineTo(xCurrent+Math.cos(radians)*delta,yCurrent+Math.sin(radians)*delta);}else{__cov_pmiYwatEPX7NLbyYcixJvg.b['20'][1]++;}}__cov_pmiYwatEPX7NLbyYcixJvg.s['75']++;path.moveTo(xEnd,yEnd);},_getLineDefaults:function(){__cov_pmiYwatEPX7NLbyYcixJvg.f['8']++;__cov_pmiYwatEPX7NLbyYcixJvg.s['76']++;return{alpha:1,weight:6,lineType:'solid',dashLength:10,gapSpace:10,connectDiscontinuousPoints:true,discontinuousType:'solid',discontinuousDashLength:10,discontinuousGapSpace:10};}};__cov_pmiYwatEPX7NLbyYcixJvg.s['77']++;Y.augment(Lines,Y.Attribute);__cov_pmiYwatEPX7NLbyYcixJvg.s['78']++;Y.Lines=Lines;},'@VERSION@');

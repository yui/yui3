if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/series-combo/series-combo.js']) {
   __coverage__['build/series-combo/series-combo.js'] = {"path":"build/series-combo/series-combo.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":43}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":16},"end":{"line":32,"column":4}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":20},"end":{"line":55,"column":4}}},"4":{"name":"(anonymous_4)","line":95,"loc":{"start":{"line":95,"column":23},"end":{"line":96,"column":4}}},"5":{"name":"(anonymous_5)","line":185,"loc":{"start":{"line":185,"column":20},"end":{"line":186,"column":12}}},"6":{"name":"(anonymous_6)","line":189,"loc":{"start":{"line":189,"column":20},"end":{"line":190,"column":12}}},"7":{"name":"(anonymous_7)","line":222,"loc":{"start":{"line":222,"column":20},"end":{"line":223,"column":12}}},"8":{"name":"(anonymous_8)","line":226,"loc":{"start":{"line":226,"column":20},"end":{"line":227,"column":12}}},"9":{"name":"(anonymous_9)","line":249,"loc":{"start":{"line":249,"column":20},"end":{"line":250,"column":12}}},"10":{"name":"(anonymous_10)","line":253,"loc":{"start":{"line":253,"column":20},"end":{"line":254,"column":12}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":283,"column":112}},"2":{"start":{"line":23,"column":0},"end":{"line":274,"column":3}},"3":{"start":{"line":33,"column":8},"end":{"line":36,"column":9}},"4":{"start":{"line":35,"column":12},"end":{"line":35,"column":64}},"5":{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},"6":{"start":{"line":39,"column":12},"end":{"line":39,"column":29}},"7":{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},"8":{"start":{"line":43,"column":12},"end":{"line":43,"column":29}},"9":{"start":{"line":56,"column":8},"end":{"line":59,"column":14}},"10":{"start":{"line":60,"column":8},"end":{"line":63,"column":9}},"11":{"start":{"line":62,"column":12},"end":{"line":62,"column":47}},"12":{"start":{"line":64,"column":8},"end":{"line":67,"column":9}},"13":{"start":{"line":66,"column":12},"end":{"line":66,"column":54}},"14":{"start":{"line":68,"column":8},"end":{"line":84,"column":9}},"15":{"start":{"line":70,"column":12},"end":{"line":70,"column":42}},"16":{"start":{"line":71,"column":12},"end":{"line":83,"column":13}},"17":{"start":{"line":73,"column":16},"end":{"line":73,"column":22}},"18":{"start":{"line":74,"column":16},"end":{"line":74,"column":37}},"19":{"start":{"line":75,"column":16},"end":{"line":82,"column":17}},"20":{"start":{"line":77,"column":20},"end":{"line":77,"column":40}},"21":{"start":{"line":78,"column":20},"end":{"line":81,"column":21}},"22":{"start":{"line":80,"column":24},"end":{"line":80,"column":55}},"23":{"start":{"line":97,"column":8},"end":{"line":97,"column":66}},"24":{"start":{"line":98,"column":8},"end":{"line":98,"column":46}},"25":{"start":{"line":99,"column":8},"end":{"line":99,"column":48}},"26":{"start":{"line":100,"column":8},"end":{"line":100,"column":46}},"27":{"start":{"line":101,"column":8},"end":{"line":101,"column":22}},"28":{"start":{"line":187,"column":16},"end":{"line":187,"column":49}},"29":{"start":{"line":191,"column":16},"end":{"line":191,"column":49}},"30":{"start":{"line":224,"column":16},"end":{"line":224,"column":47}},"31":{"start":{"line":228,"column":16},"end":{"line":228,"column":47}},"32":{"start":{"line":251,"column":16},"end":{"line":251,"column":47}},"33":{"start":{"line":255,"column":16},"end":{"line":255,"column":47}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":8}},{"start":{"line":41,"column":8},"end":{"line":41,"column":8}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"5":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":11},"end":{"line":60,"column":35}},{"start":{"line":60,"column":39},"end":{"line":60,"column":49}}]},"6":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"7":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":11},"end":{"line":64,"column":32}},{"start":{"line":64,"column":36},"end":{"line":64,"column":53}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"10":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":20},"end":{"line":78,"column":20}},{"start":{"line":78,"column":20},"end":{"line":78,"column":20}}]}},"code":["(function () { YUI.add('series-combo', function (Y, NAME) {","","/**"," * Provides functionality for creating a combo series."," *"," * @module charts"," * @submodule series-combo"," */","/**"," * The ComboSeries class renders a combination of lines, plots and area fills in a single series."," * Each series type has a corresponding boolean attribute indicating if it is rendered. By default,"," * lines and plots are rendered and area is not."," *"," * @class ComboSeries"," * @extends CartesianSeries"," * @uses Fills"," * @uses Lines"," * @uses Plots"," * @constructor"," * @param {Object} config (optional) Configuration parameters."," * @submodule series-combo"," */","Y.ComboSeries = Y.Base.create(\"comboSeries\", Y.CartesianSeries, [Y.Fills, Y.Lines, Y.Plots], {","\t/**","     * @protected","     *","     * Draws the series.","     *","     * @method drawSeries","     */","    drawSeries: function()","    {","        if(this.get(\"showAreaFill\"))","        {","            this.drawFill.apply(this, this._getClosingPoints());","        }","        if(this.get(\"showLines\"))","        {","            this.drawLines();","        }","        if(this.get(\"showMarkers\"))","        {","            this.drawPlots();","        }","    },","","    /**","     * Toggles visibility","     *","     * @method _toggleVisible","     * @param {Boolean} visible indicates visibilitye","     * @private","     */","    _toggleVisible: function(visible)","    {","        var markers,","            marker,","            len,","            i;","        if(this.get(\"showAreaFill\") && this._path)","        {","            this._path.set(\"visible\", visible);","        }","        if(this.get(\"showLines\") && this._lineGraphic)","        {","            this._lineGraphic.set(\"visible\", visible);","        }","        if(this.get(\"showMarkers\"))","        {","            markers = this.get(\"markers\");","            if(markers)","            {","                i = 0;","                len = markers.length;","                for(; i < len; ++i)","                {","                    marker = markers[i];","                    if(marker)","                    {","                        marker.set(\"visible\", visible);","                    }","                }","            }","        }","    },","","    /**","     * @protected","     *","     * Returns the default hash for the `styles` attribute.","     *","     * @method _getDefaultStyles","     * @return Object","     */","    _getDefaultStyles: function()","    {","        var styles = Y.ComboSeries.superclass._getDefaultStyles();","        styles.line = this._getLineDefaults();","        styles.marker = this._getPlotDefaults();","        styles.area = this._getAreaDefaults();","        return styles;","    }","},","{","    ATTRS: {","        /**","         * Read-only attribute indicating the type of series.","         *","         * @attribute type","         * @type String","         * @default combo","         */","        type: {","            value:\"combo\"","        },","","        /**","         * Indicates whether a fill is displayed.","         *","         * @attribute showAreaFill","         * @type Boolean","         * @default false","         */","        showAreaFill: {","            value: false","        },","","        /**","         * Indicates whether lines are displayed.","         *","         * @attribute showLines","         * @type Boolean","         * @default true","         */","        showLines: {","            value: true","        },","","        /**","         * Indicates whether markers are displayed.","         *","         * @attribute showMarkers","         * @type Boolean","         * @default true","         */","        showMarkers: {","            value: true","        },","","        /**","         * Reference to the styles of the markers. These styles can also","         * be accessed through the `styles` attribute. Below are default","         * values:","         *  <dl>","         *      <dt>fill</dt><dd>A hash containing the following values:","         *          <dl>","         *              <dt>color</dt><dd>Color of the fill. The default value is determined by the order of the series on the","         *              graph. The color will be retrieved from the below array:<br/>","         *              `[\"#6084d0\", \"#eeb647\", \"#6c6b5f\", \"#d6484f\", \"#ce9ed1\", \"#ff9f3b\", \"#93b7ff\", \"#e0ddd0\", \"#94ecba\", \"#309687\"]`","         *              </dd>","         *              <dt>alpha</dt><dd>Number from 0 to 1 indicating the opacity of the marker fill. The default value is 1.</dd>","         *          </dl>","         *      </dd>","         *      <dt>border</dt><dd>A hash containing the following values:","         *          <dl>","         *              <dt>color</dt><dd>Color of the border. The default value is determined by the order of the series on the graph.","         *              The color will be retrieved from the below array:<br/>","         *              `[\"#205096\", \"#b38206\", \"#000000\", \"#94001e\", \"#9d6fa0\", \"#e55b00\", \"#5e85c9\", \"#adab9e\", \"#6ac291\", \"#006457\"]`","         *              <dt>alpha</dt><dd>Number from 0 to 1 indicating the opacity of the marker border. The default value is 1.</dd>","         *              <dt>weight</dt><dd>Number indicating the width of the border. The default value is 1.</dd>","         *          </dl>","         *      </dd>","         *      <dt>width</dt><dd>indicates the width of the marker. The default value is 10.</dd>","         *      <dt>height</dt><dd>indicates the height of the marker The default value is 10.</dd>","         *      <dt>over</dt><dd>hash containing styles for markers when highlighted by a `mouseover` event. The default","         *      values for each style is null. When an over style is not set, the non-over value will be used. For example,","         *      the default value for `marker.over.fill.color` is equivalent to `marker.fill.color`.</dd>","         *  </dl>","         *","         * @attribute marker","         * @type Object","         */","        marker: {","            lazyAdd: false,","            getter: function()","            {","                return this.get(\"styles\").marker;","            },","            setter: function(val)","            {","                this.set(\"styles\", {marker:val});","            }","        },","","        /**","         * Reference to the styles of the lines. These styles can also be accessed through the `styles` attribute.","         * Below are the default values:","         *  <dl>","         *      <dt>color</dt><dd>The color of the line. The default value is determined by the order of the series on the graph. The color","         *      will be retrieved from the following array:","         *      `[\"#426ab3\", \"#d09b2c\", \"#000000\", \"#b82837\", \"#b384b5\", \"#ff7200\", \"#779de3\", \"#cbc8ba\", \"#7ed7a6\", \"#007a6c\"]`","         *      <dt>weight</dt><dd>Number that indicates the width of the line. The default value is 6.</dd>","         *      <dt>alpha</dt><dd>Number between 0 and 1 that indicates the opacity of the line. The default value is 1.</dd>","         *      <dt>lineType</dt><dd>Indicates whether the line is solid or dashed. The default value is solid.</dd>","         *      <dt>dashLength</dt><dd>When the `lineType` is dashed, indicates the length of the dash. The default value is 10.</dd>","         *      <dt>gapSpace</dt><dd>When the `lineType` is dashed, indicates the distance between dashes. The default value is 10.</dd>","         *      <dt>connectDiscontinuousPoints</dt><dd>Indicates whether or not to connect lines when there is a missing or null value","         *      between points. The default value is true.</dd>","         *      <dt>discontinuousType</dt><dd>Indicates whether the line between discontinuous points is solid or dashed. The default","         *      value is solid.</dd>","         *      <dt>discontinuousDashLength</dt><dd>When the `discontinuousType` is dashed, indicates the length of the dash. The default","         *      value is 10.</dd>","         *      <dt>discontinuousGapSpace</dt><dd>When the `discontinuousType` is dashed, indicates the distance between dashes. The default","         *      value is 10.</dd>","         *  </dl>","         *","         * @attribute line","         * @type Object","         */","        line: {","            lazyAdd: false,","            getter: function()","            {","                return this.get(\"styles\").line;","            },","            setter: function(val)","            {","                this.set(\"styles\", {line:val});","            }","        },","","        /**","         * Reference to the styles of the area fills. These styles can also be accessed through the `styles` attribute.","         * Below are the default values:","         *","         *  <dl>","         *      <dt>color</dt><dd>The color of the fill. The default value is determined by the order of the series on the","         *      graph. The color will be retrieved from the following array:","         *      `[\"#66007f\", \"#a86f41\", \"#295454\", \"#996ab2\", \"#e8cdb7\", \"#90bdbd\",\"#000000\",\"#c3b8ca\", \"#968373\", \"#678585\"]`","         *      </dd>","         *      <dt>alpha</dt><dd>Number between 0 and 1 that indicates the opacity of the fill. The default value is 1</dd>","         *  </dl>","         *","         * @attribute area","         * @type Object","         */","        area: {","            lazyAdd: false,","            getter: function()","            {","                return this.get(\"styles\").area;","            },","            setter: function(val)","            {","                this.set(\"styles\", {area:val});","            }","        }","","        /**","         * Style properties for the series. Contains a key indexed hash of the following:","         *  <dl>","         *      <dt>marker</dt><dd>Style properties for the markers in the series. Specific style attributes are listed","         *      <a href=\"#attr_marker\">here</a>.</dd>","         *      <dt>line</dt><dd>Style properties for the lines in the series. Specific","         *      style attributes are listed <a href=\"#attr_line\">here</a>.</dd>","         *      <dt>area</dt><dd>Style properties for the area fills in the series. Specific style attributes are listed","         *      <a href=\"#attr_area\">here</a>.</dd>","         *  </dl>","         *","         * @attribute styles","         * @type Object","         */","    }","});","","","","","","","","","}, '@VERSION@', {\"requires\": [\"series-cartesian\", \"series-line-util\", \"series-plot-util\", \"series-fill-util\"]});","","}());"]};
}
var __cov_mtk54UUPBVQg_cMxSHmg2w = __coverage__['build/series-combo/series-combo.js'];
__cov_mtk54UUPBVQg_cMxSHmg2w.s['1']++;YUI.add('series-combo',function(Y,NAME){__cov_mtk54UUPBVQg_cMxSHmg2w.f['1']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['2']++;Y.ComboSeries=Y.Base.create('comboSeries',Y.CartesianSeries,[Y.Fills,Y.Lines,Y.Plots],{drawSeries:function(){__cov_mtk54UUPBVQg_cMxSHmg2w.f['2']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['3']++;if(this.get('showAreaFill')){__cov_mtk54UUPBVQg_cMxSHmg2w.b['1'][0]++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['4']++;this.drawFill.apply(this,this._getClosingPoints());}else{__cov_mtk54UUPBVQg_cMxSHmg2w.b['1'][1]++;}__cov_mtk54UUPBVQg_cMxSHmg2w.s['5']++;if(this.get('showLines')){__cov_mtk54UUPBVQg_cMxSHmg2w.b['2'][0]++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['6']++;this.drawLines();}else{__cov_mtk54UUPBVQg_cMxSHmg2w.b['2'][1]++;}__cov_mtk54UUPBVQg_cMxSHmg2w.s['7']++;if(this.get('showMarkers')){__cov_mtk54UUPBVQg_cMxSHmg2w.b['3'][0]++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['8']++;this.drawPlots();}else{__cov_mtk54UUPBVQg_cMxSHmg2w.b['3'][1]++;}},_toggleVisible:function(visible){__cov_mtk54UUPBVQg_cMxSHmg2w.f['3']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['9']++;var markers,marker,len,i;__cov_mtk54UUPBVQg_cMxSHmg2w.s['10']++;if((__cov_mtk54UUPBVQg_cMxSHmg2w.b['5'][0]++,this.get('showAreaFill'))&&(__cov_mtk54UUPBVQg_cMxSHmg2w.b['5'][1]++,this._path)){__cov_mtk54UUPBVQg_cMxSHmg2w.b['4'][0]++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['11']++;this._path.set('visible',visible);}else{__cov_mtk54UUPBVQg_cMxSHmg2w.b['4'][1]++;}__cov_mtk54UUPBVQg_cMxSHmg2w.s['12']++;if((__cov_mtk54UUPBVQg_cMxSHmg2w.b['7'][0]++,this.get('showLines'))&&(__cov_mtk54UUPBVQg_cMxSHmg2w.b['7'][1]++,this._lineGraphic)){__cov_mtk54UUPBVQg_cMxSHmg2w.b['6'][0]++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['13']++;this._lineGraphic.set('visible',visible);}else{__cov_mtk54UUPBVQg_cMxSHmg2w.b['6'][1]++;}__cov_mtk54UUPBVQg_cMxSHmg2w.s['14']++;if(this.get('showMarkers')){__cov_mtk54UUPBVQg_cMxSHmg2w.b['8'][0]++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['15']++;markers=this.get('markers');__cov_mtk54UUPBVQg_cMxSHmg2w.s['16']++;if(markers){__cov_mtk54UUPBVQg_cMxSHmg2w.b['9'][0]++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['17']++;i=0;__cov_mtk54UUPBVQg_cMxSHmg2w.s['18']++;len=markers.length;__cov_mtk54UUPBVQg_cMxSHmg2w.s['19']++;for(;i<len;++i){__cov_mtk54UUPBVQg_cMxSHmg2w.s['20']++;marker=markers[i];__cov_mtk54UUPBVQg_cMxSHmg2w.s['21']++;if(marker){__cov_mtk54UUPBVQg_cMxSHmg2w.b['10'][0]++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['22']++;marker.set('visible',visible);}else{__cov_mtk54UUPBVQg_cMxSHmg2w.b['10'][1]++;}}}else{__cov_mtk54UUPBVQg_cMxSHmg2w.b['9'][1]++;}}else{__cov_mtk54UUPBVQg_cMxSHmg2w.b['8'][1]++;}},_getDefaultStyles:function(){__cov_mtk54UUPBVQg_cMxSHmg2w.f['4']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['23']++;var styles=Y.ComboSeries.superclass._getDefaultStyles();__cov_mtk54UUPBVQg_cMxSHmg2w.s['24']++;styles.line=this._getLineDefaults();__cov_mtk54UUPBVQg_cMxSHmg2w.s['25']++;styles.marker=this._getPlotDefaults();__cov_mtk54UUPBVQg_cMxSHmg2w.s['26']++;styles.area=this._getAreaDefaults();__cov_mtk54UUPBVQg_cMxSHmg2w.s['27']++;return styles;}},{ATTRS:{type:{value:'combo'},showAreaFill:{value:false},showLines:{value:true},showMarkers:{value:true},marker:{lazyAdd:false,getter:function(){__cov_mtk54UUPBVQg_cMxSHmg2w.f['5']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['28']++;return this.get('styles').marker;},setter:function(val){__cov_mtk54UUPBVQg_cMxSHmg2w.f['6']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['29']++;this.set('styles',{marker:val});}},line:{lazyAdd:false,getter:function(){__cov_mtk54UUPBVQg_cMxSHmg2w.f['7']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['30']++;return this.get('styles').line;},setter:function(val){__cov_mtk54UUPBVQg_cMxSHmg2w.f['8']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['31']++;this.set('styles',{line:val});}},area:{lazyAdd:false,getter:function(){__cov_mtk54UUPBVQg_cMxSHmg2w.f['9']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['32']++;return this.get('styles').area;},setter:function(val){__cov_mtk54UUPBVQg_cMxSHmg2w.f['10']++;__cov_mtk54UUPBVQg_cMxSHmg2w.s['33']++;this.set('styles',{area:val});}}}});},'@VERSION@',{'requires':['series-cartesian','series-line-util','series-plot-util','series-fill-util']});

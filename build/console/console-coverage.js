if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/console/console.js']) {
   __coverage__['build/console/console.js'] = {"path":"build/console/console.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":19},"end":{"line":1,"column":38}}},"2":{"name":"Console","line":97,"loc":{"start":{"line":97,"column":0},"end":{"line":97,"column":19}}},"3":{"name":"(anonymous_3)","line":173,"loc":{"start":{"line":173,"column":10},"end":{"line":173,"column":22}}},"4":{"name":"(anonymous_4)","line":185,"loc":{"start":{"line":185,"column":19},"end":{"line":185,"column":31}}},"5":{"name":"(anonymous_5)","line":202,"loc":{"start":{"line":202,"column":12},"end":{"line":202,"column":24}}},"6":{"name":"(anonymous_6)","line":214,"loc":{"start":{"line":214,"column":15},"end":{"line":214,"column":27}}},"7":{"name":"(anonymous_7)","line":226,"loc":{"start":{"line":226,"column":13},"end":{"line":226,"column":25}}},"8":{"name":"(anonymous_8)","line":243,"loc":{"start":{"line":243,"column":17},"end":{"line":243,"column":34}}},"9":{"name":"(anonymous_9)","line":300,"loc":{"start":{"line":300,"column":18},"end":{"line":300,"column":30}}},"10":{"name":"(anonymous_10)","line":340,"loc":{"start":{"line":340,"column":17},"end":{"line":340,"column":29}}},"11":{"name":"(anonymous_11)","line":356,"loc":{"start":{"line":356,"column":15},"end":{"line":356,"column":27}}},"12":{"name":"(anonymous_12)","line":373,"loc":{"start":{"line":373,"column":13},"end":{"line":373,"column":25}}},"13":{"name":"(anonymous_13)","line":385,"loc":{"start":{"line":385,"column":13},"end":{"line":385,"column":25}}},"14":{"name":"(anonymous_14)","line":413,"loc":{"start":{"line":413,"column":16},"end":{"line":413,"column":28}}},"15":{"name":"(anonymous_15)","line":432,"loc":{"start":{"line":432,"column":16},"end":{"line":432,"column":28}}},"16":{"name":"(anonymous_16)","line":446,"loc":{"start":{"line":446,"column":16},"end":{"line":446,"column":28}}},"17":{"name":"(anonymous_17)","line":465,"loc":{"start":{"line":465,"column":20},"end":{"line":465,"column":33}}},"18":{"name":"(anonymous_18)","line":502,"loc":{"start":{"line":502,"column":24},"end":{"line":502,"column":37}}},"19":{"name":"(anonymous_19)","line":538,"loc":{"start":{"line":538,"column":21},"end":{"line":538,"column":33}}},"20":{"name":"(anonymous_20)","line":555,"loc":{"start":{"line":555,"column":23},"end":{"line":555,"column":36}}},"21":{"name":"(anonymous_21)","line":565,"loc":{"start":{"line":565,"column":12},"end":{"line":565,"column":31}}},"22":{"name":"(anonymous_22)","line":576,"loc":{"start":{"line":576,"column":21},"end":{"line":576,"column":33}}},"23":{"name":"(anonymous_23)","line":592,"loc":{"start":{"line":592,"column":25},"end":{"line":592,"column":38}}},"24":{"name":"(anonymous_24)","line":608,"loc":{"start":{"line":608,"column":22},"end":{"line":608,"column":34}}},"25":{"name":"(anonymous_25)","line":656,"loc":{"start":{"line":656,"column":18},"end":{"line":656,"column":31}}},"26":{"name":"(anonymous_26)","line":670,"loc":{"start":{"line":670,"column":23},"end":{"line":670,"column":35}}},"27":{"name":"(anonymous_27)","line":686,"loc":{"start":{"line":686,"column":21},"end":{"line":686,"column":38}}},"28":{"name":"(anonymous_28)","line":698,"loc":{"start":{"line":698,"column":20},"end":{"line":698,"column":33}}},"29":{"name":"(anonymous_29)","line":710,"loc":{"start":{"line":710,"column":20},"end":{"line":710,"column":33}}},"30":{"name":"(anonymous_30)","line":722,"loc":{"start":{"line":722,"column":23},"end":{"line":722,"column":36}}},"31":{"name":"(anonymous_31)","line":736,"loc":{"start":{"line":736,"column":24},"end":{"line":736,"column":37}}},"32":{"name":"(anonymous_32)","line":750,"loc":{"start":{"line":750,"column":19},"end":{"line":750,"column":32}}},"33":{"name":"(anonymous_33)","line":766,"loc":{"start":{"line":766,"column":27},"end":{"line":766,"column":39}}},"34":{"name":"(anonymous_34)","line":784,"loc":{"start":{"line":784,"column":27},"end":{"line":784,"column":40}}},"35":{"name":"(anonymous_35)","line":805,"loc":{"start":{"line":805,"column":19},"end":{"line":805,"column":32}}},"36":{"name":"(anonymous_36)","line":824,"loc":{"start":{"line":824,"column":16},"end":{"line":824,"column":27}}},"37":{"name":"(anonymous_37)","line":837,"loc":{"start":{"line":837,"column":26},"end":{"line":837,"column":39}}},"38":{"name":"(anonymous_38)","line":863,"loc":{"start":{"line":863,"column":25},"end":{"line":863,"column":38}}},"39":{"name":"(anonymous_39)","line":884,"loc":{"start":{"line":884,"column":22},"end":{"line":884,"column":36}}},"40":{"name":"(anonymous_40)","line":900,"loc":{"start":{"line":900,"column":31},"end":{"line":900,"column":43}}},"41":{"name":"(anonymous_41)","line":913,"loc":{"start":{"line":913,"column":28},"end":{"line":913,"column":41}}},"42":{"name":"(anonymous_42)","line":924,"loc":{"start":{"line":924,"column":25},"end":{"line":924,"column":38}}},"43":{"name":"(anonymous_43)","line":946,"loc":{"start":{"line":946,"column":26},"end":{"line":946,"column":39}}},"44":{"name":"(anonymous_44)","line":959,"loc":{"start":{"line":959,"column":28},"end":{"line":959,"column":41}}},"45":{"name":"(anonymous_45)","line":975,"loc":{"start":{"line":975,"column":18},"end":{"line":975,"column":31}}},"46":{"name":"(anonymous_46)","line":999,"loc":{"start":{"line":999,"column":18},"end":{"line":999,"column":30}}},"47":{"name":"(anonymous_47)","line":1013,"loc":{"start":{"line":1013,"column":18},"end":{"line":1013,"column":31}}},"48":{"name":"(anonymous_48)","line":1251,"loc":{"start":{"line":1251,"column":24},"end":{"line":1251,"column":37}}},"49":{"name":"(anonymous_49)","line":1272,"loc":{"start":{"line":1272,"column":21},"end":{"line":1272,"column":32}}},"50":{"name":"(anonymous_50)","line":1343,"loc":{"start":{"line":1343,"column":21},"end":{"line":1343,"column":34}}},"51":{"name":"(anonymous_51)","line":1489,"loc":{"start":{"line":1489,"column":21},"end":{"line":1489,"column":33}}},"52":{"name":"(anonymous_52)","line":1492,"loc":{"start":{"line":1492,"column":21},"end":{"line":1492,"column":34}}},"53":{"name":"(anonymous_53)","line":1508,"loc":{"start":{"line":1508,"column":24},"end":{"line":1508,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1517,"column":112}},"2":{"start":{"line":17,"column":0},"end":{"line":87,"column":28}},"3":{"start":{"line":97,"column":0},"end":{"line":99,"column":1}},"4":{"start":{"line":98,"column":4},"end":{"line":98,"column":57}},"5":{"start":{"line":101,"column":0},"end":{"line":1514,"column":3}},"6":{"start":{"line":174,"column":8},"end":{"line":174,"column":33}},"7":{"start":{"line":176,"column":8},"end":{"line":176,"column":20}},"8":{"start":{"line":187,"column":8},"end":{"line":187,"column":27}},"9":{"start":{"line":189,"column":8},"end":{"line":189,"column":32}},"10":{"start":{"line":191,"column":8},"end":{"line":191,"column":25}},"11":{"start":{"line":193,"column":8},"end":{"line":193,"column":20}},"12":{"start":{"line":203,"column":8},"end":{"line":203,"column":25}},"13":{"start":{"line":205,"column":8},"end":{"line":205,"column":20}},"14":{"start":{"line":215,"column":8},"end":{"line":215,"column":34}},"15":{"start":{"line":217,"column":8},"end":{"line":217,"column":20}},"16":{"start":{"line":227,"column":8},"end":{"line":227,"column":35}},"17":{"start":{"line":229,"column":8},"end":{"line":229,"column":20}},"18":{"start":{"line":244,"column":8},"end":{"line":250,"column":14}},"19":{"start":{"line":252,"column":8},"end":{"line":254,"column":9}},"20":{"start":{"line":253,"column":12},"end":{"line":253,"column":63}},"21":{"start":{"line":256,"column":8},"end":{"line":256,"column":70}},"22":{"start":{"line":259,"column":8},"end":{"line":259,"column":31}},"23":{"start":{"line":261,"column":8},"end":{"line":284,"column":9}},"24":{"start":{"line":263,"column":12},"end":{"line":265,"column":13}},"25":{"start":{"line":264,"column":16},"end":{"line":264,"column":69}},"26":{"start":{"line":267,"column":12},"end":{"line":269,"column":13}},"27":{"start":{"line":268,"column":16},"end":{"line":268,"column":40}},"28":{"start":{"line":271,"column":12},"end":{"line":283,"column":13}},"29":{"start":{"line":272,"column":16},"end":{"line":274,"column":17}},"30":{"start":{"line":273,"column":20},"end":{"line":273,"column":38}},"31":{"start":{"line":276,"column":16},"end":{"line":276,"column":74}},"32":{"start":{"line":278,"column":16},"end":{"line":280,"column":17}},"33":{"start":{"line":279,"column":20},"end":{"line":279,"column":42}},"34":{"start":{"line":282,"column":16},"end":{"line":282,"column":39}},"35":{"start":{"line":287,"column":8},"end":{"line":287,"column":31}},"36":{"start":{"line":289,"column":8},"end":{"line":289,"column":20}},"37":{"start":{"line":301,"column":8},"end":{"line":301,"column":43}},"38":{"start":{"line":303,"column":8},"end":{"line":303,"column":25}},"39":{"start":{"line":305,"column":8},"end":{"line":306,"column":61}},"40":{"start":{"line":320,"column":8},"end":{"line":320,"column":61}},"41":{"start":{"line":329,"column":8},"end":{"line":329,"column":61}},"42":{"start":{"line":331,"column":8},"end":{"line":331,"column":52}},"43":{"start":{"line":341,"column":8},"end":{"line":341,"column":41}},"44":{"start":{"line":343,"column":8},"end":{"line":343,"column":32}},"45":{"start":{"line":345,"column":8},"end":{"line":345,"column":57}},"46":{"start":{"line":347,"column":8},"end":{"line":347,"column":23}},"47":{"start":{"line":357,"column":8},"end":{"line":357,"column":25}},"48":{"start":{"line":358,"column":8},"end":{"line":358,"column":25}},"49":{"start":{"line":359,"column":8},"end":{"line":359,"column":25}},"50":{"start":{"line":362,"column":8},"end":{"line":362,"column":38}},"51":{"start":{"line":363,"column":8},"end":{"line":365,"column":9}},"52":{"start":{"line":364,"column":12},"end":{"line":364,"column":71}},"53":{"start":{"line":374,"column":8},"end":{"line":374,"column":47}},"54":{"start":{"line":375,"column":8},"end":{"line":375,"column":53}},"55":{"start":{"line":376,"column":8},"end":{"line":376,"column":44}},"56":{"start":{"line":386,"column":8},"end":{"line":387,"column":49}},"57":{"start":{"line":389,"column":8},"end":{"line":390,"column":46}},"58":{"start":{"line":392,"column":8},"end":{"line":393,"column":46}},"59":{"start":{"line":396,"column":8},"end":{"line":397,"column":38}},"60":{"start":{"line":398,"column":8},"end":{"line":399,"column":37}},"61":{"start":{"line":400,"column":8},"end":{"line":401,"column":43}},"62":{"start":{"line":402,"column":8},"end":{"line":403,"column":40}},"63":{"start":{"line":414,"column":8},"end":{"line":418,"column":23}},"64":{"start":{"line":420,"column":8},"end":{"line":420,"column":70}},"65":{"start":{"line":422,"column":8},"end":{"line":422,"column":57}},"66":{"start":{"line":433,"column":8},"end":{"line":435,"column":53}},"67":{"start":{"line":437,"column":8},"end":{"line":437,"column":54}},"68":{"start":{"line":447,"column":8},"end":{"line":451,"column":15}},"69":{"start":{"line":453,"column":8},"end":{"line":453,"column":70}},"70":{"start":{"line":455,"column":8},"end":{"line":455,"column":54}},"71":{"start":{"line":466,"column":8},"end":{"line":466,"column":52}},"72":{"start":{"line":468,"column":8},"end":{"line":479,"column":9}},"73":{"start":{"line":469,"column":12},"end":{"line":469,"column":30}},"74":{"start":{"line":471,"column":12},"end":{"line":473,"column":13}},"75":{"start":{"line":472,"column":16},"end":{"line":472,"column":40}},"76":{"start":{"line":475,"column":12},"end":{"line":478,"column":13}},"77":{"start":{"line":477,"column":16},"end":{"line":477,"column":29}},"78":{"start":{"line":481,"column":8},"end":{"line":481,"column":20}},"79":{"start":{"line":504,"column":8},"end":{"line":517,"column":14}},"80":{"start":{"line":520,"column":8},"end":{"line":521,"column":62}},"81":{"start":{"line":522,"column":8},"end":{"line":523,"column":72}},"82":{"start":{"line":524,"column":8},"end":{"line":524,"column":57}},"83":{"start":{"line":525,"column":8},"end":{"line":525,"column":58}},"84":{"start":{"line":527,"column":8},"end":{"line":527,"column":36}},"85":{"start":{"line":529,"column":8},"end":{"line":529,"column":17}},"86":{"start":{"line":539,"column":8},"end":{"line":544,"column":9}},"87":{"start":{"line":540,"column":12},"end":{"line":543,"column":62}},"88":{"start":{"line":556,"column":8},"end":{"line":562,"column":19}},"89":{"start":{"line":564,"column":8},"end":{"line":567,"column":15}},"90":{"start":{"line":566,"column":16},"end":{"line":566,"column":50}},"91":{"start":{"line":577,"column":8},"end":{"line":579,"column":59}},"92":{"start":{"line":581,"column":8},"end":{"line":581,"column":47}},"93":{"start":{"line":593,"column":8},"end":{"line":593,"column":56}},"94":{"start":{"line":594,"column":8},"end":{"line":594,"column":55}},"95":{"start":{"line":595,"column":8},"end":{"line":595,"column":64}},"96":{"start":{"line":596,"column":8},"end":{"line":596,"column":57}},"97":{"start":{"line":598,"column":8},"end":{"line":598,"column":17}},"98":{"start":{"line":611,"column":8},"end":{"line":611,"column":31}},"99":{"start":{"line":613,"column":8},"end":{"line":616,"column":26}},"100":{"start":{"line":618,"column":8},"end":{"line":642,"column":9}},"101":{"start":{"line":619,"column":12},"end":{"line":619,"column":42}},"102":{"start":{"line":620,"column":12},"end":{"line":620,"column":39}},"103":{"start":{"line":622,"column":12},"end":{"line":640,"column":13}},"104":{"start":{"line":623,"column":16},"end":{"line":628,"column":17}},"105":{"start":{"line":624,"column":20},"end":{"line":624,"column":30}},"106":{"start":{"line":625,"column":20},"end":{"line":625,"column":39}},"107":{"start":{"line":627,"column":20},"end":{"line":627,"column":26}},"108":{"start":{"line":630,"column":16},"end":{"line":630,"column":54}},"109":{"start":{"line":632,"column":16},"end":{"line":637,"column":17}},"110":{"start":{"line":633,"column":20},"end":{"line":633,"column":40}},"111":{"start":{"line":634,"column":20},"end":{"line":636,"column":21}},"112":{"start":{"line":635,"column":24},"end":{"line":635,"column":35}},"113":{"start":{"line":639,"column":16},"end":{"line":639,"column":50}},"114":{"start":{"line":644,"column":8},"end":{"line":644,"column":31}},"115":{"start":{"line":657,"column":8},"end":{"line":661,"column":14}},"116":{"start":{"line":671,"column":8},"end":{"line":674,"column":9}},"117":{"start":{"line":672,"column":12},"end":{"line":672,"column":37}},"118":{"start":{"line":673,"column":12},"end":{"line":673,"column":35}},"119":{"start":{"line":687,"column":8},"end":{"line":687,"column":79}},"120":{"start":{"line":699,"column":8},"end":{"line":699,"column":47}},"121":{"start":{"line":711,"column":8},"end":{"line":711,"column":28}},"122":{"start":{"line":723,"column":8},"end":{"line":723,"column":50}},"123":{"start":{"line":737,"column":8},"end":{"line":737,"column":44}},"124":{"start":{"line":751,"column":8},"end":{"line":753,"column":9}},"125":{"start":{"line":752,"column":12},"end":{"line":752,"column":32}},"126":{"start":{"line":755,"column":8},"end":{"line":755,"column":54}},"127":{"start":{"line":767,"column":8},"end":{"line":767,"column":46}},"128":{"start":{"line":768,"column":8},"end":{"line":769,"column":54}},"129":{"start":{"line":785,"column":8},"end":{"line":785,"column":46}},"130":{"start":{"line":786,"column":8},"end":{"line":792,"column":9}},"131":{"start":{"line":787,"column":12},"end":{"line":787,"column":20}},"132":{"start":{"line":788,"column":12},"end":{"line":788,"column":51}},"133":{"start":{"line":789,"column":12},"end":{"line":789,"column":21}},"134":{"start":{"line":791,"column":12},"end":{"line":791,"column":45}},"135":{"start":{"line":806,"column":8},"end":{"line":806,"column":62}},"136":{"start":{"line":808,"column":8},"end":{"line":814,"column":9}},"137":{"start":{"line":809,"column":12},"end":{"line":811,"column":51}},"138":{"start":{"line":813,"column":12},"end":{"line":813,"column":47}},"139":{"start":{"line":838,"column":8},"end":{"line":841,"column":30}},"140":{"start":{"line":843,"column":8},"end":{"line":845,"column":9}},"141":{"start":{"line":844,"column":12},"end":{"line":844,"column":61}},"142":{"start":{"line":847,"column":8},"end":{"line":849,"column":9}},"143":{"start":{"line":848,"column":12},"end":{"line":848,"column":59}},"144":{"start":{"line":851,"column":8},"end":{"line":853,"column":9}},"145":{"start":{"line":852,"column":12},"end":{"line":852,"column":57}},"146":{"start":{"line":864,"column":8},"end":{"line":864,"column":30}},"147":{"start":{"line":866,"column":8},"end":{"line":868,"column":9}},"148":{"start":{"line":867,"column":12},"end":{"line":867,"column":41}},"149":{"start":{"line":870,"column":8},"end":{"line":874,"column":9}},"150":{"start":{"line":871,"column":12},"end":{"line":871,"column":34}},"151":{"start":{"line":872,"column":15},"end":{"line":874,"column":9}},"152":{"start":{"line":873,"column":12},"end":{"line":873,"column":36}},"153":{"start":{"line":885,"column":8},"end":{"line":885,"column":67}},"154":{"start":{"line":887,"column":8},"end":{"line":889,"column":9}},"155":{"start":{"line":888,"column":12},"end":{"line":888,"column":33}},"156":{"start":{"line":901,"column":8},"end":{"line":901,"column":31}},"157":{"start":{"line":914,"column":8},"end":{"line":914,"column":42}},"158":{"start":{"line":925,"column":8},"end":{"line":928,"column":70}},"159":{"start":{"line":930,"column":8},"end":{"line":930,"column":32}},"160":{"start":{"line":932,"column":8},"end":{"line":934,"column":9}},"161":{"start":{"line":933,"column":12},"end":{"line":933,"column":32}},"162":{"start":{"line":936,"column":8},"end":{"line":936,"column":80}},"163":{"start":{"line":947,"column":8},"end":{"line":947,"column":69}},"164":{"start":{"line":949,"column":8},"end":{"line":949,"column":45}},"165":{"start":{"line":960,"column":8},"end":{"line":962,"column":9}},"166":{"start":{"line":961,"column":12},"end":{"line":961,"column":48}},"167":{"start":{"line":977,"column":8},"end":{"line":989,"column":9}},"168":{"start":{"line":979,"column":12},"end":{"line":979,"column":39}},"169":{"start":{"line":982,"column":12},"end":{"line":982,"column":35}},"170":{"start":{"line":984,"column":12},"end":{"line":986,"column":15}},"171":{"start":{"line":988,"column":12},"end":{"line":988,"column":35}},"172":{"start":{"line":1000,"column":8},"end":{"line":1000,"column":28}},"173":{"start":{"line":1001,"column":8},"end":{"line":1001,"column":40}},"174":{"start":{"line":1002,"column":8},"end":{"line":1002,"column":33}},"175":{"start":{"line":1003,"column":8},"end":{"line":1003,"column":31}},"176":{"start":{"line":1014,"column":8},"end":{"line":1017,"column":9}},"177":{"start":{"line":1015,"column":12},"end":{"line":1015,"column":40}},"178":{"start":{"line":1016,"column":12},"end":{"line":1016,"column":34}},"179":{"start":{"line":1252,"column":16},"end":{"line":1252,"column":50}},"180":{"start":{"line":1272,"column":34},"end":{"line":1272,"column":63}},"181":{"start":{"line":1344,"column":16},"end":{"line":1344,"column":44}},"182":{"start":{"line":1490,"column":16},"end":{"line":1490,"column":52}},"183":{"start":{"line":1493,"column":16},"end":{"line":1493,"column":53}},"184":{"start":{"line":1509,"column":16},"end":{"line":1509,"column":46}}},"branchMap":{"1":{"line":249,"type":"cond-expr","locations":[{"start":{"line":249,"column":40},"end":{"line":249,"column":68}},{"start":{"line":249,"column":71},"end":{"line":249,"column":75}}]},"2":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":8},"end":{"line":252,"column":8}},{"start":{"line":252,"column":8},"end":{"line":252,"column":8}}]},"3":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":43},"end":{"line":256,"column":48}},{"start":{"line":256,"column":52},"end":{"line":256,"column":67}}]},"4":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":8}},{"start":{"line":261,"column":8},"end":{"line":261,"column":8}}]},"5":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":12},"end":{"line":261,"column":29}},{"start":{"line":261,"column":33},"end":{"line":261,"column":53}}]},"6":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":24},"end":{"line":263,"column":33}},{"start":{"line":263,"column":37},"end":{"line":263,"column":52}}]},"7":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":12},"end":{"line":267,"column":12}},{"start":{"line":267,"column":12},"end":{"line":267,"column":12}}]},"8":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":12},"end":{"line":271,"column":12}},{"start":{"line":271,"column":12},"end":{"line":271,"column":12}}]},"9":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":16},"end":{"line":272,"column":16}},{"start":{"line":272,"column":16},"end":{"line":272,"column":16}}]},"10":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":16},"end":{"line":278,"column":16}},{"start":{"line":278,"column":16},"end":{"line":278,"column":16}}]},"11":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":8},"end":{"line":363,"column":8}},{"start":{"line":363,"column":8},"end":{"line":363,"column":8}}]},"12":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":8},"end":{"line":468,"column":8}},{"start":{"line":468,"column":8},"end":{"line":468,"column":8}}]},"13":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":18},"end":{"line":469,"column":21}},{"start":{"line":469,"column":25},"end":{"line":469,"column":29}}]},"14":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":12},"end":{"line":471,"column":12}},{"start":{"line":471,"column":12},"end":{"line":471,"column":12}}]},"15":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":12},"end":{"line":475,"column":12}},{"start":{"line":475,"column":12},"end":{"line":475,"column":12}}]},"16":{"line":475,"type":"binary-expr","locations":[{"start":{"line":475,"column":17},"end":{"line":475,"column":29}},{"start":{"line":475,"column":33},"end":{"line":475,"column":46}},{"start":{"line":476,"column":17},"end":{"line":476,"column":29}},{"start":{"line":476,"column":33},"end":{"line":476,"column":45}}]},"17":{"line":511,"type":"binary-expr","locations":[{"start":{"line":511,"column":34},"end":{"line":511,"column":37}},{"start":{"line":511,"column":41},"end":{"line":511,"column":68}}]},"18":{"line":512,"type":"binary-expr","locations":[{"start":{"line":512,"column":34},"end":{"line":512,"column":37}},{"start":{"line":512,"column":41},"end":{"line":512,"column":66}}]},"19":{"line":520,"type":"cond-expr","locations":[{"start":{"line":521,"column":32},"end":{"line":521,"column":41}},{"start":{"line":521,"column":44},"end":{"line":521,"column":61}}]},"20":{"line":522,"type":"cond-expr","locations":[{"start":{"line":523,"column":28},"end":{"line":523,"column":55}},{"start":{"line":523,"column":59},"end":{"line":523,"column":70}}]},"21":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":8},"end":{"line":539,"column":8}},{"start":{"line":539,"column":8},"end":{"line":539,"column":8}}]},"22":{"line":539,"type":"binary-expr","locations":[{"start":{"line":539,"column":12},"end":{"line":539,"column":28}},{"start":{"line":539,"column":32},"end":{"line":539,"column":49}},{"start":{"line":539,"column":53},"end":{"line":539,"column":73}}]},"23":{"line":566,"type":"cond-expr","locations":[{"start":{"line":566,"column":36},"end":{"line":566,"column":44}},{"start":{"line":566,"column":47},"end":{"line":566,"column":49}}]},"24":{"line":577,"type":"cond-expr","locations":[{"start":{"line":578,"column":28},"end":{"line":578,"column":29}},{"start":{"line":579,"column":28},"end":{"line":579,"column":58}}]},"25":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":8},"end":{"line":618,"column":8}},{"start":{"line":618,"column":8},"end":{"line":618,"column":8}}]},"26":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":12},"end":{"line":622,"column":12}},{"start":{"line":622,"column":12},"end":{"line":622,"column":12}}]},"27":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":16},"end":{"line":623,"column":16}},{"start":{"line":623,"column":16},"end":{"line":623,"column":16}}]},"28":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":20},"end":{"line":634,"column":20}},{"start":{"line":634,"column":20},"end":{"line":634,"column":20}}]},"29":{"line":657,"type":"cond-expr","locations":[{"start":{"line":658,"column":12},"end":{"line":660,"column":36}},{"start":{"line":661,"column":12},"end":{"line":661,"column":13}}]},"30":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":8},"end":{"line":671,"column":8}},{"start":{"line":671,"column":8},"end":{"line":671,"column":8}}]},"31":{"line":687,"type":"binary-expr","locations":[{"start":{"line":687,"column":15},"end":{"line":687,"column":33}},{"start":{"line":687,"column":37},"end":{"line":687,"column":54}},{"start":{"line":687,"column":58},"end":{"line":687,"column":78}}]},"32":{"line":737,"type":"binary-expr","locations":[{"start":{"line":737,"column":15},"end":{"line":737,"column":16}},{"start":{"line":737,"column":20},"end":{"line":737,"column":43}}]},"33":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":8},"end":{"line":751,"column":8}},{"start":{"line":751,"column":8},"end":{"line":751,"column":8}}]},"34":{"line":755,"type":"cond-expr","locations":[{"start":{"line":755,"column":45},"end":{"line":755,"column":46}},{"start":{"line":755,"column":49},"end":{"line":755,"column":53}}]},"35":{"line":755,"type":"binary-expr","locations":[{"start":{"line":755,"column":16},"end":{"line":755,"column":26}},{"start":{"line":755,"column":30},"end":{"line":755,"column":41}}]},"36":{"line":768,"type":"cond-expr","locations":[{"start":{"line":769,"column":12},"end":{"line":769,"column":46}},{"start":{"line":769,"column":49},"end":{"line":769,"column":53}}]},"37":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":8},"end":{"line":786,"column":8}},{"start":{"line":786,"column":8},"end":{"line":786,"column":8}}]},"38":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":8},"end":{"line":808,"column":8}},{"start":{"line":808,"column":8},"end":{"line":808,"column":8}}]},"39":{"line":808,"type":"binary-expr","locations":[{"start":{"line":808,"column":12},"end":{"line":808,"column":22}},{"start":{"line":808,"column":26},"end":{"line":808,"column":36}}]},"40":{"line":838,"type":"cond-expr","locations":[{"start":{"line":838,"column":37},"end":{"line":838,"column":64}},{"start":{"line":838,"column":67},"end":{"line":838,"column":71}}]},"41":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":8},"end":{"line":843,"column":8}},{"start":{"line":843,"column":8},"end":{"line":843,"column":8}}]},"42":{"line":843,"type":"binary-expr","locations":[{"start":{"line":843,"column":13},"end":{"line":843,"column":18}},{"start":{"line":843,"column":22},"end":{"line":843,"column":36}},{"start":{"line":843,"column":41},"end":{"line":843,"column":69}}]},"43":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":8},"end":{"line":847,"column":8}},{"start":{"line":847,"column":8},"end":{"line":847,"column":8}}]},"44":{"line":847,"type":"binary-expr","locations":[{"start":{"line":847,"column":13},"end":{"line":847,"column":18}},{"start":{"line":847,"column":22},"end":{"line":847,"column":36}},{"start":{"line":847,"column":41},"end":{"line":847,"column":69}}]},"45":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":8},"end":{"line":851,"column":8}},{"start":{"line":851,"column":8},"end":{"line":851,"column":8}}]},"46":{"line":851,"type":"binary-expr","locations":[{"start":{"line":851,"column":13},"end":{"line":851,"column":18}},{"start":{"line":851,"column":22},"end":{"line":851,"column":36}},{"start":{"line":851,"column":41},"end":{"line":851,"column":69}}]},"47":{"line":866,"type":"if","locations":[{"start":{"line":866,"column":8},"end":{"line":866,"column":8}},{"start":{"line":866,"column":8},"end":{"line":866,"column":8}}]},"48":{"line":870,"type":"if","locations":[{"start":{"line":870,"column":8},"end":{"line":870,"column":8}},{"start":{"line":870,"column":8},"end":{"line":870,"column":8}}]},"49":{"line":872,"type":"if","locations":[{"start":{"line":872,"column":15},"end":{"line":872,"column":15}},{"start":{"line":872,"column":15},"end":{"line":872,"column":15}}]},"50":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":8},"end":{"line":887,"column":8}},{"start":{"line":887,"column":8},"end":{"line":887,"column":8}}]},"51":{"line":927,"type":"cond-expr","locations":[{"start":{"line":927,"column":25},"end":{"line":927,"column":35}},{"start":{"line":927,"column":38},"end":{"line":927,"column":51}}]},"52":{"line":928,"type":"cond-expr","locations":[{"start":{"line":928,"column":46},"end":{"line":928,"column":54}},{"start":{"line":928,"column":57},"end":{"line":928,"column":67}}]},"53":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":8},"end":{"line":932,"column":8}},{"start":{"line":932,"column":8},"end":{"line":932,"column":8}}]},"54":{"line":936,"type":"cond-expr","locations":[{"start":{"line":936,"column":30},"end":{"line":936,"column":60}},{"start":{"line":936,"column":62},"end":{"line":936,"column":78}}]},"55":{"line":960,"type":"if","locations":[{"start":{"line":960,"column":8},"end":{"line":960,"column":8}},{"start":{"line":960,"column":8},"end":{"line":960,"column":8}}]},"56":{"line":977,"type":"if","locations":[{"start":{"line":977,"column":8},"end":{"line":977,"column":8}},{"start":{"line":977,"column":8},"end":{"line":977,"column":8}}]},"57":{"line":977,"type":"binary-expr","locations":[{"start":{"line":977,"column":12},"end":{"line":977,"column":31}},{"start":{"line":977,"column":35},"end":{"line":977,"column":56}}]},"58":{"line":1014,"type":"if","locations":[{"start":{"line":1014,"column":8},"end":{"line":1014,"column":8}},{"start":{"line":1014,"column":8},"end":{"line":1014,"column":8}}]},"59":{"line":1342,"type":"binary-expr","locations":[{"start":{"line":1342,"column":20},"end":{"line":1342,"column":37}},{"start":{"line":1342,"column":41},"end":{"line":1342,"column":45}}]}},"code":["(function () { YUI.add('console', function (Y, NAME) {","","/**"," * Console creates a visualization for messages logged through calls to a YUI"," * instance's <code>Y.log( message, category, source )</code> method.  The"," * debug versions of YUI modules will include logging statements to offer some"," * insight into the steps executed during that module's operation.  Including"," * log statements in your code will cause those messages to also appear in the"," * Console.  Use Console to aid in developing your page or application."," *"," * Entry categories &quot;info&quot;, &quot;warn&quot;, and &quot;error&quot;"," * are also referred to as the log level, and entries are filtered against the"," * configured logLevel."," *"," * @module console"," */","var getCN = Y.ClassNameManager.getClassName,","    CHECKED        = 'checked',","    CLEAR          = 'clear',","    CLICK          = 'click',","    COLLAPSED      = 'collapsed',","    CONSOLE        = 'console',","    CONTENT_BOX    = 'contentBox',","    DISABLED       = 'disabled',","    ENTRY          = 'entry',","    ERROR          = 'error',","    HEIGHT         = 'height',","    INFO           = 'info',","    LAST_TIME      = 'lastTime',","    PAUSE          = 'pause',","    PAUSED         = 'paused',","    RESET          = 'reset',","    START_TIME     = 'startTime',","    TITLE          = 'title',","    WARN           = 'warn',","","    DOT = '.',","","    C_BUTTON           = getCN(CONSOLE,'button'),","    C_CHECKBOX         = getCN(CONSOLE,'checkbox'),","    C_CLEAR            = getCN(CONSOLE,CLEAR),","    C_COLLAPSE         = getCN(CONSOLE,'collapse'),","    C_COLLAPSED        = getCN(CONSOLE,COLLAPSED),","    C_CONSOLE_CONTROLS = getCN(CONSOLE,'controls'),","    C_CONSOLE_HD       = getCN(CONSOLE,'hd'),","    C_CONSOLE_BD       = getCN(CONSOLE,'bd'),","    C_CONSOLE_FT       = getCN(CONSOLE,'ft'),","    C_CONSOLE_TITLE    = getCN(CONSOLE,TITLE),","    C_ENTRY            = getCN(CONSOLE,ENTRY),","    C_ENTRY_CAT        = getCN(CONSOLE,ENTRY,'cat'),","    C_ENTRY_CONTENT    = getCN(CONSOLE,ENTRY,'content'),","    C_ENTRY_META       = getCN(CONSOLE,ENTRY,'meta'),","    C_ENTRY_SRC        = getCN(CONSOLE,ENTRY,'src'),","    C_ENTRY_TIME       = getCN(CONSOLE,ENTRY,'time'),","    C_PAUSE            = getCN(CONSOLE,PAUSE),","    C_PAUSE_LABEL      = getCN(CONSOLE,PAUSE,'label'),","","    RE_INLINE_SOURCE = /^(\\S+)\\s/,","    RE_AMP = /&(?!#?[a-z0-9]+;)/g,","    RE_GT  = />/g,","    RE_LT  = /</g,","","    ESC_AMP = '&#38;',","    ESC_GT  = '&#62;',","    ESC_LT  = '&#60;',","","    ENTRY_TEMPLATE_STR =","        '<div class=\"{entry_class} {cat_class} {src_class}\">'+","            '<p class=\"{entry_meta_class}\">'+","                '<span class=\"{entry_src_class}\">'+","                    '{sourceAndDetail}'+","                '</span>'+","                '<span class=\"{entry_cat_class}\">'+","                    '{category}</span>'+","                '<span class=\"{entry_time_class}\">'+","                    ' {totalTime}ms (+{elapsedTime}) {localTime}'+","                '</span>'+","            '</p>'+","            '<pre class=\"{entry_content_class}\">{message}</pre>'+","        '</div>',","","    L = Y.Lang,","    create     = Y.Node.create,","    isNumber   = L.isNumber,","    isString   = L.isString,","    merge      = Y.merge,","    substitute = Y.Lang.sub;","","/**","A basic console that displays messages logged throughout your application.","","@class Console","@constructor","@extends Widget","@param [config] {Object} Object literal specifying widget configuration properties.","**/","function Console() {","    Console.superclass.constructor.apply(this,arguments);","}","","Y.Console = Y.extend(Console, Y.Widget,","","// Y.Console prototype","{","    /**","     * Category to prefix all event subscriptions to allow for ease of detach","     * during destroy.","     *","     * @property _evtCat","     * @type string","     * @protected","     */","    _evtCat : null,","","    /**","     * Reference to the Node instance containing the header contents.","     *","     * @property _head","     * @type Node","     * @default null","     * @protected","     */","    _head    : null,","","    /**","     * Reference to the Node instance that will house the console messages.","     *","     * @property _body","     * @type Node","     * @default null","     * @protected","     */","    _body    : null,","","    /**","     * Reference to the Node instance containing the footer contents.","     *","     * @property _foot","     * @type Node","     * @default null","     * @protected","     */","    _foot    : null,","","    /**","     * Holds the object API returned from <code>Y.later</code> for the print","     * loop interval.","     *","     * @property _printLoop","     * @type Object","     * @default null","     * @protected","     */","    _printLoop : null,","","    /**","     * Array of normalized message objects awaiting printing.","     *","     * @property buffer","     * @type Array","     * @default null","     * @protected","     */","    buffer   : null,","","    /**","     * Wrapper for <code>Y.log</code>.","     *","     * @method log","     * @param arg* {MIXED} (all arguments passed through to <code>Y.log</code>)","     * @chainable","     */","    log : function () {","        Y.log.apply(Y,arguments);","","        return this;","    },","","    /**","     * Clear the console of messages and flush the buffer of pending messages.","     *","     * @method clearConsole","     * @chainable","     */","    clearConsole : function () {","        // TODO: clear event listeners from console contents","        this._body.empty();","","        this._cancelPrintLoop();","","        this.buffer = [];","","        return this;","    },","","    /**","     * Clears the console and resets internal timers.","     *","     * @method reset","     * @chainable","     */","    reset : function () {","        this.fire(RESET);","","        return this;","    },","","    /**","     * Collapses the body and footer.","     *","     * @method collapse","     * @chainable","     */","    collapse : function () {","        this.set(COLLAPSED, true);","","        return this;","    },","","    /**","     * Expands the body and footer if collapsed.","     *","     * @method expand","     * @chainable","     */","    expand : function () {","        this.set(COLLAPSED, false);","","        return this;","    },","","    /**","     * Outputs buffered messages to the console UI.  This is typically called","     * from a scheduled interval until the buffer is empty (referred to as the","     * print loop).  The number of buffered messages output to the Console is","     * limited to the number provided as an argument.  If no limit is passed,","     * all buffered messages are rendered.","     *","     * @method printBuffer","     * @param limit {Number} (optional) max number of buffered entries to write","     * @chainable","     */","    printBuffer: function (limit) {","        var messages    = this.buffer,","            debug       = Y.config.debug,","            entries     = [],","            consoleLimit= this.get('consoleLimit'),","            newestOnTop = this.get('newestOnTop'),","            anchor      = newestOnTop ? this._body.get('firstChild') : null,","            i;","","        if (messages.length > consoleLimit) {","            messages.splice(0, messages.length - consoleLimit);","        }","","        limit = Math.min(messages.length, (limit || messages.length));","","        // turn off logging system","        Y.config.debug = false;","","        if (!this.get(PAUSED) && this.get('rendered')) {","","            for (i = 0; i < limit && messages.length; ++i) {","                entries[i] = this._createEntryHTML(messages.shift());","            }","","            if (!messages.length) {","                this._cancelPrintLoop();","            }","","            if (entries.length) {","                if (newestOnTop) {","                    entries.reverse();","                }","","                this._body.insertBefore(create(entries.join('')), anchor);","","                if (this.get('scrollIntoView')) {","                    this.scrollToLatest();","                }","","                this._trimOldEntries();","            }","        }","","        // restore logging system","        Y.config.debug = debug;","","        return this;","    },","","","    /**","     * Constructor code.  Set up the buffer and entry template, publish","     * internal events, and subscribe to the configured logEvent.","     *","     * @method initializer","     * @protected","     */","    initializer : function () {","        this._evtCat = Y.stamp(this) + '|';","","        this.buffer = [];","","        this.get('logSource').on(this._evtCat +","            this.get('logEvent'),Y.bind(\"_onLogEvent\",this));","","        /**","         * Transfers a received message to the print loop buffer.  Default","         * behavior defined in _defEntryFn.","         *","         * @event entry","         * @param event {Event.Facade} An Event Facade object with the following attribute specific properties added:","         *  <dl>","         *      <dt>message</dt>","         *          <dd>The message data normalized into an object literal (see _normalizeMessage)</dd>","         *  </dl>","         * @preventable _defEntryFn","         */","        this.publish(ENTRY, { defaultFn: this._defEntryFn });","","        /**","         * Triggers the reset behavior via the default logic in _defResetFn.","         *","         * @event reset","         * @param event {Event.Facade} Event Facade object","         * @preventable _defResetFn","         */","        this.publish(RESET, { defaultFn: this._defResetFn });","","        this.after('rendered', this._schedulePrint);","    },","","    /**","     * Tears down the instance, flushing event subscriptions and purging the UI.","     *","     * @method destructor","     * @protected","     */","    destructor : function () {","        var bb = this.get('boundingBox');","","        this._cancelPrintLoop();","","        this.get('logSource').detach(this._evtCat + '*');","","        bb.purge(true);","    },","","    /**","     * Generate the Console UI.","     *","     * @method renderUI","     * @protected","     */","    renderUI : function () {","        this._initHead();","        this._initBody();","        this._initFoot();","","        // Apply positioning to the bounding box if appropriate","        var style = this.get('style');","        if (style !== 'block') {","            this.get('boundingBox').addClass(this.getClassName(style));","        }","    },","","    /**","     * Sync the UI state to the current attribute state.","     *","     * @method syncUI","     */","    syncUI : function () {","        this._uiUpdatePaused(this.get(PAUSED));","        this._uiUpdateCollapsed(this.get(COLLAPSED));","        this._uiSetHeight(this.get(HEIGHT));","    },","","    /**","     * Set up event listeners to wire up the UI to the internal state.","     *","     * @method bindUI","     * @protected","     */","    bindUI : function () {","        this.get(CONTENT_BOX).one('button.'+C_COLLAPSE).","            on(CLICK,this._onCollapseClick,this);","","        this.get(CONTENT_BOX).one('input[type=checkbox].'+C_PAUSE).","            on(CLICK,this._onPauseClick,this);","","        this.get(CONTENT_BOX).one('button.'+C_CLEAR).","            on(CLICK,this._onClearClick,this);","","        // Attribute changes","        this.after(this._evtCat + 'stringsChange',","            this._afterStringsChange);","        this.after(this._evtCat + 'pausedChange',","            this._afterPausedChange);","        this.after(this._evtCat + 'consoleLimitChange',","            this._afterConsoleLimitChange);","        this.after(this._evtCat + 'collapsedChange',","            this._afterCollapsedChange);","    },","","","    /**","     * Create the DOM structure for the header elements.","     *","     * @method _initHead","     * @protected","     */","    _initHead : function () {","        var cb   = this.get(CONTENT_BOX),","            info = merge(Console.CHROME_CLASSES, {","                        str_collapse : this.get('strings.collapse'),","                        str_title : this.get('strings.title')","                    });","","        this._head = create(substitute(Console.HEADER_TEMPLATE,info));","","        cb.insertBefore(this._head,cb.get('firstChild'));","    },","","    /**","     * Create the DOM structure for the console body&#8212;where messages are","     * rendered.","     *","     * @method _initBody","     * @protected","     */","    _initBody : function () {","        this._body = create(substitute(","                            Console.BODY_TEMPLATE,","                            Console.CHROME_CLASSES));","","        this.get(CONTENT_BOX).appendChild(this._body);","    },","","    /**","     * Create the DOM structure for the footer elements.","     *","     * @method _initFoot","     * @protected","     */","    _initFoot : function () {","        var info = merge(Console.CHROME_CLASSES, {","                id_guid   : Y.guid(),","                str_pause : this.get('strings.pause'),","                str_clear : this.get('strings.clear')","            });","","        this._foot = create(substitute(Console.FOOTER_TEMPLATE,info));","","        this.get(CONTENT_BOX).appendChild(this._foot);","    },","","    /**","     * Determine if incoming log messages are within the configured logLevel","     * to be buffered for printing.","     *","     * @method _isInLogLevel","     * @protected","     */","    _isInLogLevel : function (e) {","        var cat = e.cat, lvl = this.get('logLevel');","","        if (lvl !== INFO) {","            cat = cat || INFO;","","            if (isString(cat)) {","                cat = cat.toLowerCase();","            }","","            if ((cat === WARN && lvl === ERROR) ||","                (cat === INFO && lvl !== INFO)) {","                return false;","            }","        }","","        return true;","    },","","    /**","     * Create a log entry message from the inputs including the following keys:","     * <ul>","     *     <li>time - this moment</li>","     *     <li>message - leg message</li>","     *     <li>category - logLevel or custom category for the message</li>","     *     <li>source - when provided, the widget or util calling Y.log</li>","     *     <li>sourceAndDetail - same as source but can include instance info</li>","     *     <li>localTime - readable version of time</li>","     *     <li>elapsedTime - ms since last entry</li>","     *     <li>totalTime - ms since Console was instantiated or reset</li>","     * </ul>","     *","     * @method _normalizeMessage","     * @param e {Event} custom event containing the log message","     * @return Object the message object","     * @protected","     */","    _normalizeMessage : function (e) {","","        var msg = e.msg,","            cat = e.cat,","            src = e.src,","","            m = {","                time            : new Date(),","                message         : msg,","                category        : cat || this.get('defaultCategory'),","                sourceAndDetail : src || this.get('defaultSource'),","                source          : null,","                localTime       : null,","                elapsedTime     : null,","                totalTime       : null","            };","","        // Extract m.source \"Foo\" from m.sourceAndDetail \"Foo bar baz\"","        m.source          = RE_INLINE_SOURCE.test(m.sourceAndDetail) ?","                                RegExp.$1 : m.sourceAndDetail;","        m.localTime       = m.time.toLocaleTimeString ?","                            m.time.toLocaleTimeString() : (m.time + '');","        m.elapsedTime     = m.time - this.get(LAST_TIME);","        m.totalTime       = m.time - this.get(START_TIME);","","        this._set(LAST_TIME,m.time);","","        return m;","    },","","    /**","     * Sets an interval for buffered messages to be output to the console.","     *","     * @method _schedulePrint","     * @protected","     */","    _schedulePrint : function () {","        if (!this._printLoop && !this.get(PAUSED) && this.get('rendered')) {","            this._printLoop = Y.later(","                                this.get('printTimeout'),","                                this, this.printBuffer,","                                this.get('printLimit'), true);","        }","    },","","    /**","     * Translates message meta into the markup for a console entry.","     *","     * @method _createEntryHTML","     * @param m {Object} object literal containing normalized message metadata","     * @return String","     * @protected","     */","    _createEntryHTML : function (m) {","        m = merge(","                this._htmlEscapeMessage(m),","                Console.ENTRY_CLASSES,","                {","                    cat_class : this.getClassName(ENTRY,m.category),","                    src_class : this.getClassName(ENTRY,m.source)","                });","","        return this.get('entryTemplate').replace(/\\{(\\w+)\\}/g,","            function (_,token) {","                return token in m ? m[token] : '';","            });","    },","","    /**","     * Scrolls to the most recent entry","     *","     * @method scrollToLatest","     * @chainable","     */","    scrollToLatest : function () {","        var scrollTop = this.get('newestOnTop') ?","                            0 :","                            this._body.get('scrollHeight');","","        this._body.set('scrollTop', scrollTop);","    },","","    /**","     * Performs HTML escaping on strings in the message object.","     *","     * @method _htmlEscapeMessage","     * @param m {Object} the normalized message object","     * @return Object the message object with proper escapement","     * @protected","     */","    _htmlEscapeMessage : function (m) {","        m.message         = this._encodeHTML(m.message);","        m.source          = this._encodeHTML(m.source);","        m.sourceAndDetail = this._encodeHTML(m.sourceAndDetail);","        m.category        = this._encodeHTML(m.category);","","        return m;","    },","","    /**","     * Removes the oldest message entries from the UI to maintain the limit","     * specified in the consoleLimit configuration.","     *","     * @method _trimOldEntries","     * @protected","     */","    _trimOldEntries : function () {","        // Turn off the logging system for the duration of this operation","        // to prevent an infinite loop","        Y.config.debug = false;","","        var bd = this._body,","            limit = this.get('consoleLimit'),","            debug = Y.config.debug,","            entries,e,i,l;","","        if (bd) {","            entries = bd.all(DOT+C_ENTRY);","            l = entries.size() - limit;","","            if (l > 0) {","                if (this.get('newestOnTop')) {","                    i = limit;","                    l = entries.size();","                } else {","                    i = 0;","                }","","                this._body.setStyle('display','none');","","                for (;i < l; ++i) {","                    e = entries.item(i);","                    if (e) {","                        e.remove();","                    }","                }","","                this._body.setStyle('display','');","            }","","        }","","        Y.config.debug = debug;","    },","","    /**","     * Returns the input string with ampersands (&amp;), &lt, and &gt; encoded","     * as HTML entities.","     *","     * @method _encodeHTML","     * @param s {String} the raw string","     * @return String the encoded string","     * @protected","     */","    _encodeHTML : function (s) {","        return isString(s) ?","            s.replace(RE_AMP,ESC_AMP).","              replace(RE_LT, ESC_LT).","              replace(RE_GT, ESC_GT) :","            s;","    },","","    /**","     * Clears the timeout for printing buffered messages.","     *","     * @method _cancelPrintLoop","     * @protected","     */","    _cancelPrintLoop : function () {","        if (this._printLoop) {","            this._printLoop.cancel();","            this._printLoop = null;","        }","    },","","    /**","     * Validates input value for style attribute.  Accepts only values 'inline',","     * 'block', and 'separate'.","     *","     * @method _validateStyle","     * @param style {String} the proposed value","     * @return {Boolean} pass/fail","     * @protected","     */","    _validateStyle : function (style) {","        return style === 'inline' || style === 'block' || style === 'separate';","    },","","    /**","     * Event handler for clicking on the Pause checkbox to update the paused","     * attribute.","     *","     * @method _onPauseClick","     * @param e {Event} DOM event facade for the click event","     * @protected","     */","    _onPauseClick : function (e) {","        this.set(PAUSED,e.target.get(CHECKED));","    },","","    /**","     * Event handler for clicking on the Clear button.  Pass-through to","     * <code>this.clearConsole()</code>.","     *","     * @method _onClearClick","     * @param e {Event} DOM event facade for the click event","     * @protected","     */","    _onClearClick : function (e) {","        this.clearConsole();","    },","","    /**","     * Event handler for clicking on the Collapse/Expand button. Sets the","     * &quot;collapsed&quot; attribute accordingly.","     *","     * @method _onCollapseClick","     * @param e {Event} DOM event facade for the click event","     * @protected","     */","    _onCollapseClick : function (e) {","        this.set(COLLAPSED, !this.get(COLLAPSED));","    },","","","    /**","     * Validator for logSource attribute.","     *","     * @method _validateLogSource","     * @param v {Object} the desired logSource","     * @return {Boolean} true if the input is an object with an <code>on</code>","     *                   method","     * @protected","     */","    _validateLogSource: function (v) {","        return v && Y.Lang.isFunction(v.on);","    },","","    /**","     * Setter method for logLevel attribute.  Acceptable values are","     * &quot;error&quot, &quot;warn&quot, and &quot;info&quot (case","     * insensitive).  Other values are treated as &quot;info&quot;.","     *","     * @method _setLogLevel","     * @param v {String} the desired log level","     * @return String One of Console.LOG_LEVEL_INFO, _WARN, or _ERROR","     * @protected","     */","    _setLogLevel : function (v) {","        if (isString(v)) {","            v = v.toLowerCase();","        }","","        return (v === WARN || v === ERROR) ? v : INFO;","    },","","    /**","     * Getter method for useBrowserConsole attribute.  Just a pass through to","     * the YUI instance configuration setting.","     *","     * @method _getUseBrowserConsole","     * @return {Boolean} or null if logSource is not a YUI instance","     * @protected","     */","    _getUseBrowserConsole: function () {","        var logSource = this.get('logSource');","        return logSource instanceof YUI ?","            logSource.config.useBrowserConsole : null;","    },","","    /**","     * Setter method for useBrowserConsole attributes.  Only functional if the","     * logSource attribute points to a YUI instance.  Passes the value down to","     * the YUI instance.  NOTE: multiple Console instances cannot maintain","     * independent useBrowserConsole values, since it is just a pass through to","     * the YUI instance configuration.","     *","     * @method _setUseBrowserConsole","     * @param v {Boolean} false to disable browser console printing (default)","     * @return {Boolean} true|false if logSource is a YUI instance","     * @protected","     */","    _setUseBrowserConsole: function (v) {","        var logSource = this.get('logSource');","        if (logSource instanceof YUI) {","            v = !!v;","            logSource.config.useBrowserConsole = v;","            return v;","        } else {","            return Y.Attribute.INVALID_VALUE;","        }","    },","","    /**","     * Set the height of the Console container.  Set the body height to the","     * difference between the configured height and the calculated heights of","     * the header and footer.","     * Overrides Widget.prototype._uiSetHeight.","     *","     * @method _uiSetHeight","     * @param v {String|Number} the new height","     * @protected","     */","    _uiSetHeight : function (v) {","        Console.superclass._uiSetHeight.apply(this,arguments);","","        if (this._head && this._foot) {","            var h = this.get('boundingBox').get('offsetHeight') -","                    this._head.get('offsetHeight') -","                    this._foot.get('offsetHeight');","","            this._body.setStyle(HEIGHT,h+'px');","        }","    },","","    /**","     * Over-ride default content box sizing to do nothing, since we're sizing","     * the body section to fill out height ourselves.","     *","     * @method _uiSizeCB","     * @protected","     */","    _uiSizeCB : function() {","        // Do Nothing. Ideally want to move to Widget-StdMod, which accounts for","        // _uiSizeCB","    },","","    /**","     * Updates the UI if changes are made to any of the strings in the strings","     * attribute.","     *","     * @method _afterStringsChange","     * @param e {Event} Custom event for the attribute change","     * @protected","     */","    _afterStringsChange : function (e) {","        var prop   = e.subAttrName ? e.subAttrName.split(DOT)[1] : null,","            cb     = this.get(CONTENT_BOX),","            before = e.prevVal,","            after  = e.newVal;","","        if ((!prop || prop === TITLE) && before.title !== after.title) {","            cb.all(DOT+C_CONSOLE_TITLE).setHTML(after.title);","        }","","        if ((!prop || prop === PAUSE) && before.pause !== after.pause) {","            cb.all(DOT+C_PAUSE_LABEL).setHTML(after.pause);","        }","","        if ((!prop || prop === CLEAR) && before.clear !== after.clear) {","            cb.all(DOT+C_CLEAR).set('value',after.clear);","        }","    },","","    /**","     * Updates the UI and schedules or cancels the print loop.","     *","     * @method _afterPausedChange","     * @param e {Event} Custom event for the attribute change","     * @protected","     */","    _afterPausedChange : function (e) {","        var paused = e.newVal;","","        if (e.src !== Y.Widget.SRC_UI) {","            this._uiUpdatePaused(paused);","        }","","        if (!paused) {","            this._schedulePrint();","        } else if (this._printLoop) {","            this._cancelPrintLoop();","        }","    },","","    /**","     * Checks or unchecks the paused checkbox","     *","     * @method _uiUpdatePaused","     * @param on {Boolean} the new checked state","     * @protected","     */","    _uiUpdatePaused : function (on) {","        var node = this._foot.all('input[type=checkbox].'+C_PAUSE);","","        if (node) {","            node.set(CHECKED,on);","        }","    },","","    /**","     * Calls this._trimOldEntries() in response to changes in the configured","     * consoleLimit attribute.","     *","     * @method _afterConsoleLimitChange","     * @param e {Event} Custom event for the attribute change","     * @protected","     */","    _afterConsoleLimitChange : function () {","        this._trimOldEntries();","    },","","","    /**","     * Updates the className of the contentBox, which should trigger CSS to","     * hide or show the body and footer sections depending on the new value.","     *","     * @method _afterCollapsedChange","     * @param e {Event} Custom event for the attribute change","     * @protected","     */","    _afterCollapsedChange : function (e) {","        this._uiUpdateCollapsed(e.newVal);","    },","","    /**","     * Updates the UI to reflect the new Collapsed state","     *","     * @method _uiUpdateCollapsed","     * @param v {Boolean} true for collapsed, false for expanded","     * @protected","     */","    _uiUpdateCollapsed : function (v) {","        var bb     = this.get('boundingBox'),","            button = bb.all('button.'+C_COLLAPSE),","            method = v ? 'addClass' : 'removeClass',","            str    = this.get('strings.'+(v ? 'expand' : 'collapse'));","","        bb[method](C_COLLAPSED);","","        if (button) {","            button.setHTML(str);","        }","","        this._uiSetHeight(v ? this._head.get('offsetHeight'): this.get(HEIGHT));","    },","","    /**","     * Makes adjustments to the UI if needed when the Console is hidden or shown","     *","     * @method _afterVisibleChange","     * @param e {Event} the visibleChange event","     * @protected","     */","    _afterVisibleChange : function (e) {","        Console.superclass._afterVisibleChange.apply(this,arguments);","","        this._uiUpdateFromHideShow(e.newVal);","    },","","    /**","     * Recalculates dimensions and updates appropriately when shown","     *","     * @method _uiUpdateFromHideShow","     * @param v {Boolean} true for visible, false for hidden","     * @protected","     */","    _uiUpdateFromHideShow : function (v) {","        if (v) {","            this._uiSetHeight(this.get(HEIGHT));","        }","    },","","    /**","     * Responds to log events by normalizing qualifying messages and passing","     * them along through the entry event for buffering etc.","     *","     * @method _onLogEvent","     * @param msg {String} the log message","     * @param cat {String} OPTIONAL the category or logLevel of the message","     * @param src {String} OPTIONAL the source of the message (e.g. widget name)","     * @protected","     */","    _onLogEvent : function (e) {","","        if (!this.get(DISABLED) && this._isInLogLevel(e)) {","","            var debug = Y.config.debug;","","            /* TODO: needed? */","            Y.config.debug = false;","","            this.fire(ENTRY, {","                message : this._normalizeMessage(e)","            });","","            Y.config.debug = debug;","        }","    },","","    /**","     * Clears the console, resets the startTime attribute, enables and","     * unpauses the widget.","     *","     * @method _defResetFn","     * @protected","     */","    _defResetFn : function () {","        this.clearConsole();","        this.set(START_TIME,new Date());","        this.set(DISABLED,false);","        this.set(PAUSED,false);","    },","","    /**","     * Buffers incoming message objects and schedules the printing.","     *","     * @method _defEntryFn","     * @param e {Event} The Custom event carrying the message in its payload","     * @protected","     */","    _defEntryFn : function (e) {","        if (e.message) {","            this.buffer.push(e.message);","            this._schedulePrint();","        }","    }","","},","","// Y.Console static properties","{","    /**","     * The identity of the widget.","     *","     * @property NAME","     * @type String","     * @static","     */","    NAME : CONSOLE,","","    /**","     * Static identifier for logLevel configuration setting to allow all","     * incoming messages to generate Console entries.","     *","     * @property LOG_LEVEL_INFO","     * @type String","     * @static","     */","    LOG_LEVEL_INFO  : INFO,","","    /**","     * Static identifier for logLevel configuration setting to allow only","     * incoming messages of logLevel &quot;warn&quot; or &quot;error&quot;","     * to generate Console entries.","     *","     * @property LOG_LEVEL_WARN","     * @type String","     * @static","     */","    LOG_LEVEL_WARN  : WARN,","","    /**","     * Static identifier for logLevel configuration setting to allow only","     * incoming messages of logLevel &quot;error&quot; to generate","     * Console entries.","     *","     * @property LOG_LEVEL_ERROR","     * @type String","     * @static","     */","    LOG_LEVEL_ERROR : ERROR,","","    /**","     * Map (object) of classNames used to populate the placeholders in the","     * Console.ENTRY_TEMPLATE markup when rendering a new Console entry.","     *","     * <p>By default, the keys contained in the object are:</p>","     * <ul>","     *    <li>entry_class</li>","     *    <li>entry_meta_class</li>","     *    <li>entry_cat_class</li>","     *    <li>entry_src_class</li>","     *    <li>entry_time_class</li>","     *    <li>entry_content_class</li>","     * </ul>","     *","     * @property ENTRY_CLASSES","     * @type Object","     * @static","     */","    ENTRY_CLASSES   : {","        entry_class         : C_ENTRY,","        entry_meta_class    : C_ENTRY_META,","        entry_cat_class     : C_ENTRY_CAT,","        entry_src_class     : C_ENTRY_SRC,","        entry_time_class    : C_ENTRY_TIME,","        entry_content_class : C_ENTRY_CONTENT","    },","","    /**","     * Map (object) of classNames used to populate the placeholders in the","     * Console.HEADER_TEMPLATE, Console.BODY_TEMPLATE, and","     * Console.FOOTER_TEMPLATE markup when rendering the Console UI.","     *","     * <p>By default, the keys contained in the object are:</p>","     * <ul>","     *   <li>console_hd_class</li>","     *   <li>console_bd_class</li>","     *   <li>console_ft_class</li>","     *   <li>console_controls_class</li>","     *   <li>console_checkbox_class</li>","     *   <li>console_pause_class</li>","     *   <li>console_pause_label_class</li>","     *   <li>console_button_class</li>","     *   <li>console_clear_class</li>","     *   <li>console_collapse_class</li>","     *   <li>console_title_class</li>","     * </ul>","     *","     * @property CHROME_CLASSES","     * @type Object","     * @static","     */","    CHROME_CLASSES  : {","        console_hd_class       : C_CONSOLE_HD,","        console_bd_class       : C_CONSOLE_BD,","        console_ft_class       : C_CONSOLE_FT,","        console_controls_class : C_CONSOLE_CONTROLS,","        console_checkbox_class : C_CHECKBOX,","        console_pause_class    : C_PAUSE,","        console_pause_label_class : C_PAUSE_LABEL,","        console_button_class   : C_BUTTON,","        console_clear_class    : C_CLEAR,","        console_collapse_class : C_COLLAPSE,","        console_title_class    : C_CONSOLE_TITLE","    },","","    /**","     * Markup template used to generate the DOM structure for the header","     * section of the Console when it is rendered.  The template includes","     * these {placeholder}s:","     *","     * <ul>","     *   <li>console_button_class - contributed by Console.CHROME_CLASSES</li>","     *   <li>console_collapse_class - contributed by Console.CHROME_CLASSES</li>","     *   <li>console_hd_class - contributed by Console.CHROME_CLASSES</li>","     *   <li>console_title_class - contributed by Console.CHROME_CLASSES</li>","     *   <li>str_collapse - pulled from attribute strings.collapse</li>","     *   <li>str_title - pulled from attribute strings.title</li>","     * </ul>","     *","     * @property HEADER_TEMPLATE","     * @type String","     * @static","     */","    HEADER_TEMPLATE :","        '<div class=\"{console_hd_class}\">'+","            '<h4 class=\"{console_title_class}\">{str_title}</h4>'+","            '<button type=\"button\" class=\"'+","                '{console_button_class} {console_collapse_class}\">{str_collapse}'+","            '</button>'+","        '</div>',","","    /**","     * Markup template used to generate the DOM structure for the Console body","     * (where the messages are inserted) when it is rendered.  The template","     * includes only the {placeholder} &quot;console_bd_class&quot;, which is","     * constributed by Console.CHROME_CLASSES.","     *","     * @property BODY_TEMPLATE","     * @type String","     * @static","     */","    BODY_TEMPLATE : '<div class=\"{console_bd_class}\"></div>',","","    /**","     * Markup template used to generate the DOM structure for the footer","     * section of the Console when it is rendered.  The template includes","     * many of the {placeholder}s from Console.CHROME_CLASSES as well as:","     *","     * <ul>","     *   <li>id_guid - generated unique id, relates the label and checkbox</li>","     *   <li>str_pause - pulled from attribute strings.pause</li>","     *   <li>str_clear - pulled from attribute strings.clear</li>","     * </ul>","     *","     * @property FOOTER_TEMPLATE","     * @type String","     * @static","     */","    FOOTER_TEMPLATE :","        '<div class=\"{console_ft_class}\">'+","            '<div class=\"{console_controls_class}\">'+","                '<label class=\"{console_pause_label_class}\"><input type=\"checkbox\" class=\"{console_checkbox_class} {console_pause_class}\" value=\"1\" id=\"{id_guid}\"> {str_pause}</label>' +","                '<button type=\"button\" class=\"'+","                    '{console_button_class} {console_clear_class}\">{str_clear}'+","                '</button>'+","            '</div>'+","        '</div>',","","    /**","     * Default markup template used to create the DOM structure for Console","     * entries. The markup contains {placeholder}s for content and classes","     * that are replaced via Y.Lang.sub.  The default template contains","     * the {placeholder}s identified in Console.ENTRY_CLASSES as well as the","     * following placeholders that will be populated by the log entry data:","     *","     * <ul>","     *   <li>cat_class</li>","     *   <li>src_class</li>","     *   <li>totalTime</li>","     *   <li>elapsedTime</li>","     *   <li>localTime</li>","     *   <li>sourceAndDetail</li>","     *   <li>message</li>","     * </ul>","     *","     * @property ENTRY_TEMPLATE","     * @type String","     * @static","     */","    ENTRY_TEMPLATE : ENTRY_TEMPLATE_STR,","","    /**","     * Static property used to define the default attribute configuration of","     * the Widget.","     *","     * @property ATTRS","     * @Type Object","     * @static","     */","    ATTRS : {","","        /**","         * Name of the custom event that will communicate log messages.","         *","         * @attribute logEvent","         * @type String","         * @default \"yui:log\"","         */","        logEvent : {","            value : 'yui:log',","            writeOnce : true,","            validator : isString","        },","","        /**","         * Object that will emit the log events.  By default the YUI instance.","         * To have a single Console capture events from all YUI instances, set","         * this to the Y.Global object.","         *","         * @attribute logSource","         * @type EventTarget","         * @default Y","         */","        logSource : {","            value : Y,","            writeOnce : true,","            validator : function (v) {","                return this._validateLogSource(v);","            }","        },","","        /**","         * Collection of strings used to label elements in the Console UI.","         * Default collection contains the following name:value pairs:","         *","         * <ul>","         *   <li>title : &quot;Log Console&quot;</li>","         *   <li>pause : &quot;Pause&quot;</li>","         *   <li>clear : &quot;Clear&quot;</li>","         *   <li>collapse : &quot;Collapse&quot;</li>","         *   <li>expand : &quot;Expand&quot;</li>","         * </ul>","         *","         * @attribute strings","         * @type Object","         */","        strings : {","            valueFn: function() { return Y.Intl.get(\"console\"); }","        },","","        /**","         * Boolean to pause the outputting of new messages to the console.","         * When paused, messages will accumulate in the buffer.","         *","         * @attribute paused","         * @type boolean","         * @default false","         */","        paused : {","            value : false,","            validator : L.isBoolean","        },","","        /**","         * If a category is not specified in the Y.log(..) statement, this","         * category will be used. Categories &quot;info&quot;,","         * &quot;warn&quot;, and &quot;error&quot; are also called log level.","         *","         * @attribute defaultCategory","         * @type String","         * @default \"info\"","         */","        defaultCategory : {","            value : INFO,","            validator : isString","        },","","        /**","         * If a source is not specified in the Y.log(..) statement, this","         * source will be used.","         *","         * @attribute defaultSource","         * @type String","         * @default \"global\"","         */","        defaultSource   : {","            value : 'global',","            validator : isString","        },","","        /**","         * Markup template used to create the DOM structure for Console entries.","         *","         * @attribute entryTemplate","         * @type String","         * @default Console.ENTRY_TEMPLATE","         */","        entryTemplate : {","            value : ENTRY_TEMPLATE_STR,","            validator : isString","        },","","        /**","         * Minimum entry log level to render into the Console.  The initial","         * logLevel value for all Console instances defaults from the","         * Y.config.logLevel YUI configuration, or Console.LOG_LEVEL_INFO if","         * that configuration is not set.","         *","         * Possible values are &quot;info&quot;, &quot;warn&quot;,","         * &quot;error&quot; (case insensitive), or their corresponding statics","         * Console.LOG_LEVEL_INFO and so on.","         *","         * @attribute logLevel","         * @type String","         * @default Y.config.logLevel or Console.LOG_LEVEL_INFO","         */","        logLevel : {","            value : Y.config.logLevel || INFO,","            setter : function (v) {","                return this._setLogLevel(v);","            }","        },","","        /**","         * Millisecond timeout between iterations of the print loop, moving","         * entries from the buffer to the UI.","         *","         * @attribute printTimeout","         * @type Number","         * @default 100","         */","        printTimeout : {","            value : 100,","            validator : isNumber","        },","","        /**","         * Maximum number of entries printed in each iteration of the print","         * loop. This is used to prevent excessive logging locking the page UI.","         *","         * @attribute printLimit","         * @type Number","         * @default 50","         */","        printLimit : {","            value : 50,","            validator : isNumber","        },","","        /**","         * Maximum number of Console entries allowed in the Console body at one","         * time.  This is used to keep acquired messages from exploding the","         * DOM tree and impacting page performance.","         *","         * @attribute consoleLimit","         * @type Number","         * @default 300","         */","        consoleLimit : {","            value : 300,","            validator : isNumber","        },","","        /**","         * New entries should display at the top of the Console or the bottom?","         *","         * @attribute newestOnTop","         * @type Boolean","         * @default true","         */","        newestOnTop : {","            value : true","        },","","        /**","         * When new entries are added to the Console UI, should they be","         * scrolled into view?","         *","         * @attribute scrollIntoView","         * @type Boolean","         * @default true","         */","        scrollIntoView : {","            value : true","        },","","        /**","         * The baseline time for this Console instance, used to measure elapsed","         * time from the moment the console module is <code>use</code>d to the","         * moment each new entry is logged (not rendered).","         *","         * This value is reset by the instance method myConsole.reset().","         *","         * @attribute startTime","         * @type Date","         * @default The moment the console module is <code>use</code>d","         */","        startTime : {","            value : new Date()","        },","","        /**","         * The precise time the last entry was logged.  Used to measure elapsed","         * time between log messages.","         *","         * @attribute lastTime","         * @type Date","         * @default The moment the console module is <code>use</code>d","         */","        lastTime : {","            value : new Date(),","            readOnly: true","        },","","        /**","         * Controls the collapsed state of the Console","         *","         * @attribute collapsed","         * @type Boolean","         * @default false","         */","        collapsed : {","            value : false","        },","","        /**","        * String with units, or number, representing the height of the Console,","        * inclusive of header and footer. If a number is provided, the default","        * unit, defined by Widget's DEF_UNIT, property is used.","        *","        * @attribute height","        * @default \"300px\"","        * @type {String | Number}","        */","        height: {","            value: \"300px\"","        },","","        /**","        * String with units, or number, representing the width of the Console.","        * If a number is provided, the default unit, defined by Widget's","        * DEF_UNIT, property is used.","        *","        * @attribute width","        * @default \"300px\"","        * @type {String | Number}","        */","        width: {","            value: \"300px\"","        },","","        /**","         * Pass through to the YUI instance useBrowserConsole configuration.","         * By default this is set to false, which will disable logging to the","         * browser console when a Console instance is created.  If the","         * logSource is not a YUI instance, this has no effect.","         *","         * @attribute useBrowserConsole","         * @type {Boolean}","         * @default false","         */","         useBrowserConsole : {","            lazyAdd: false,","            value: false,","            getter : function () {","                return this._getUseBrowserConsole();","            },","            setter : function (v) {","                return this._setUseBrowserConsole(v);","            }","         },","","         /**","          * Allows the Console to flow in the document.  Available values are","          * 'inline', 'block', and 'separate' (the default).","          *","          * @attribute style","          * @type {String}","          * @default 'separate'","          */","         style : {","            value : 'separate',","            writeOnce : true,","            validator : function (v) {","                return this._validateStyle(v);","            }","         }","    }","","});","","","}, '@VERSION@', {\"requires\": [\"yui-log\", \"widget\"], \"skinnable\": true, \"lang\": [\"en\", \"es\", \"hu\", \"it\", \"ja\"]});","","}());"]};
}
var __cov_8J$sGdr5$xhQeErZZxQfdg = __coverage__['build/console/console.js'];
__cov_8J$sGdr5$xhQeErZZxQfdg.s['1']++;YUI.add('console',function(Y,NAME){__cov_8J$sGdr5$xhQeErZZxQfdg.f['1']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['2']++;var getCN=Y.ClassNameManager.getClassName,CHECKED='checked',CLEAR='clear',CLICK='click',COLLAPSED='collapsed',CONSOLE='console',CONTENT_BOX='contentBox',DISABLED='disabled',ENTRY='entry',ERROR='error',HEIGHT='height',INFO='info',LAST_TIME='lastTime',PAUSE='pause',PAUSED='paused',RESET='reset',START_TIME='startTime',TITLE='title',WARN='warn',DOT='.',C_BUTTON=getCN(CONSOLE,'button'),C_CHECKBOX=getCN(CONSOLE,'checkbox'),C_CLEAR=getCN(CONSOLE,CLEAR),C_COLLAPSE=getCN(CONSOLE,'collapse'),C_COLLAPSED=getCN(CONSOLE,COLLAPSED),C_CONSOLE_CONTROLS=getCN(CONSOLE,'controls'),C_CONSOLE_HD=getCN(CONSOLE,'hd'),C_CONSOLE_BD=getCN(CONSOLE,'bd'),C_CONSOLE_FT=getCN(CONSOLE,'ft'),C_CONSOLE_TITLE=getCN(CONSOLE,TITLE),C_ENTRY=getCN(CONSOLE,ENTRY),C_ENTRY_CAT=getCN(CONSOLE,ENTRY,'cat'),C_ENTRY_CONTENT=getCN(CONSOLE,ENTRY,'content'),C_ENTRY_META=getCN(CONSOLE,ENTRY,'meta'),C_ENTRY_SRC=getCN(CONSOLE,ENTRY,'src'),C_ENTRY_TIME=getCN(CONSOLE,ENTRY,'time'),C_PAUSE=getCN(CONSOLE,PAUSE),C_PAUSE_LABEL=getCN(CONSOLE,PAUSE,'label'),RE_INLINE_SOURCE=/^(\S+)\s/,RE_AMP=/&(?!#?[a-z0-9]+;)/g,RE_GT=/>/g,RE_LT=/</g,ESC_AMP='&#38;',ESC_GT='&#62;',ESC_LT='&#60;',ENTRY_TEMPLATE_STR='<div class="{entry_class} {cat_class} {src_class}">'+'<p class="{entry_meta_class}">'+'<span class="{entry_src_class}">'+'{sourceAndDetail}'+'</span>'+'<span class="{entry_cat_class}">'+'{category}</span>'+'<span class="{entry_time_class}">'+' {totalTime}ms (+{elapsedTime}) {localTime}'+'</span>'+'</p>'+'<pre class="{entry_content_class}">{message}</pre>'+'</div>',L=Y.Lang,create=Y.Node.create,isNumber=L.isNumber,isString=L.isString,merge=Y.merge,substitute=Y.Lang.sub;__cov_8J$sGdr5$xhQeErZZxQfdg.s['3']++;function Console(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['2']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['4']++;Console.superclass.constructor.apply(this,arguments);}__cov_8J$sGdr5$xhQeErZZxQfdg.s['5']++;Y.Console=Y.extend(Console,Y.Widget,{_evtCat:null,_head:null,_body:null,_foot:null,_printLoop:null,buffer:null,log:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['3']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['6']++;Y.log.apply(Y,arguments);__cov_8J$sGdr5$xhQeErZZxQfdg.s['7']++;return this;},clearConsole:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['4']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['8']++;this._body.empty();__cov_8J$sGdr5$xhQeErZZxQfdg.s['9']++;this._cancelPrintLoop();__cov_8J$sGdr5$xhQeErZZxQfdg.s['10']++;this.buffer=[];__cov_8J$sGdr5$xhQeErZZxQfdg.s['11']++;return this;},reset:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['5']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['12']++;this.fire(RESET);__cov_8J$sGdr5$xhQeErZZxQfdg.s['13']++;return this;},collapse:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['6']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['14']++;this.set(COLLAPSED,true);__cov_8J$sGdr5$xhQeErZZxQfdg.s['15']++;return this;},expand:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['7']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['16']++;this.set(COLLAPSED,false);__cov_8J$sGdr5$xhQeErZZxQfdg.s['17']++;return this;},printBuffer:function(limit){__cov_8J$sGdr5$xhQeErZZxQfdg.f['8']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['18']++;var messages=this.buffer,debug=Y.config.debug,entries=[],consoleLimit=this.get('consoleLimit'),newestOnTop=this.get('newestOnTop'),anchor=newestOnTop?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['1'][0]++,this._body.get('firstChild')):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['1'][1]++,null),i;__cov_8J$sGdr5$xhQeErZZxQfdg.s['19']++;if(messages.length>consoleLimit){__cov_8J$sGdr5$xhQeErZZxQfdg.b['2'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['20']++;messages.splice(0,messages.length-consoleLimit);}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['2'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['21']++;limit=Math.min(messages.length,(__cov_8J$sGdr5$xhQeErZZxQfdg.b['3'][0]++,limit)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['3'][1]++,messages.length));__cov_8J$sGdr5$xhQeErZZxQfdg.s['22']++;Y.config.debug=false;__cov_8J$sGdr5$xhQeErZZxQfdg.s['23']++;if((__cov_8J$sGdr5$xhQeErZZxQfdg.b['5'][0]++,!this.get(PAUSED))&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['5'][1]++,this.get('rendered'))){__cov_8J$sGdr5$xhQeErZZxQfdg.b['4'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['24']++;for(i=0;(__cov_8J$sGdr5$xhQeErZZxQfdg.b['6'][0]++,i<limit)&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['6'][1]++,messages.length);++i){__cov_8J$sGdr5$xhQeErZZxQfdg.s['25']++;entries[i]=this._createEntryHTML(messages.shift());}__cov_8J$sGdr5$xhQeErZZxQfdg.s['26']++;if(!messages.length){__cov_8J$sGdr5$xhQeErZZxQfdg.b['7'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['27']++;this._cancelPrintLoop();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['7'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['28']++;if(entries.length){__cov_8J$sGdr5$xhQeErZZxQfdg.b['8'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['29']++;if(newestOnTop){__cov_8J$sGdr5$xhQeErZZxQfdg.b['9'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['30']++;entries.reverse();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['9'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['31']++;this._body.insertBefore(create(entries.join('')),anchor);__cov_8J$sGdr5$xhQeErZZxQfdg.s['32']++;if(this.get('scrollIntoView')){__cov_8J$sGdr5$xhQeErZZxQfdg.b['10'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['33']++;this.scrollToLatest();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['10'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['34']++;this._trimOldEntries();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['8'][1]++;}}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['4'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['35']++;Y.config.debug=debug;__cov_8J$sGdr5$xhQeErZZxQfdg.s['36']++;return this;},initializer:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['9']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['37']++;this._evtCat=Y.stamp(this)+'|';__cov_8J$sGdr5$xhQeErZZxQfdg.s['38']++;this.buffer=[];__cov_8J$sGdr5$xhQeErZZxQfdg.s['39']++;this.get('logSource').on(this._evtCat+this.get('logEvent'),Y.bind('_onLogEvent',this));__cov_8J$sGdr5$xhQeErZZxQfdg.s['40']++;this.publish(ENTRY,{defaultFn:this._defEntryFn});__cov_8J$sGdr5$xhQeErZZxQfdg.s['41']++;this.publish(RESET,{defaultFn:this._defResetFn});__cov_8J$sGdr5$xhQeErZZxQfdg.s['42']++;this.after('rendered',this._schedulePrint);},destructor:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['10']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['43']++;var bb=this.get('boundingBox');__cov_8J$sGdr5$xhQeErZZxQfdg.s['44']++;this._cancelPrintLoop();__cov_8J$sGdr5$xhQeErZZxQfdg.s['45']++;this.get('logSource').detach(this._evtCat+'*');__cov_8J$sGdr5$xhQeErZZxQfdg.s['46']++;bb.purge(true);},renderUI:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['11']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['47']++;this._initHead();__cov_8J$sGdr5$xhQeErZZxQfdg.s['48']++;this._initBody();__cov_8J$sGdr5$xhQeErZZxQfdg.s['49']++;this._initFoot();__cov_8J$sGdr5$xhQeErZZxQfdg.s['50']++;var style=this.get('style');__cov_8J$sGdr5$xhQeErZZxQfdg.s['51']++;if(style!=='block'){__cov_8J$sGdr5$xhQeErZZxQfdg.b['11'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['52']++;this.get('boundingBox').addClass(this.getClassName(style));}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['11'][1]++;}},syncUI:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['12']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['53']++;this._uiUpdatePaused(this.get(PAUSED));__cov_8J$sGdr5$xhQeErZZxQfdg.s['54']++;this._uiUpdateCollapsed(this.get(COLLAPSED));__cov_8J$sGdr5$xhQeErZZxQfdg.s['55']++;this._uiSetHeight(this.get(HEIGHT));},bindUI:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['13']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['56']++;this.get(CONTENT_BOX).one('button.'+C_COLLAPSE).on(CLICK,this._onCollapseClick,this);__cov_8J$sGdr5$xhQeErZZxQfdg.s['57']++;this.get(CONTENT_BOX).one('input[type=checkbox].'+C_PAUSE).on(CLICK,this._onPauseClick,this);__cov_8J$sGdr5$xhQeErZZxQfdg.s['58']++;this.get(CONTENT_BOX).one('button.'+C_CLEAR).on(CLICK,this._onClearClick,this);__cov_8J$sGdr5$xhQeErZZxQfdg.s['59']++;this.after(this._evtCat+'stringsChange',this._afterStringsChange);__cov_8J$sGdr5$xhQeErZZxQfdg.s['60']++;this.after(this._evtCat+'pausedChange',this._afterPausedChange);__cov_8J$sGdr5$xhQeErZZxQfdg.s['61']++;this.after(this._evtCat+'consoleLimitChange',this._afterConsoleLimitChange);__cov_8J$sGdr5$xhQeErZZxQfdg.s['62']++;this.after(this._evtCat+'collapsedChange',this._afterCollapsedChange);},_initHead:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['14']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['63']++;var cb=this.get(CONTENT_BOX),info=merge(Console.CHROME_CLASSES,{str_collapse:this.get('strings.collapse'),str_title:this.get('strings.title')});__cov_8J$sGdr5$xhQeErZZxQfdg.s['64']++;this._head=create(substitute(Console.HEADER_TEMPLATE,info));__cov_8J$sGdr5$xhQeErZZxQfdg.s['65']++;cb.insertBefore(this._head,cb.get('firstChild'));},_initBody:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['15']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['66']++;this._body=create(substitute(Console.BODY_TEMPLATE,Console.CHROME_CLASSES));__cov_8J$sGdr5$xhQeErZZxQfdg.s['67']++;this.get(CONTENT_BOX).appendChild(this._body);},_initFoot:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['16']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['68']++;var info=merge(Console.CHROME_CLASSES,{id_guid:Y.guid(),str_pause:this.get('strings.pause'),str_clear:this.get('strings.clear')});__cov_8J$sGdr5$xhQeErZZxQfdg.s['69']++;this._foot=create(substitute(Console.FOOTER_TEMPLATE,info));__cov_8J$sGdr5$xhQeErZZxQfdg.s['70']++;this.get(CONTENT_BOX).appendChild(this._foot);},_isInLogLevel:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['17']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['71']++;var cat=e.cat,lvl=this.get('logLevel');__cov_8J$sGdr5$xhQeErZZxQfdg.s['72']++;if(lvl!==INFO){__cov_8J$sGdr5$xhQeErZZxQfdg.b['12'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['73']++;cat=(__cov_8J$sGdr5$xhQeErZZxQfdg.b['13'][0]++,cat)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['13'][1]++,INFO);__cov_8J$sGdr5$xhQeErZZxQfdg.s['74']++;if(isString(cat)){__cov_8J$sGdr5$xhQeErZZxQfdg.b['14'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['75']++;cat=cat.toLowerCase();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['14'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['76']++;if((__cov_8J$sGdr5$xhQeErZZxQfdg.b['16'][0]++,cat===WARN)&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['16'][1]++,lvl===ERROR)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['16'][2]++,cat===INFO)&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['16'][3]++,lvl!==INFO)){__cov_8J$sGdr5$xhQeErZZxQfdg.b['15'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['77']++;return false;}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['15'][1]++;}}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['12'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['78']++;return true;},_normalizeMessage:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['18']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['79']++;var msg=e.msg,cat=e.cat,src=e.src,m={time:new Date(),message:msg,category:(__cov_8J$sGdr5$xhQeErZZxQfdg.b['17'][0]++,cat)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['17'][1]++,this.get('defaultCategory')),sourceAndDetail:(__cov_8J$sGdr5$xhQeErZZxQfdg.b['18'][0]++,src)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['18'][1]++,this.get('defaultSource')),source:null,localTime:null,elapsedTime:null,totalTime:null};__cov_8J$sGdr5$xhQeErZZxQfdg.s['80']++;m.source=RE_INLINE_SOURCE.test(m.sourceAndDetail)?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['19'][0]++,RegExp.$1):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['19'][1]++,m.sourceAndDetail);__cov_8J$sGdr5$xhQeErZZxQfdg.s['81']++;m.localTime=m.time.toLocaleTimeString?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['20'][0]++,m.time.toLocaleTimeString()):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['20'][1]++,m.time+'');__cov_8J$sGdr5$xhQeErZZxQfdg.s['82']++;m.elapsedTime=m.time-this.get(LAST_TIME);__cov_8J$sGdr5$xhQeErZZxQfdg.s['83']++;m.totalTime=m.time-this.get(START_TIME);__cov_8J$sGdr5$xhQeErZZxQfdg.s['84']++;this._set(LAST_TIME,m.time);__cov_8J$sGdr5$xhQeErZZxQfdg.s['85']++;return m;},_schedulePrint:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['19']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['86']++;if((__cov_8J$sGdr5$xhQeErZZxQfdg.b['22'][0]++,!this._printLoop)&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['22'][1]++,!this.get(PAUSED))&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['22'][2]++,this.get('rendered'))){__cov_8J$sGdr5$xhQeErZZxQfdg.b['21'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['87']++;this._printLoop=Y.later(this.get('printTimeout'),this,this.printBuffer,this.get('printLimit'),true);}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['21'][1]++;}},_createEntryHTML:function(m){__cov_8J$sGdr5$xhQeErZZxQfdg.f['20']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['88']++;m=merge(this._htmlEscapeMessage(m),Console.ENTRY_CLASSES,{cat_class:this.getClassName(ENTRY,m.category),src_class:this.getClassName(ENTRY,m.source)});__cov_8J$sGdr5$xhQeErZZxQfdg.s['89']++;return this.get('entryTemplate').replace(/\{(\w+)\}/g,function(_,token){__cov_8J$sGdr5$xhQeErZZxQfdg.f['21']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['90']++;return token in m?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['23'][0]++,m[token]):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['23'][1]++,'');});},scrollToLatest:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['22']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['91']++;var scrollTop=this.get('newestOnTop')?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['24'][0]++,0):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['24'][1]++,this._body.get('scrollHeight'));__cov_8J$sGdr5$xhQeErZZxQfdg.s['92']++;this._body.set('scrollTop',scrollTop);},_htmlEscapeMessage:function(m){__cov_8J$sGdr5$xhQeErZZxQfdg.f['23']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['93']++;m.message=this._encodeHTML(m.message);__cov_8J$sGdr5$xhQeErZZxQfdg.s['94']++;m.source=this._encodeHTML(m.source);__cov_8J$sGdr5$xhQeErZZxQfdg.s['95']++;m.sourceAndDetail=this._encodeHTML(m.sourceAndDetail);__cov_8J$sGdr5$xhQeErZZxQfdg.s['96']++;m.category=this._encodeHTML(m.category);__cov_8J$sGdr5$xhQeErZZxQfdg.s['97']++;return m;},_trimOldEntries:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['24']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['98']++;Y.config.debug=false;__cov_8J$sGdr5$xhQeErZZxQfdg.s['99']++;var bd=this._body,limit=this.get('consoleLimit'),debug=Y.config.debug,entries,e,i,l;__cov_8J$sGdr5$xhQeErZZxQfdg.s['100']++;if(bd){__cov_8J$sGdr5$xhQeErZZxQfdg.b['25'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['101']++;entries=bd.all(DOT+C_ENTRY);__cov_8J$sGdr5$xhQeErZZxQfdg.s['102']++;l=entries.size()-limit;__cov_8J$sGdr5$xhQeErZZxQfdg.s['103']++;if(l>0){__cov_8J$sGdr5$xhQeErZZxQfdg.b['26'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['104']++;if(this.get('newestOnTop')){__cov_8J$sGdr5$xhQeErZZxQfdg.b['27'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['105']++;i=limit;__cov_8J$sGdr5$xhQeErZZxQfdg.s['106']++;l=entries.size();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['27'][1]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['107']++;i=0;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['108']++;this._body.setStyle('display','none');__cov_8J$sGdr5$xhQeErZZxQfdg.s['109']++;for(;i<l;++i){__cov_8J$sGdr5$xhQeErZZxQfdg.s['110']++;e=entries.item(i);__cov_8J$sGdr5$xhQeErZZxQfdg.s['111']++;if(e){__cov_8J$sGdr5$xhQeErZZxQfdg.b['28'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['112']++;e.remove();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['28'][1]++;}}__cov_8J$sGdr5$xhQeErZZxQfdg.s['113']++;this._body.setStyle('display','');}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['26'][1]++;}}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['25'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['114']++;Y.config.debug=debug;},_encodeHTML:function(s){__cov_8J$sGdr5$xhQeErZZxQfdg.f['25']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['115']++;return isString(s)?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['29'][0]++,s.replace(RE_AMP,ESC_AMP).replace(RE_LT,ESC_LT).replace(RE_GT,ESC_GT)):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['29'][1]++,s);},_cancelPrintLoop:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['26']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['116']++;if(this._printLoop){__cov_8J$sGdr5$xhQeErZZxQfdg.b['30'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['117']++;this._printLoop.cancel();__cov_8J$sGdr5$xhQeErZZxQfdg.s['118']++;this._printLoop=null;}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['30'][1]++;}},_validateStyle:function(style){__cov_8J$sGdr5$xhQeErZZxQfdg.f['27']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['119']++;return(__cov_8J$sGdr5$xhQeErZZxQfdg.b['31'][0]++,style==='inline')||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['31'][1]++,style==='block')||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['31'][2]++,style==='separate');},_onPauseClick:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['28']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['120']++;this.set(PAUSED,e.target.get(CHECKED));},_onClearClick:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['29']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['121']++;this.clearConsole();},_onCollapseClick:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['30']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['122']++;this.set(COLLAPSED,!this.get(COLLAPSED));},_validateLogSource:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['31']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['123']++;return(__cov_8J$sGdr5$xhQeErZZxQfdg.b['32'][0]++,v)&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['32'][1]++,Y.Lang.isFunction(v.on));},_setLogLevel:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['32']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['124']++;if(isString(v)){__cov_8J$sGdr5$xhQeErZZxQfdg.b['33'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['125']++;v=v.toLowerCase();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['33'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['126']++;return(__cov_8J$sGdr5$xhQeErZZxQfdg.b['35'][0]++,v===WARN)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['35'][1]++,v===ERROR)?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['34'][0]++,v):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['34'][1]++,INFO);},_getUseBrowserConsole:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['33']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['127']++;var logSource=this.get('logSource');__cov_8J$sGdr5$xhQeErZZxQfdg.s['128']++;return logSource instanceof YUI?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['36'][0]++,logSource.config.useBrowserConsole):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['36'][1]++,null);},_setUseBrowserConsole:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['34']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['129']++;var logSource=this.get('logSource');__cov_8J$sGdr5$xhQeErZZxQfdg.s['130']++;if(logSource instanceof YUI){__cov_8J$sGdr5$xhQeErZZxQfdg.b['37'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['131']++;v=!!v;__cov_8J$sGdr5$xhQeErZZxQfdg.s['132']++;logSource.config.useBrowserConsole=v;__cov_8J$sGdr5$xhQeErZZxQfdg.s['133']++;return v;}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['37'][1]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['134']++;return Y.Attribute.INVALID_VALUE;}},_uiSetHeight:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['35']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['135']++;Console.superclass._uiSetHeight.apply(this,arguments);__cov_8J$sGdr5$xhQeErZZxQfdg.s['136']++;if((__cov_8J$sGdr5$xhQeErZZxQfdg.b['39'][0]++,this._head)&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['39'][1]++,this._foot)){__cov_8J$sGdr5$xhQeErZZxQfdg.b['38'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['137']++;var h=this.get('boundingBox').get('offsetHeight')-this._head.get('offsetHeight')-this._foot.get('offsetHeight');__cov_8J$sGdr5$xhQeErZZxQfdg.s['138']++;this._body.setStyle(HEIGHT,h+'px');}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['38'][1]++;}},_uiSizeCB:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['36']++;},_afterStringsChange:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['37']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['139']++;var prop=e.subAttrName?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['40'][0]++,e.subAttrName.split(DOT)[1]):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['40'][1]++,null),cb=this.get(CONTENT_BOX),before=e.prevVal,after=e.newVal;__cov_8J$sGdr5$xhQeErZZxQfdg.s['140']++;if(((__cov_8J$sGdr5$xhQeErZZxQfdg.b['42'][0]++,!prop)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['42'][1]++,prop===TITLE))&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['42'][2]++,before.title!==after.title)){__cov_8J$sGdr5$xhQeErZZxQfdg.b['41'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['141']++;cb.all(DOT+C_CONSOLE_TITLE).setHTML(after.title);}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['41'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['142']++;if(((__cov_8J$sGdr5$xhQeErZZxQfdg.b['44'][0]++,!prop)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['44'][1]++,prop===PAUSE))&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['44'][2]++,before.pause!==after.pause)){__cov_8J$sGdr5$xhQeErZZxQfdg.b['43'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['143']++;cb.all(DOT+C_PAUSE_LABEL).setHTML(after.pause);}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['43'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['144']++;if(((__cov_8J$sGdr5$xhQeErZZxQfdg.b['46'][0]++,!prop)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['46'][1]++,prop===CLEAR))&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['46'][2]++,before.clear!==after.clear)){__cov_8J$sGdr5$xhQeErZZxQfdg.b['45'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['145']++;cb.all(DOT+C_CLEAR).set('value',after.clear);}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['45'][1]++;}},_afterPausedChange:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['38']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['146']++;var paused=e.newVal;__cov_8J$sGdr5$xhQeErZZxQfdg.s['147']++;if(e.src!==Y.Widget.SRC_UI){__cov_8J$sGdr5$xhQeErZZxQfdg.b['47'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['148']++;this._uiUpdatePaused(paused);}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['47'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['149']++;if(!paused){__cov_8J$sGdr5$xhQeErZZxQfdg.b['48'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['150']++;this._schedulePrint();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['48'][1]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['151']++;if(this._printLoop){__cov_8J$sGdr5$xhQeErZZxQfdg.b['49'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['152']++;this._cancelPrintLoop();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['49'][1]++;}}},_uiUpdatePaused:function(on){__cov_8J$sGdr5$xhQeErZZxQfdg.f['39']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['153']++;var node=this._foot.all('input[type=checkbox].'+C_PAUSE);__cov_8J$sGdr5$xhQeErZZxQfdg.s['154']++;if(node){__cov_8J$sGdr5$xhQeErZZxQfdg.b['50'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['155']++;node.set(CHECKED,on);}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['50'][1]++;}},_afterConsoleLimitChange:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['40']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['156']++;this._trimOldEntries();},_afterCollapsedChange:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['41']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['157']++;this._uiUpdateCollapsed(e.newVal);},_uiUpdateCollapsed:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['42']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['158']++;var bb=this.get('boundingBox'),button=bb.all('button.'+C_COLLAPSE),method=v?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['51'][0]++,'addClass'):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['51'][1]++,'removeClass'),str=this.get('strings.'+(v?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['52'][0]++,'expand'):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['52'][1]++,'collapse')));__cov_8J$sGdr5$xhQeErZZxQfdg.s['159']++;bb[method](C_COLLAPSED);__cov_8J$sGdr5$xhQeErZZxQfdg.s['160']++;if(button){__cov_8J$sGdr5$xhQeErZZxQfdg.b['53'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['161']++;button.setHTML(str);}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['53'][1]++;}__cov_8J$sGdr5$xhQeErZZxQfdg.s['162']++;this._uiSetHeight(v?(__cov_8J$sGdr5$xhQeErZZxQfdg.b['54'][0]++,this._head.get('offsetHeight')):(__cov_8J$sGdr5$xhQeErZZxQfdg.b['54'][1]++,this.get(HEIGHT)));},_afterVisibleChange:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['43']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['163']++;Console.superclass._afterVisibleChange.apply(this,arguments);__cov_8J$sGdr5$xhQeErZZxQfdg.s['164']++;this._uiUpdateFromHideShow(e.newVal);},_uiUpdateFromHideShow:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['44']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['165']++;if(v){__cov_8J$sGdr5$xhQeErZZxQfdg.b['55'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['166']++;this._uiSetHeight(this.get(HEIGHT));}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['55'][1]++;}},_onLogEvent:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['45']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['167']++;if((__cov_8J$sGdr5$xhQeErZZxQfdg.b['57'][0]++,!this.get(DISABLED))&&(__cov_8J$sGdr5$xhQeErZZxQfdg.b['57'][1]++,this._isInLogLevel(e))){__cov_8J$sGdr5$xhQeErZZxQfdg.b['56'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['168']++;var debug=Y.config.debug;__cov_8J$sGdr5$xhQeErZZxQfdg.s['169']++;Y.config.debug=false;__cov_8J$sGdr5$xhQeErZZxQfdg.s['170']++;this.fire(ENTRY,{message:this._normalizeMessage(e)});__cov_8J$sGdr5$xhQeErZZxQfdg.s['171']++;Y.config.debug=debug;}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['56'][1]++;}},_defResetFn:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['46']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['172']++;this.clearConsole();__cov_8J$sGdr5$xhQeErZZxQfdg.s['173']++;this.set(START_TIME,new Date());__cov_8J$sGdr5$xhQeErZZxQfdg.s['174']++;this.set(DISABLED,false);__cov_8J$sGdr5$xhQeErZZxQfdg.s['175']++;this.set(PAUSED,false);},_defEntryFn:function(e){__cov_8J$sGdr5$xhQeErZZxQfdg.f['47']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['176']++;if(e.message){__cov_8J$sGdr5$xhQeErZZxQfdg.b['58'][0]++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['177']++;this.buffer.push(e.message);__cov_8J$sGdr5$xhQeErZZxQfdg.s['178']++;this._schedulePrint();}else{__cov_8J$sGdr5$xhQeErZZxQfdg.b['58'][1]++;}}},{NAME:CONSOLE,LOG_LEVEL_INFO:INFO,LOG_LEVEL_WARN:WARN,LOG_LEVEL_ERROR:ERROR,ENTRY_CLASSES:{entry_class:C_ENTRY,entry_meta_class:C_ENTRY_META,entry_cat_class:C_ENTRY_CAT,entry_src_class:C_ENTRY_SRC,entry_time_class:C_ENTRY_TIME,entry_content_class:C_ENTRY_CONTENT},CHROME_CLASSES:{console_hd_class:C_CONSOLE_HD,console_bd_class:C_CONSOLE_BD,console_ft_class:C_CONSOLE_FT,console_controls_class:C_CONSOLE_CONTROLS,console_checkbox_class:C_CHECKBOX,console_pause_class:C_PAUSE,console_pause_label_class:C_PAUSE_LABEL,console_button_class:C_BUTTON,console_clear_class:C_CLEAR,console_collapse_class:C_COLLAPSE,console_title_class:C_CONSOLE_TITLE},HEADER_TEMPLATE:'<div class="{console_hd_class}">'+'<h4 class="{console_title_class}">{str_title}</h4>'+'<button type="button" class="'+'{console_button_class} {console_collapse_class}">{str_collapse}'+'</button>'+'</div>',BODY_TEMPLATE:'<div class="{console_bd_class}"></div>',FOOTER_TEMPLATE:'<div class="{console_ft_class}">'+'<div class="{console_controls_class}">'+'<label class="{console_pause_label_class}"><input type="checkbox" class="{console_checkbox_class} {console_pause_class}" value="1" id="{id_guid}"> {str_pause}</label>'+'<button type="button" class="'+'{console_button_class} {console_clear_class}">{str_clear}'+'</button>'+'</div>'+'</div>',ENTRY_TEMPLATE:ENTRY_TEMPLATE_STR,ATTRS:{logEvent:{value:'yui:log',writeOnce:true,validator:isString},logSource:{value:Y,writeOnce:true,validator:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['48']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['179']++;return this._validateLogSource(v);}},strings:{valueFn:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['49']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['180']++;return Y.Intl.get('console');}},paused:{value:false,validator:L.isBoolean},defaultCategory:{value:INFO,validator:isString},defaultSource:{value:'global',validator:isString},entryTemplate:{value:ENTRY_TEMPLATE_STR,validator:isString},logLevel:{value:(__cov_8J$sGdr5$xhQeErZZxQfdg.b['59'][0]++,Y.config.logLevel)||(__cov_8J$sGdr5$xhQeErZZxQfdg.b['59'][1]++,INFO),setter:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['50']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['181']++;return this._setLogLevel(v);}},printTimeout:{value:100,validator:isNumber},printLimit:{value:50,validator:isNumber},consoleLimit:{value:300,validator:isNumber},newestOnTop:{value:true},scrollIntoView:{value:true},startTime:{value:new Date()},lastTime:{value:new Date(),readOnly:true},collapsed:{value:false},height:{value:'300px'},width:{value:'300px'},useBrowserConsole:{lazyAdd:false,value:false,getter:function(){__cov_8J$sGdr5$xhQeErZZxQfdg.f['51']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['182']++;return this._getUseBrowserConsole();},setter:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['52']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['183']++;return this._setUseBrowserConsole(v);}},style:{value:'separate',writeOnce:true,validator:function(v){__cov_8J$sGdr5$xhQeErZZxQfdg.f['53']++;__cov_8J$sGdr5$xhQeErZZxQfdg.s['184']++;return this._validateStyle(v);}}}});},'@VERSION@',{'requires':['yui-log','widget'],'skinnable':true,'lang':['en','es','hu','it','ja']});

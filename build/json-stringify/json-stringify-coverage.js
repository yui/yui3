if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/json-stringify/json-stringify.js']) {
   __coverage__['build/json-stringify/json-stringify.js'] = {"path":"build/json-stringify/json-stringify.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":45}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":18},"end":{"line":26,"column":31}}},"3":{"name":"_zeroPad","line":27,"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":29}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":15},"end":{"line":66,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":98,"column":44}},"2":{"start":{"line":11,"column":0},"end":{"line":12,"column":37}},"3":{"start":{"line":14,"column":0},"end":{"line":96,"column":3}},"4":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"5":{"start":{"line":28,"column":12},"end":{"line":28,"column":40}},"6":{"start":{"line":31,"column":8},"end":{"line":36,"column":50}},"7":{"start":{"line":67,"column":8},"end":{"line":67,"column":55}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":28},"end":{"line":28,"column":35}},{"start":{"line":28,"column":38},"end":{"line":28,"column":39}}]}},"code":["(function () { YUI.add('json-stringify', function (Y, NAME) {","","/**\r"," * Provides Y.JSON.stringify method for converting objects to JSON strings.\r"," *\r"," * @module json\r"," * @submodule json-stringify\r"," * @for JSON\r"," * @static\r"," */\r","var COLON     = ':',\r","    _JSON     = Y.config.global.JSON;\r","\r","Y.mix(Y.namespace('JSON'), {\r","    /**\r","     * Serializes a Date instance as a UTC date string.  Used internally by\r","     * stringify.  Override this method if you need Dates serialized in a\r","     * different format.\r","     *\r","     * @method dateToString\r","     * @param d {Date} The Date to serialize\r","     * @return {String} stringified Date in UTC format YYYY-MM-DDTHH:mm:SSZ\r","     * @deprecated Use a replacer function\r","     * @static\r","     */\r","    dateToString: function (d) {\r","        function _zeroPad(v) {\r","            return v < 10 ? '0' + v : v;\r","        }\r","\r","        return d.getUTCFullYear()           + '-' +\r","              _zeroPad(d.getUTCMonth() + 1) + '-' +\r","              _zeroPad(d.getUTCDate())      + 'T' +\r","              _zeroPad(d.getUTCHours())     + COLON +\r","              _zeroPad(d.getUTCMinutes())   + COLON +\r","              _zeroPad(d.getUTCSeconds())   + 'Z';\r","    },\r","\r","    /**\r","     * <p>Converts an arbitrary value to a JSON string representation.</p>\r","     *\r","     * <p>Objects with cyclical references will trigger an exception.</p>\r","     *\r","     * <p>If a whitelist is provided, only matching object keys will be\r","     * included.  Alternately, a replacer function may be passed as the\r","     * second parameter.  This function is executed on every value in the\r","     * input, and its return value will be used in place of the original value.\r","     * This is useful to serialize specialized objects or class instances.</p>\r","     *\r","     * <p>If a positive integer or non-empty string is passed as the third\r","     * parameter, the output will be formatted with carriage returns and\r","     * indentation for readability.  If a String is passed (such as \"\\t\") it\r","     * will be used once for each indentation level.  If a number is passed,\r","     * that number of spaces will be used.</p>\r","     *\r","     * @method stringify\r","     * @param o {MIXED} any arbitrary value to convert to JSON string\r","     * @param w {Array|Function} (optional) whitelist of acceptable object\r","     *                  keys to include, or a replacer function to modify the\r","     *                  raw value before serialization\r","     * @param ind {Number|String} (optional) indentation character or depth of\r","     *                  spaces to format the output.\r","     * @return {string} JSON string representation of the input\r","     * @static\r","     */\r","    stringify: function () {\r","        return _JSON.stringify.apply(_JSON, arguments);\r","    },\r","\r","    /**\r","     * <p>Number of occurrences of a special character within a single call to\r","     * stringify that should trigger promotion of that character to a dedicated\r","     * preprocess step for future calls.  This is only used in environments\r","     * that don't support native JSON, or when useNativeJSONStringify is set to\r","     * false.</p>\r","     *\r","     * <p>So, if set to 50 and an object is passed to stringify that includes\r","     * strings containing the special character \\x07 more than 50 times,\r","     * subsequent calls to stringify will process object strings through a\r","     * faster serialization path for \\x07 before using the generic, slower,\r","     * replacement process for all special characters.</p>\r","     *\r","     * <p>To prime the preprocessor cache, set this value to 1, then call\r","     * <code>Y.JSON.stringify(\"<em>(all special characters to\r","     * cache)</em>\");</code>, then return this setting to a more conservative\r","     * value.</p>\r","     *\r","     * <p>Special characters \\ \" \\b \\t \\n \\f \\r are already cached.</p>\r","     *\r","     * @property charCacheThreshold\r","     * @static\r","     * @default 100\r","     * @type {Number}\r","     */\r","    charCacheThreshold: 100\r","});","","}, '@VERSION@', {\"requires\": [\"yui-base\"]});","","}());"]};
}
var __cov_sVNg4Z4WLk99zPCD9nqL4w = __coverage__['build/json-stringify/json-stringify.js'];
__cov_sVNg4Z4WLk99zPCD9nqL4w.s['1']++;YUI.add('json-stringify',function(Y,NAME){__cov_sVNg4Z4WLk99zPCD9nqL4w.f['1']++;__cov_sVNg4Z4WLk99zPCD9nqL4w.s['2']++;var COLON=':',_JSON=Y.config.global.JSON;__cov_sVNg4Z4WLk99zPCD9nqL4w.s['3']++;Y.mix(Y.namespace('JSON'),{dateToString:function(d){__cov_sVNg4Z4WLk99zPCD9nqL4w.f['2']++;__cov_sVNg4Z4WLk99zPCD9nqL4w.s['4']++;function _zeroPad(v){__cov_sVNg4Z4WLk99zPCD9nqL4w.f['3']++;__cov_sVNg4Z4WLk99zPCD9nqL4w.s['5']++;return v<10?(__cov_sVNg4Z4WLk99zPCD9nqL4w.b['1'][0]++,'0'+v):(__cov_sVNg4Z4WLk99zPCD9nqL4w.b['1'][1]++,v);}__cov_sVNg4Z4WLk99zPCD9nqL4w.s['6']++;return d.getUTCFullYear()+'-'+_zeroPad(d.getUTCMonth()+1)+'-'+_zeroPad(d.getUTCDate())+'T'+_zeroPad(d.getUTCHours())+COLON+_zeroPad(d.getUTCMinutes())+COLON+_zeroPad(d.getUTCSeconds())+'Z';},stringify:function(){__cov_sVNg4Z4WLk99zPCD9nqL4w.f['4']++;__cov_sVNg4Z4WLk99zPCD9nqL4w.s['7']++;return _JSON.stringify.apply(_JSON,arguments);},charCacheThreshold:100});},'@VERSION@',{'requires':['yui-base']});

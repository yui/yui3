if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/panel/panel.js']) {
   __coverage__['build/panel/panel.js'] = {"path":"build/panel/panel.js","s":{"1":0,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":112,"column":3}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":51}},"3":{"start":{"line":37,"column":0},"end":{"line":96,"column":3}}},"branchMap":{},"code":["(function () { YUI.add('panel', function (Y, NAME) {","","// TODO: Change this description!\r","/**\r","Provides a Panel widget, a widget that mimics the functionality of a regular OS\r","window. Comes with Standard Module support, XY Positioning, Alignment Support,\r","Stack (z-index) support, modality, auto-focus and auto-hide functionality, and\r","header/footer button support.\r","\r","@module panel\r","**/\r","\r","var getClassName = Y.ClassNameManager.getClassName;\r","\r","// TODO: Change this description!\r","/**\r","A basic Panel Widget, which can be positioned based on Page XY co-ordinates and\r","is stackable (z-index support). It also provides alignment and centering support\r","and uses a standard module format for it's content, with header, body and footer\r","section support. It can be made modal, and has functionality to hide and focus\r","on different events. The header and footer sections can be modified to allow for\r","button support.\r","\r","@class Panel\r","@constructor\r","@extends Widget\r","@uses WidgetAutohide\r","@uses WidgetButtons\r","@uses WidgetModality\r","@uses WidgetPosition\r","@uses WidgetPositionAlign\r","@uses WidgetPositionConstrain\r","@uses WidgetStack\r","@uses WidgetStdMod\r","@since 3.4.0\r"," */\r","Y.Panel = Y.Base.create('panel', Y.Widget, [\r","    // Other Widget extensions depend on these two.\r","    Y.WidgetPosition,\r","    Y.WidgetStdMod,\r","\r","    Y.WidgetAutohide,\r","    Y.WidgetButtons,\r","    Y.WidgetModality,\r","    Y.WidgetPositionAlign,\r","    Y.WidgetPositionConstrain,\r","    Y.WidgetStack\r","], {\r","    // -- Public Properties ----------------------------------------------------\r","\r","    /**\r","    Collection of predefined buttons mapped from name => config.\r","\r","    Panel includes a \"close\" button which can be use by name. When the close\r","    button is in the header (which is the default), it will look like: [x].\r","\r","    See `addButton()` for a list of possible configuration values.\r","\r","    @example\r","        // Panel with close button in header.\r","        var panel = new Y.Panel({\r","            buttons: ['close']\r","        });\r","\r","        // Panel with close button in footer.\r","        var otherPanel = new Y.Panel({\r","            buttons: {\r","                footer: ['close']\r","            }\r","        });\r","\r","    @property BUTTONS\r","    @type Object\r","    @default {close: {}}\r","    @since 3.5.0\r","    **/\r","    BUTTONS: {\r","        close: {\r","            label  : 'Close',\r","            action : 'hide',\r","            section: 'header',\r","\r","            // Uses `type=\"button\"` so the button's default action can still\r","            // occur but it won't cause things like a form to submit.\r","            template  : '<button type=\"button\" />',\r","            classNames: getClassName('button', 'close')\r","        }\r","    }\r","}, {\r","    ATTRS: {\r","        // TODO: API Docs.\r","        buttons: {\r","            value: ['close']\r","        }\r","    }\r","});\r","","","}, '@VERSION@', {","    \"requires\": [","        \"widget\",","        \"widget-autohide\",","        \"widget-buttons\",","        \"widget-modality\",","        \"widget-position\",","        \"widget-position-align\",","        \"widget-position-constrain\",","        \"widget-stack\",","        \"widget-stdmod\"","    ],","    \"skinnable\": true","});","","}());"]};
}
var __cov_10weLx3bojCGZEmv$aKmKg = __coverage__['build/panel/panel.js'];
__cov_10weLx3bojCGZEmv$aKmKg.s['1']++;YUI.add('panel',function(Y,NAME){__cov_10weLx3bojCGZEmv$aKmKg.f['1']++;__cov_10weLx3bojCGZEmv$aKmKg.s['2']++;var getClassName=Y.ClassNameManager.getClassName;__cov_10weLx3bojCGZEmv$aKmKg.s['3']++;Y.Panel=Y.Base.create('panel',Y.Widget,[Y.WidgetPosition,Y.WidgetStdMod,Y.WidgetAutohide,Y.WidgetButtons,Y.WidgetModality,Y.WidgetPositionAlign,Y.WidgetPositionConstrain,Y.WidgetStack],{BUTTONS:{close:{label:'Close',action:'hide',section:'header',template:'<button type="button" />',classNames:getClassName('button','close')}}},{ATTRS:{buttons:{value:['close']}}});},'@VERSION@',{'requires':['widget','widget-autohide','widget-buttons','widget-modality','widget-position','widget-position-align','widget-position-constrain','widget-stack','widget-stdmod'],'skinnable':true});

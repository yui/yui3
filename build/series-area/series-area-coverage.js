if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/series-area/series-area.js']) {
   __coverage__['build/series-area/series-area.js'] = {"path":"build/series-area/series-area.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":16},"end":{"line":29,"column":4}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":16},"end":{"line":43,"column":4}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":23},"end":{"line":61,"column":4}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":103,"column":72}},"2":{"start":{"line":20,"column":0},"end":{"line":94,"column":3}},"3":{"start":{"line":30,"column":8},"end":{"line":30,"column":60}},"4":{"start":{"line":44,"column":8},"end":{"line":47,"column":9}},"5":{"start":{"line":46,"column":12},"end":{"line":46,"column":29}},"6":{"start":{"line":48,"column":8},"end":{"line":48,"column":69}},"7":{"start":{"line":62,"column":8},"end":{"line":62,"column":116}},"8":{"start":{"line":63,"column":8},"end":{"line":63,"column":22}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]}},"code":["(function () { YUI.add('series-area', function (Y, NAME) {","","/**"," * Provides functionality for creating a area series."," *"," * @module charts"," * @submodule series-area"," */","/**"," * The AreaSeries class renders quantitative data on a graph by creating a fill between 0"," * and the relevant data points."," *"," * @class AreaSeries"," * @extends CartesianSeries"," * @uses Fills"," * @constructor"," * @param {Object} config (optional) Configuration parameters."," * @submodule series-area"," */","Y.AreaSeries = Y.Base.create(\"areaSeries\", Y.CartesianSeries, [Y.Fills], {","    /**","     * @protected","     *","     * Renders the series.","     *","     * @method drawSeries","     */","    drawSeries: function()","    {","        this.drawFill.apply(this, this._getClosingPoints());","    },","","    /**","     * @protected","     *","     * Method used by `styles` setter. Overrides base implementation.","     *","     * @method _setStyles","     * @param {Object} newStyles Hash of properties to update.","     * @return Object","     */","    _setStyles: function(val)","    {","        if(!val.area)","        {","            val = {area:val};","        }","        return Y.AreaSeries.superclass._setStyles.apply(this, [val]);","    },","","    /**","     * @protected","     *","     * Gets the default value for the `styles` attribute. Overrides","     * base implementation.","     *","     * @method _getDefaultStyles","     * @return Object","     */","    _getDefaultStyles: function()","    {","        var styles = this._mergeStyles({area:this._getAreaDefaults()}, Y.AreaSeries.superclass._getDefaultStyles());","        return styles;","    }","},","{","    ATTRS: {","        /**","         * Read-only attribute indicating the type of series.","         *","         * @attribute type","         * @type String","         * @default area","         */","        type: {","            value:\"area\"","        }","","        /**","         * Style properties used for drawing area fills. This attribute is inherited from `Renderer`. Below are the default values:","         *","         *  <dl>","         *      <dt>color</dt><dd>The color of the fill. The default value is determined by the order of the series on the graph. The color will be","         *      retrieved from the following array:","         *      `[\"#66007f\", \"#a86f41\", \"#295454\", \"#996ab2\", \"#e8cdb7\", \"#90bdbd\",\"#000000\",\"#c3b8ca\", \"#968373\", \"#678585\"]`","         *      </dd>","         *      <dt>alpha</dt><dd>Number between 0 and 1 that indicates the opacity of the fill. The default value is 1</dd>","         *  </dl>","         *","         * @attribute styles","         * @type Object","         */","    }","});","","","","","","","","","}, '@VERSION@', {\"requires\": [\"series-cartesian\", \"series-fill-util\"]});","","}());"]};
}
var __cov_uGvIwibhuc1EXIAY0ubDSA = __coverage__['build/series-area/series-area.js'];
__cov_uGvIwibhuc1EXIAY0ubDSA.s['1']++;YUI.add('series-area',function(Y,NAME){__cov_uGvIwibhuc1EXIAY0ubDSA.f['1']++;__cov_uGvIwibhuc1EXIAY0ubDSA.s['2']++;Y.AreaSeries=Y.Base.create('areaSeries',Y.CartesianSeries,[Y.Fills],{drawSeries:function(){__cov_uGvIwibhuc1EXIAY0ubDSA.f['2']++;__cov_uGvIwibhuc1EXIAY0ubDSA.s['3']++;this.drawFill.apply(this,this._getClosingPoints());},_setStyles:function(val){__cov_uGvIwibhuc1EXIAY0ubDSA.f['3']++;__cov_uGvIwibhuc1EXIAY0ubDSA.s['4']++;if(!val.area){__cov_uGvIwibhuc1EXIAY0ubDSA.b['1'][0]++;__cov_uGvIwibhuc1EXIAY0ubDSA.s['5']++;val={area:val};}else{__cov_uGvIwibhuc1EXIAY0ubDSA.b['1'][1]++;}__cov_uGvIwibhuc1EXIAY0ubDSA.s['6']++;return Y.AreaSeries.superclass._setStyles.apply(this,[val]);},_getDefaultStyles:function(){__cov_uGvIwibhuc1EXIAY0ubDSA.f['4']++;__cov_uGvIwibhuc1EXIAY0ubDSA.s['7']++;var styles=this._mergeStyles({area:this._getAreaDefaults()},Y.AreaSeries.superclass._getDefaultStyles());__cov_uGvIwibhuc1EXIAY0ubDSA.s['8']++;return styles;}},{ATTRS:{type:{value:'area'}}});},'@VERSION@',{'requires':['series-cartesian','series-fill-util']});

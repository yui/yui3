if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/series-base/series-base.js']) {
   __coverage__['build/series-base/series-base.js'] = {"path":"build/series-base/series-base.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":12},"end":{"line":31,"column":4}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":16},"end":{"line":44,"column":4}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":14},"end":{"line":60,"column":25}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":20},"end":{"line":81,"column":4}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":23},"end":{"line":96,"column":4}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":26},"end":{"line":113,"column":4}}},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":16},"end":{"line":124,"column":4}}},"9":{"name":"(anonymous_9)","line":248,"loc":{"start":{"line":248,"column":22},"end":{"line":249,"column":4}}},"10":{"name":"(anonymous_10)","line":277,"loc":{"start":{"line":277,"column":20},"end":{"line":278,"column":12}}},"11":{"name":"(anonymous_11)","line":292,"loc":{"start":{"line":292,"column":20},"end":{"line":293,"column":12}}},"12":{"name":"(anonymous_12)","line":307,"loc":{"start":{"line":307,"column":20},"end":{"line":307,"column":34}}},"13":{"name":"(anonymous_13)","line":324,"loc":{"start":{"line":324,"column":20},"end":{"line":325,"column":12}}},"14":{"name":"(anonymous_14)","line":372,"loc":{"start":{"line":372,"column":20},"end":{"line":373,"column":12}}},"15":{"name":"(anonymous_15)","line":386,"loc":{"start":{"line":386,"column":20},"end":{"line":387,"column":12}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":396,"column":57}},"2":{"start":{"line":25,"column":0},"end":{"line":393,"column":3}},"3":{"start":{"line":32,"column":8},"end":{"line":32,"column":26}},"4":{"start":{"line":33,"column":8},"end":{"line":33,"column":28}},"5":{"start":{"line":34,"column":8},"end":{"line":34,"column":24}},"6":{"start":{"line":45,"column":8},"end":{"line":46,"column":43}},"7":{"start":{"line":47,"column":8},"end":{"line":47,"column":37}},"8":{"start":{"line":61,"column":8},"end":{"line":62,"column":38}},"9":{"start":{"line":63,"column":8},"end":{"line":66,"column":9}},"10":{"start":{"line":65,"column":12},"end":{"line":65,"column":39}},"11":{"start":{"line":67,"column":8},"end":{"line":70,"column":9}},"12":{"start":{"line":69,"column":12},"end":{"line":69,"column":40}},"13":{"start":{"line":71,"column":8},"end":{"line":71,"column":21}},"14":{"start":{"line":82,"column":8},"end":{"line":83,"column":94}},"15":{"start":{"line":84,"column":8},"end":{"line":84,"column":21}},"16":{"start":{"line":97,"column":8},"end":{"line":102,"column":15}},"17":{"start":{"line":114,"column":8},"end":{"line":114,"column":49}},"18":{"start":{"line":125,"column":8},"end":{"line":126,"column":42}},"19":{"start":{"line":127,"column":8},"end":{"line":133,"column":9}},"20":{"start":{"line":129,"column":12},"end":{"line":129,"column":46}},"21":{"start":{"line":130,"column":12},"end":{"line":130,"column":45}},"22":{"start":{"line":131,"column":12},"end":{"line":131,"column":46}},"23":{"start":{"line":132,"column":12},"end":{"line":132,"column":47}},"24":{"start":{"line":134,"column":8},"end":{"line":141,"column":9}},"25":{"start":{"line":136,"column":12},"end":{"line":136,"column":37}},"26":{"start":{"line":137,"column":12},"end":{"line":140,"column":13}},"27":{"start":{"line":139,"column":16},"end":{"line":139,"column":33}},"28":{"start":{"line":142,"column":8},"end":{"line":146,"column":9}},"29":{"start":{"line":144,"column":12},"end":{"line":144,"column":33}},"30":{"start":{"line":145,"column":12},"end":{"line":145,"column":30}},"31":{"start":{"line":147,"column":8},"end":{"line":151,"column":9}},"32":{"start":{"line":149,"column":12},"end":{"line":149,"column":40}},"33":{"start":{"line":150,"column":12},"end":{"line":150,"column":37}},"34":{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},"35":{"start":{"line":154,"column":12},"end":{"line":154,"column":40}},"36":{"start":{"line":155,"column":12},"end":{"line":155,"column":37}},"37":{"start":{"line":250,"column":8},"end":{"line":257,"column":27}},"38":{"start":{"line":258,"column":8},"end":{"line":258,"column":27}},"39":{"start":{"line":259,"column":8},"end":{"line":262,"column":9}},"40":{"start":{"line":261,"column":12},"end":{"line":261,"column":30}},"41":{"start":{"line":263,"column":8},"end":{"line":263,"column":30}},"42":{"start":{"line":264,"column":8},"end":{"line":264,"column":35}},"43":{"start":{"line":279,"column":16},"end":{"line":279,"column":56}},"44":{"start":{"line":294,"column":16},"end":{"line":294,"column":57}},"45":{"start":{"line":309,"column":16},"end":{"line":311,"column":17}},"46":{"start":{"line":310,"column":20},"end":{"line":310,"column":47}},"47":{"start":{"line":312,"column":16},"end":{"line":312,"column":27}},"48":{"start":{"line":326,"column":16},"end":{"line":327,"column":46}},"49":{"start":{"line":328,"column":16},"end":{"line":331,"column":17}},"50":{"start":{"line":330,"column":20},"end":{"line":330,"column":47}},"51":{"start":{"line":332,"column":16},"end":{"line":332,"column":29}},"52":{"start":{"line":374,"column":16},"end":{"line":375,"column":54}},"53":{"start":{"line":376,"column":16},"end":{"line":382,"column":17}},"54":{"start":{"line":377,"column":20},"end":{"line":377,"column":46}},"55":{"start":{"line":378,"column":20},"end":{"line":381,"column":21}},"56":{"start":{"line":380,"column":24},"end":{"line":380,"column":65}},"57":{"start":{"line":383,"column":16},"end":{"line":383,"column":36}},"58":{"start":{"line":388,"column":16},"end":{"line":388,"column":41}},"59":{"start":{"line":389,"column":16},"end":{"line":389,"column":27}}},"branchMap":{"1":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":8}},{"start":{"line":67,"column":8},"end":{"line":67,"column":8}}]},"3":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":64},"end":{"line":82,"column":67}},{"start":{"line":82,"column":70},"end":{"line":82,"column":73}}]},"4":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":8}},{"start":{"line":127,"column":8},"end":{"line":127,"column":8}}]},"5":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":14},"end":{"line":134,"column":21}},{"start":{"line":134,"column":25},"end":{"line":134,"column":43}}]},"6":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":12},"end":{"line":137,"column":12}},{"start":{"line":137,"column":12},"end":{"line":137,"column":12}}]},"7":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":15},"end":{"line":137,"column":21}},{"start":{"line":137,"column":25},"end":{"line":137,"column":50}}]},"8":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]},"9":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":8}},{"start":{"line":147,"column":8},"end":{"line":147,"column":8}}]},"10":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"11":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":18},"end":{"line":256,"column":30}},{"start":{"line":256,"column":34},"end":{"line":256,"column":45}}]},"12":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":16},"end":{"line":258,"column":21}},{"start":{"line":258,"column":25},"end":{"line":258,"column":26}}]},"13":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":8},"end":{"line":259,"column":8}},{"start":{"line":259,"column":8},"end":{"line":259,"column":8}}]},"14":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":15},"end":{"line":263,"column":19}},{"start":{"line":263,"column":23},"end":{"line":263,"column":29}}]},"15":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":16},"end":{"line":309,"column":16}},{"start":{"line":309,"column":16},"end":{"line":309,"column":16}}]},"16":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":16},"end":{"line":328,"column":16}},{"start":{"line":328,"column":16},"end":{"line":328,"column":16}}]},"17":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":16},"end":{"line":376,"column":16}},{"start":{"line":376,"column":16},"end":{"line":376,"column":16}}]},"18":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":20},"end":{"line":378,"column":20}},{"start":{"line":378,"column":20},"end":{"line":378,"column":20}}]}},"code":["(function () { YUI.add('series-base', function (Y, NAME) {","","/**"," * Provides functionality for creating a chart series."," *"," * @module charts"," * @submodule series-base"," */","","/**"," * An abstract class for creating series instances."," * SeriesBase is used by the following classes:"," * <ul>"," *      <li>{{#crossLink \"CartesianSeries\"}}{{/crossLink}}</li>"," *      <li>{{#crossLink \"PieSeries\"}}{{/crossLink}}</li>"," *  </ul>"," *"," * @class SeriesBase"," * @extends Base"," * @uses Renderer"," * @constructor"," * @param {Object} config (optional) Configuration parameters."," * @submodule series-base"," */","Y.SeriesBase = Y.Base.create(\"seriesBase\", Y.Base, [Y.Renderer], {","    /**","     * @method render","     * @private","     */","    render: function()","    {","        this._setCanvas();","        this.addListeners();","        this.validate();","    },","","    /**","     * Creates a `Graphic` instance.","     *","     * @method _setCanvas","     * @protected","     */","    _setCanvas: function()","    {","        var graph = this.get(\"graph\"),","            graphic = graph.get(\"graphic\");","        this.set(\"graphic\", graphic);","    },","","    /**","     * Returns a reference to the parent container to which all chart elements are contained.","     * When the series is bound to a `Chart` instance, the `Chart` instance is the reference.","     * If nothing is set as the `chart` attribute, the `_getChart` method will return a reference","     * to the `graphic` attribute.","     *","     * @method _getChart","     * @return {Object}","     * @private","     */","    _getChart:function() {","        var chart,","            graph = this.get(\"graph\");","        if(graph)","        {","            chart = graph.get(\"chart\");","        }","        if(!chart)","        {","            chart = this.get(\"graphic\");","        }","        return chart;","    },","","    /**","     * Returns the sum of all values for the series.","     *","     * @method getTotalValues","     * @return Number","     */","    getTotalValues: function()","    {","        var valueCoord = this.get(\"direction\") === \"vertical\" ? \"x\" : \"y\",","            total = this.get(valueCoord + \"Axis\").getTotalByKey(this.get(valueCoord + \"Key\"));","        return total;","    },","","    /**","     * Gets the default value for the `styles` attribute. Overrides","     * base implementation.","     *","     * @method _getDefaultStyles","     * @return Object","     * @protected","     */","    _getDefaultStyles: function()","    {","        return {padding:{","                top: 0,","                left: 0,","                right: 0,","                bottom: 0","            }};","    },","","    /**","     * Shows/hides contents of the series.","     *","     * @method _handleVisibleChange","     * @param {Object} e Event object.","     * @protected","     */","    _handleVisibleChange: function()","    {","        this._toggleVisible(this.get(\"visible\"));","    },","","    /**","     * Destructor implementation for the CartesianSeries class. Calls destroy on all Graphic instances.","     *","     * @method destructor","     * @protected","     */","    destructor: function()","    {","        var marker,","            markers = this.get(\"markers\");","        if(this.get(\"rendered\"))","        {","            this._stylesChangeHandle.detach();","            this._widthChangeHandle.detach();","            this._heightChangeHandle.detach();","            this._visibleChangeHandle.detach();","        }","        while(markers && markers.length > 0)","        {","            marker = markers.shift();","            if(marker && marker instanceof Y.Shape)","            {","                marker.destroy();","            }","        }","        if(this._path)","        {","            this._path.destroy();","            this._path = null;","        }","        if(this._lineGraphic)","        {","            this._lineGraphic.destroy();","            this._lineGraphic = null;","        }","        if(this._groupMarker)","        {","            this._groupMarker.destroy();","            this._groupMarker = null;","        }","    },","","    /**","     * Collection of default colors used for lines in a series when not specified by user.","     *","     * @property _defaultLineColors","     * @type Array","     * @protected","     */","    _defaultLineColors:[","        \"#426ab3\",","        \"#d09b2c\",","        \"#000000\",","        \"#b82837\",","        \"#b384b5\",","        \"#ff7200\",","        \"#779de3\",","        \"#cbc8ba\",","        \"#7ed7a6\",","        \"#007a6c\"","    ],","","    /**","     * Collection of default colors used for marker fills in a series when not specified by user.","     *","     * @property _defaultFillColors","     * @type Array","     * @protected","     */","    _defaultFillColors:[","        \"#6084d0\",","        \"#eeb647\",","        \"#6c6b5f\",","        \"#d6484f\",","        \"#ce9ed1\",","        \"#ff9f3b\",","        \"#93b7ff\",","        \"#e0ddd0\",","        \"#94ecba\",","        \"#309687\"","    ],","","    /**","     * Collection of default colors used for marker borders in a series when not specified by user.","     *","     * @property _defaultBorderColors","     * @type Array","     * @protected","     */","    _defaultBorderColors:[","        \"#205096\",","        \"#b38206\",","        \"#000000\",","        \"#94001e\",","        \"#9d6fa0\",","        \"#e55b00\",","        \"#5e85c9\",","        \"#adab9e\",","        \"#6ac291\",","        \"#006457\"","    ],","","    /**","     * Collection of default colors used for area fills, histogram fills and pie fills in a series when not specified by user.","     *","     * @property _defaultSliceColors","     * @type Array","     * @protected","     */","    _defaultSliceColors: [","        \"#66007f\",","        \"#a86f41\",","        \"#295454\",","        \"#996ab2\",","        \"#e8cdb7\",","        \"#90bdbd\",","        \"#000000\",","        \"#c3b8ca\",","        \"#968373\",","        \"#678585\"","    ],","","    /**","     * Parses a color based on a series order and type.","     *","     * @method _getDefaultColor","     * @param {Number} index Index indicating the series order.","     * @param {String} type Indicates which type of object needs the color.","     * @return String","     * @protected","     */","    _getDefaultColor: function(index, type)","    {","        var colors = {","                line: this._defaultLineColors,","                fill: this._defaultFillColors,","                border: this._defaultBorderColors,","                slice: this._defaultSliceColors","            },","            col = colors[type] || colors.fill,","            l = col.length;","        index = index || 0;","        if(index >= l)","        {","            index = index % l;","        }","        type = type || \"fill\";","        return colors[type][index];","    }","}, {","    ATTRS: {","        /*","         * Returns the width of the parent graph","         *","         * @attribute width","         * @type Number","         */","        width: {","            readOnly: true,","","            getter: function()","            {","                return this.get(\"graphic\").get(\"width\");","            }","        },","","        /**","         * Returns the height of the parent graph","         *","         * @attribute height","         * @type Number","         */","        height: {","            readOnly: true,","","            getter: function()","            {","                return this.get(\"graphic\").get(\"height\");","            }","        },","","        /**","         * The graphic in which drawings will be rendered.","         *","         * @attribute graphic","         * @type Graphic","         */","        graphic: {","            lazyAdd: false,","","            setter: function(val) {","                //woraround for Attribute order of operations bug","                if(!this.get(\"rendered\")) {","                    this.set(\"rendered\", true);","                }","                return val;","            }","        },","","        /**","         * Reference to the `Chart` application. If no `Chart` application is present,","         * a reference to the `Graphic` instance that the series is drawn into will be returned.","         *","         * @attribute chart","         * @type ChartBase","         */","        chart: {","            getter: function()","            {","                var chart,","                    graph = this.get(\"graph\");","                if(graph)","                {","                    chart = graph.get(\"chart\");","                }","                return chart;","            }","        },","","        /**","         * Reference to the `Graph` in which the series is drawn into.","         *","         * @attribute graph","         * @type Graph","         */","        graph: {},","","        /**","         * Indicates whether the Series has been through its initial set up.","         *","         * @attribute rendered","         * @type Boolean","         */","        rendered: {","            value: false","        },","","        /**","         * Indicates whether to show the series","         *","         * @attribute visible","         * @type Boolean","         * @default true","         */","        visible: {","            value: true","        },","","        /**","         * Indicates whether or not markers for a series will be grouped and rendered in a single complex shape instance.","         *","         * @attribute groupMarkers","         * @type Boolean","         */","        groupMarkers: {","            getter: function()","            {","                var graph,","                    groupMarkers = this._groupMarkers;","                if(!groupMarkers) {","                    graph = this.get(\"graph\");","                    if(graph)","                    {","                        groupMarkers = graph.get(\"groupMarkers\");","                    }","                }","                return groupMarkers;","            },","","            setter: function(val)","            {","                this._groupMarkers = val;","                return val;","            }","        }","    }","});","","","}, '@VERSION@', {\"requires\": [\"graphics\", \"axis-base\"]});","","}());"]};
}
var __cov_c6WAKvHDOhOQB9o8mQa3Ug = __coverage__['build/series-base/series-base.js'];
__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['1']++;YUI.add('series-base',function(Y,NAME){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['1']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['2']++;Y.SeriesBase=Y.Base.create('seriesBase',Y.Base,[Y.Renderer],{render:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['2']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['3']++;this._setCanvas();__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['4']++;this.addListeners();__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['5']++;this.validate();},_setCanvas:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['3']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['6']++;var graph=this.get('graph'),graphic=graph.get('graphic');__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['7']++;this.set('graphic',graphic);},_getChart:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['4']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['8']++;var chart,graph=this.get('graph');__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['9']++;if(graph){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['1'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['10']++;chart=graph.get('chart');}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['1'][1]++;}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['11']++;if(!chart){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['2'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['12']++;chart=this.get('graphic');}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['2'][1]++;}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['13']++;return chart;},getTotalValues:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['5']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['14']++;var valueCoord=this.get('direction')==='vertical'?(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['3'][0]++,'x'):(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['3'][1]++,'y'),total=this.get(valueCoord+'Axis').getTotalByKey(this.get(valueCoord+'Key'));__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['15']++;return total;},_getDefaultStyles:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['6']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['16']++;return{padding:{top:0,left:0,right:0,bottom:0}};},_handleVisibleChange:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['7']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['17']++;this._toggleVisible(this.get('visible'));},destructor:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['8']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['18']++;var marker,markers=this.get('markers');__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['19']++;if(this.get('rendered')){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['4'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['20']++;this._stylesChangeHandle.detach();__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['21']++;this._widthChangeHandle.detach();__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['22']++;this._heightChangeHandle.detach();__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['23']++;this._visibleChangeHandle.detach();}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['4'][1]++;}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['24']++;while((__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['5'][0]++,markers)&&(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['5'][1]++,markers.length>0)){__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['25']++;marker=markers.shift();__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['26']++;if((__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['7'][0]++,marker)&&(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['7'][1]++,marker instanceof Y.Shape)){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['6'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['27']++;marker.destroy();}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['6'][1]++;}}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['28']++;if(this._path){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['8'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['29']++;this._path.destroy();__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['30']++;this._path=null;}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['8'][1]++;}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['31']++;if(this._lineGraphic){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['9'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['32']++;this._lineGraphic.destroy();__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['33']++;this._lineGraphic=null;}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['9'][1]++;}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['34']++;if(this._groupMarker){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['10'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['35']++;this._groupMarker.destroy();__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['36']++;this._groupMarker=null;}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['10'][1]++;}},_defaultLineColors:['#426ab3','#d09b2c','#000000','#b82837','#b384b5','#ff7200','#779de3','#cbc8ba','#7ed7a6','#007a6c'],_defaultFillColors:['#6084d0','#eeb647','#6c6b5f','#d6484f','#ce9ed1','#ff9f3b','#93b7ff','#e0ddd0','#94ecba','#309687'],_defaultBorderColors:['#205096','#b38206','#000000','#94001e','#9d6fa0','#e55b00','#5e85c9','#adab9e','#6ac291','#006457'],_defaultSliceColors:['#66007f','#a86f41','#295454','#996ab2','#e8cdb7','#90bdbd','#000000','#c3b8ca','#968373','#678585'],_getDefaultColor:function(index,type){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['9']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['37']++;var colors={line:this._defaultLineColors,fill:this._defaultFillColors,border:this._defaultBorderColors,slice:this._defaultSliceColors},col=(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['11'][0]++,colors[type])||(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['11'][1]++,colors.fill),l=col.length;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['38']++;index=(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['12'][0]++,index)||(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['12'][1]++,0);__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['39']++;if(index>=l){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['13'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['40']++;index=index%l;}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['13'][1]++;}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['41']++;type=(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['14'][0]++,type)||(__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['14'][1]++,'fill');__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['42']++;return colors[type][index];}},{ATTRS:{width:{readOnly:true,getter:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['10']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['43']++;return this.get('graphic').get('width');}},height:{readOnly:true,getter:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['11']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['44']++;return this.get('graphic').get('height');}},graphic:{lazyAdd:false,setter:function(val){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['12']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['45']++;if(!this.get('rendered')){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['15'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['46']++;this.set('rendered',true);}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['15'][1]++;}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['47']++;return val;}},chart:{getter:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['13']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['48']++;var chart,graph=this.get('graph');__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['49']++;if(graph){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['16'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['50']++;chart=graph.get('chart');}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['16'][1]++;}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['51']++;return chart;}},graph:{},rendered:{value:false},visible:{value:true},groupMarkers:{getter:function(){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['14']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['52']++;var graph,groupMarkers=this._groupMarkers;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['53']++;if(!groupMarkers){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['17'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['54']++;graph=this.get('graph');__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['55']++;if(graph){__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['18'][0]++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['56']++;groupMarkers=graph.get('groupMarkers');}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['18'][1]++;}}else{__cov_c6WAKvHDOhOQB9o8mQa3Ug.b['17'][1]++;}__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['57']++;return groupMarkers;},setter:function(val){__cov_c6WAKvHDOhOQB9o8mQa3Ug.f['15']++;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['58']++;this._groupMarkers=val;__cov_c6WAKvHDOhOQB9o8mQa3Ug.s['59']++;return val;}}}});},'@VERSION@',{'requires':['graphics','axis-base']});

if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/color-harmony/color-harmony.js']) {
   __coverage__['build/color-harmony/color-harmony.js'] = {"path":"build/color-harmony/color-harmony.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":44}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":26},"end":{"line":40,"column":44}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":18},"end":{"line":64,"column":44}}},"4":{"name":"(anonymous_4)","line":92,"loc":{"start":{"line":92,"column":22},"end":{"line":92,"column":48}}},"5":{"name":"(anonymous_5)","line":119,"loc":{"start":{"line":119,"column":18},"end":{"line":119,"column":36}}},"6":{"name":"(anonymous_6)","line":144,"loc":{"start":{"line":144,"column":19},"end":{"line":144,"column":45}}},"7":{"name":"(anonymous_7)","line":170,"loc":{"start":{"line":170,"column":19},"end":{"line":170,"column":37}}},"8":{"name":"(anonymous_8)","line":195,"loc":{"start":{"line":195,"column":23},"end":{"line":195,"column":48}}},"9":{"name":"(anonymous_9)","line":240,"loc":{"start":{"line":240,"column":20},"end":{"line":240,"column":53}}},"10":{"name":"(anonymous_10)","line":295,"loc":{"start":{"line":295,"column":19},"end":{"line":295,"column":45}}},"11":{"name":"(anonymous_11)","line":338,"loc":{"start":{"line":338,"column":23},"end":{"line":338,"column":37}}},"12":{"name":"(anonymous_12)","line":365,"loc":{"start":{"line":365,"column":30},"end":{"line":365,"column":54}}},"13":{"name":"(anonymous_13)","line":394,"loc":{"start":{"line":394,"column":16},"end":{"line":394,"column":30}}},"14":{"name":"(anonymous_14)","line":411,"loc":{"start":{"line":411,"column":17},"end":{"line":411,"column":36}}},"15":{"name":"(anonymous_15)","line":430,"loc":{"start":{"line":430,"column":21},"end":{"line":430,"column":35}}},"16":{"name":"(anonymous_16)","line":450,"loc":{"start":{"line":450,"column":24},"end":{"line":450,"column":38}}},"17":{"name":"(anonymous_17)","line":473,"loc":{"start":{"line":473,"column":23},"end":{"line":473,"column":48}}},"18":{"name":"(anonymous_18)","line":514,"loc":{"start":{"line":514,"column":39},"end":{"line":514,"column":77}}},"19":{"name":"(anonymous_19)","line":546,"loc":{"start":{"line":546,"column":32},"end":{"line":546,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":568,"column":45}},"2":{"start":{"line":12,"column":0},"end":{"line":563,"column":6}},"3":{"start":{"line":41,"column":12},"end":{"line":42,"column":29}},"4":{"start":{"line":44,"column":12},"end":{"line":44,"column":43}},"5":{"start":{"line":46,"column":12},"end":{"line":46,"column":29}},"6":{"start":{"line":47,"column":12},"end":{"line":47,"column":37}},"7":{"start":{"line":49,"column":12},"end":{"line":49,"column":66}},"8":{"start":{"line":65,"column":12},"end":{"line":66,"column":29}},"9":{"start":{"line":68,"column":12},"end":{"line":68,"column":44}},"10":{"start":{"line":70,"column":12},"end":{"line":70,"column":43}},"11":{"start":{"line":72,"column":12},"end":{"line":72,"column":29}},"12":{"start":{"line":73,"column":12},"end":{"line":73,"column":46}},"13":{"start":{"line":74,"column":12},"end":{"line":74,"column":46}},"14":{"start":{"line":76,"column":12},"end":{"line":76,"column":66}},"15":{"start":{"line":93,"column":12},"end":{"line":94,"column":29}},"16":{"start":{"line":96,"column":12},"end":{"line":96,"column":48}},"17":{"start":{"line":97,"column":12},"end":{"line":97,"column":43}},"18":{"start":{"line":99,"column":12},"end":{"line":99,"column":29}},"19":{"start":{"line":100,"column":12},"end":{"line":100,"column":40}},"20":{"start":{"line":101,"column":12},"end":{"line":101,"column":44}},"21":{"start":{"line":102,"column":12},"end":{"line":102,"column":41}},"22":{"start":{"line":103,"column":12},"end":{"line":103,"column":45}},"23":{"start":{"line":105,"column":12},"end":{"line":105,"column":66}},"24":{"start":{"line":120,"column":12},"end":{"line":121,"column":29}},"25":{"start":{"line":123,"column":12},"end":{"line":123,"column":43}},"26":{"start":{"line":125,"column":12},"end":{"line":125,"column":29}},"27":{"start":{"line":126,"column":12},"end":{"line":126,"column":46}},"28":{"start":{"line":127,"column":12},"end":{"line":127,"column":47}},"29":{"start":{"line":129,"column":12},"end":{"line":129,"column":66}},"30":{"start":{"line":145,"column":12},"end":{"line":146,"column":29}},"31":{"start":{"line":148,"column":12},"end":{"line":148,"column":45}},"32":{"start":{"line":149,"column":12},"end":{"line":149,"column":43}},"33":{"start":{"line":151,"column":12},"end":{"line":151,"column":29}},"34":{"start":{"line":152,"column":12},"end":{"line":152,"column":40}},"35":{"start":{"line":153,"column":12},"end":{"line":153,"column":37}},"36":{"start":{"line":154,"column":12},"end":{"line":154,"column":46}},"37":{"start":{"line":156,"column":12},"end":{"line":156,"column":66}},"38":{"start":{"line":171,"column":12},"end":{"line":172,"column":29}},"39":{"start":{"line":174,"column":12},"end":{"line":174,"column":43}},"40":{"start":{"line":176,"column":12},"end":{"line":176,"column":29}},"41":{"start":{"line":177,"column":12},"end":{"line":177,"column":47}},"42":{"start":{"line":178,"column":12},"end":{"line":178,"column":51}},"43":{"start":{"line":179,"column":12},"end":{"line":179,"column":51}},"44":{"start":{"line":181,"column":12},"end":{"line":181,"column":66}},"45":{"start":{"line":196,"column":12},"end":{"line":201,"column":32}},"46":{"start":{"line":203,"column":12},"end":{"line":203,"column":39}},"47":{"start":{"line":204,"column":12},"end":{"line":204,"column":43}},"48":{"start":{"line":207,"column":12},"end":{"line":209,"column":13}},"49":{"start":{"line":208,"column":16},"end":{"line":208,"column":27}},"50":{"start":{"line":211,"column":12},"end":{"line":211,"column":37}},"51":{"start":{"line":213,"column":12},"end":{"line":216,"column":13}},"52":{"start":{"line":214,"column":16},"end":{"line":214,"column":54}},"53":{"start":{"line":215,"column":16},"end":{"line":215,"column":41}},"54":{"start":{"line":218,"column":12},"end":{"line":218,"column":30}},"55":{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},"56":{"start":{"line":221,"column":16},"end":{"line":221,"column":59}},"57":{"start":{"line":224,"column":12},"end":{"line":224,"column":26}},"58":{"start":{"line":241,"column":12},"end":{"line":251,"column":22}},"59":{"start":{"line":253,"column":12},"end":{"line":253,"column":43}},"60":{"start":{"line":254,"column":12},"end":{"line":254,"column":39}},"61":{"start":{"line":255,"column":12},"end":{"line":255,"column":42}},"62":{"start":{"line":257,"column":12},"end":{"line":257,"column":53}},"63":{"start":{"line":258,"column":12},"end":{"line":258,"column":47}},"64":{"start":{"line":259,"column":12},"end":{"line":259,"column":47}},"65":{"start":{"line":260,"column":12},"end":{"line":260,"column":47}},"66":{"start":{"line":261,"column":12},"end":{"line":261,"column":47}},"67":{"start":{"line":263,"column":12},"end":{"line":263,"column":29}},"68":{"start":{"line":264,"column":12},"end":{"line":276,"column":13}},"69":{"start":{"line":265,"column":16},"end":{"line":265,"column":81}},"70":{"start":{"line":266,"column":16},"end":{"line":266,"column":81}},"71":{"start":{"line":268,"column":16},"end":{"line":275,"column":19}},"72":{"start":{"line":278,"column":12},"end":{"line":278,"column":66}},"73":{"start":{"line":296,"column":12},"end":{"line":298,"column":21}},"74":{"start":{"line":300,"column":12},"end":{"line":306,"column":13}},"75":{"start":{"line":301,"column":16},"end":{"line":301,"column":43}},"76":{"start":{"line":302,"column":16},"end":{"line":302,"column":43}},"77":{"start":{"line":304,"column":16},"end":{"line":304,"column":27}},"78":{"start":{"line":305,"column":16},"end":{"line":305,"column":29}},"79":{"start":{"line":308,"column":12},"end":{"line":308,"column":28}},"80":{"start":{"line":310,"column":12},"end":{"line":312,"column":13}},"81":{"start":{"line":311,"column":16},"end":{"line":311,"column":56}},"82":{"start":{"line":314,"column":12},"end":{"line":316,"column":13}},"83":{"start":{"line":315,"column":16},"end":{"line":315,"column":76}},"84":{"start":{"line":318,"column":12},"end":{"line":320,"column":13}},"85":{"start":{"line":319,"column":16},"end":{"line":319,"column":76}},"86":{"start":{"line":322,"column":12},"end":{"line":324,"column":13}},"87":{"start":{"line":323,"column":16},"end":{"line":323,"column":49}},"88":{"start":{"line":326,"column":12},"end":{"line":326,"column":24}},"89":{"start":{"line":339,"column":12},"end":{"line":343,"column":53}},"90":{"start":{"line":346,"column":12},"end":{"line":350,"column":27}},"91":{"start":{"line":366,"column":12},"end":{"line":367,"column":49}},"92":{"start":{"line":369,"column":12},"end":{"line":369,"column":43}},"93":{"start":{"line":371,"column":12},"end":{"line":373,"column":13}},"94":{"start":{"line":372,"column":16},"end":{"line":372,"column":27}},"95":{"start":{"line":375,"column":12},"end":{"line":375,"column":71}},"96":{"start":{"line":377,"column":12},"end":{"line":377,"column":57}},"97":{"start":{"line":379,"column":12},"end":{"line":379,"column":45}},"98":{"start":{"line":395,"column":12},"end":{"line":395,"column":65}},"99":{"start":{"line":396,"column":12},"end":{"line":396,"column":54}},"100":{"start":{"line":398,"column":12},"end":{"line":398,"column":24}},"101":{"start":{"line":412,"column":12},"end":{"line":412,"column":51}},"102":{"start":{"line":413,"column":12},"end":{"line":413,"column":96}},"103":{"start":{"line":415,"column":12},"end":{"line":417,"column":13}},"104":{"start":{"line":416,"column":16},"end":{"line":416,"column":27}},"105":{"start":{"line":419,"column":12},"end":{"line":419,"column":46}},"106":{"start":{"line":431,"column":12},"end":{"line":431,"column":45}},"107":{"start":{"line":433,"column":12},"end":{"line":437,"column":13}},"108":{"start":{"line":434,"column":16},"end":{"line":434,"column":27}},"109":{"start":{"line":435,"column":19},"end":{"line":437,"column":13}},"110":{"start":{"line":436,"column":16},"end":{"line":436,"column":44}},"111":{"start":{"line":439,"column":12},"end":{"line":439,"column":50}},"112":{"start":{"line":451,"column":12},"end":{"line":451,"column":45}},"113":{"start":{"line":453,"column":12},"end":{"line":457,"column":13}},"114":{"start":{"line":454,"column":16},"end":{"line":454,"column":27}},"115":{"start":{"line":455,"column":19},"end":{"line":457,"column":13}},"116":{"start":{"line":456,"column":16},"end":{"line":456,"column":44}},"117":{"start":{"line":459,"column":12},"end":{"line":459,"column":50}},"118":{"start":{"line":474,"column":12},"end":{"line":476,"column":13}},"119":{"start":{"line":475,"column":16},"end":{"line":475,"column":27}},"120":{"start":{"line":477,"column":12},"end":{"line":477,"column":23}},"121":{"start":{"line":479,"column":12},"end":{"line":481,"column":13}},"122":{"start":{"line":480,"column":16},"end":{"line":480,"column":62}},"123":{"start":{"line":483,"column":12},"end":{"line":483,"column":23}},"124":{"start":{"line":515,"column":12},"end":{"line":516,"column":18}},"125":{"start":{"line":518,"column":12},"end":{"line":518,"column":33}},"126":{"start":{"line":519,"column":12},"end":{"line":519,"column":81}},"127":{"start":{"line":521,"column":12},"end":{"line":527,"column":13}},"128":{"start":{"line":522,"column":16},"end":{"line":522,"column":33}},"129":{"start":{"line":523,"column":19},"end":{"line":527,"column":13}},"130":{"start":{"line":524,"column":16},"end":{"line":524,"column":96}},"131":{"start":{"line":526,"column":16},"end":{"line":526,"column":96}},"132":{"start":{"line":547,"column":12},"end":{"line":550,"column":19}},"133":{"start":{"line":552,"column":12},"end":{"line":558,"column":13}},"134":{"start":{"line":553,"column":16},"end":{"line":553,"column":36}},"135":{"start":{"line":554,"column":16},"end":{"line":556,"column":17}},"136":{"start":{"line":555,"column":20},"end":{"line":555,"column":59}},"137":{"start":{"line":557,"column":16},"end":{"line":557,"column":53}},"138":{"start":{"line":560,"column":12},"end":{"line":560,"column":26}},"139":{"start":{"line":565,"column":0},"end":{"line":565,"column":34}}},"branchMap":{"1":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":17},"end":{"line":44,"column":19}},{"start":{"line":44,"column":23},"end":{"line":44,"column":42}}]},"2":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":21},"end":{"line":68,"column":27}},{"start":{"line":68,"column":31},"end":{"line":68,"column":43}}]},"3":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":17},"end":{"line":70,"column":19}},{"start":{"line":70,"column":23},"end":{"line":70,"column":42}}]},"4":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":21},"end":{"line":96,"column":27}},{"start":{"line":96,"column":31},"end":{"line":96,"column":47}}]},"5":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":17},"end":{"line":97,"column":19}},{"start":{"line":97,"column":23},"end":{"line":97,"column":42}}]},"6":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":17},"end":{"line":123,"column":19}},{"start":{"line":123,"column":23},"end":{"line":123,"column":42}}]},"7":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":21},"end":{"line":148,"column":27}},{"start":{"line":148,"column":31},"end":{"line":148,"column":44}}]},"8":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":17},"end":{"line":149,"column":19}},{"start":{"line":149,"column":23},"end":{"line":149,"column":42}}]},"9":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":17},"end":{"line":174,"column":19}},{"start":{"line":174,"column":23},"end":{"line":174,"column":42}}]},"10":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":20},"end":{"line":203,"column":25}},{"start":{"line":203,"column":29},"end":{"line":203,"column":38}}]},"11":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":17},"end":{"line":204,"column":19}},{"start":{"line":204,"column":23},"end":{"line":204,"column":42}}]},"12":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":12},"end":{"line":207,"column":12}},{"start":{"line":207,"column":12},"end":{"line":207,"column":12}}]},"13":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":17},"end":{"line":253,"column":19}},{"start":{"line":253,"column":23},"end":{"line":253,"column":42}}]},"14":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":20},"end":{"line":254,"column":25}},{"start":{"line":254,"column":29},"end":{"line":254,"column":38}}]},"15":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":21},"end":{"line":255,"column":27}},{"start":{"line":255,"column":31},"end":{"line":255,"column":41}}]},"16":{"line":257,"type":"cond-expr","locations":[{"start":{"line":257,"column":40},"end":{"line":257,"column":43}},{"start":{"line":257,"column":46},"end":{"line":257,"column":52}}]},"17":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":12},"end":{"line":300,"column":12}},{"start":{"line":300,"column":12},"end":{"line":300,"column":12}}]},"18":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":17},"end":{"line":308,"column":19}},{"start":{"line":308,"column":23},"end":{"line":308,"column":27}}]},"19":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":12},"end":{"line":310,"column":12}},{"start":{"line":310,"column":12},"end":{"line":310,"column":12}}]},"20":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":12},"end":{"line":314,"column":12}},{"start":{"line":314,"column":12},"end":{"line":314,"column":12}}]},"21":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":12},"end":{"line":318,"column":12}},{"start":{"line":318,"column":12},"end":{"line":318,"column":12}}]},"22":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":12},"end":{"line":322,"column":12}},{"start":{"line":322,"column":12},"end":{"line":322,"column":12}}]},"23":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":17},"end":{"line":369,"column":19}},{"start":{"line":369,"column":23},"end":{"line":369,"column":42}}]},"24":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":12},"end":{"line":371,"column":12}},{"start":{"line":371,"column":12},"end":{"line":371,"column":12}}]},"25":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":12},"end":{"line":415,"column":12}},{"start":{"line":415,"column":12},"end":{"line":415,"column":12}}]},"26":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":12},"end":{"line":433,"column":12}},{"start":{"line":433,"column":12},"end":{"line":433,"column":12}}]},"27":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":19},"end":{"line":435,"column":19}},{"start":{"line":435,"column":19},"end":{"line":435,"column":19}}]},"28":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":12},"end":{"line":453,"column":12}},{"start":{"line":453,"column":12},"end":{"line":453,"column":12}}]},"29":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":19},"end":{"line":455,"column":19}},{"start":{"line":455,"column":19},"end":{"line":455,"column":19}}]},"30":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":12},"end":{"line":479,"column":12}},{"start":{"line":479,"column":12},"end":{"line":479,"column":12}}]},"31":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":12},"end":{"line":521,"column":12}},{"start":{"line":521,"column":12},"end":{"line":521,"column":12}}]},"32":{"line":521,"type":"binary-expr","locations":[{"start":{"line":521,"column":16},"end":{"line":521,"column":34}},{"start":{"line":521,"column":38},"end":{"line":521,"column":56}}]},"33":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":19},"end":{"line":523,"column":19}},{"start":{"line":523,"column":19},"end":{"line":523,"column":19}}]},"34":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":16},"end":{"line":554,"column":16}},{"start":{"line":554,"column":16},"end":{"line":554,"column":16}}]}},"code":["(function () { YUI.add('color-harmony', function (Y, NAME) {","","/**\r","Color Harmony provides methods useful for color combination discovery.\r","\r","@module color\r","@submodule color-harmony\r","@class Harmony\r","@namespace Color\r","@since 3.8.0\r","*/\r","var HSL = 'hsl',\r","    RGB = 'rgb',\r","\r","    SPLIT_OFFSET = 30,\r","    ANALOGOUS_OFFSET = 10,\r","    TRIAD_OFFSET = 360/3,\r","    TETRAD_OFFSET = 360/6,\r","    SQUARE_OFFSET = 360/4 ,\r","\r","    DEF_COUNT = 5,\r","    DEF_OFFSET = 10,\r","\r","    Color = Y.Color,\r","\r","    Harmony = {\r","\r","        // Color Groups\r","        /**\r","        Returns an Array of two colors. The first color in the Array\r","          will be the color passed in. The second will be the\r","          complementary color of the color provided\r","        @public\r","        @method getComplementary\r","        @param {String} str\r","        @param {String} [to]\r","        @return {Array}\r","        @since 3.8.0\r","        **/\r","        getComplementary: function(str, to) {\r","            var c = Harmony._start(str),\r","                offsets = [];\r","\r","            to = to || Color.findType(str);\r","\r","            offsets.push({});\r","            offsets.push({ h: 180 });\r","\r","            return Harmony._adjustOffsetAndFinish(c, offsets, to);\r","        },\r","\r","        /**\r","        Returns an Array of three colors. The first color in the Array\r","          will be the color passed in. The second two will be split\r","          complementary colors.\r","        @public\r","        @method getSplit\r","        @param {String} str\r","        @param {Number} [offset]\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        **/\r","        getSplit: function(str, offset, to) {\r","            var c = Harmony._start(str),\r","                offsets = [];\r","\r","            offset = offset || SPLIT_OFFSET;\r","\r","            to = to || Color.findType(str);\r","\r","            offsets.push({});\r","            offsets.push({ h: 180 + offset });\r","            offsets.push({ h: 180 - offset });\r","\r","            return Harmony._adjustOffsetAndFinish(c, offsets, to);\r","        },\r","\r","        /**\r","        Returns an Array of five colors. The first color in the Array\r","          will be the color passed in. The remaining four will be\r","          analogous colors two in either direction from the initially\r","          provided color.\r","        @public\r","        @method getAnalogous\r","        @param {String} str\r","        @param {Number} [offset]\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        **/\r","        getAnalogous: function(str, offset, to) {\r","            var c = Harmony._start(str),\r","                offsets = [];\r","\r","            offset = offset || ANALOGOUS_OFFSET;\r","            to = to || Color.findType(str);\r","\r","            offsets.push({});\r","            offsets.push({ h: offset });\r","            offsets.push({ h: offset * 2 });\r","            offsets.push({ h: -offset });\r","            offsets.push({ h: -offset * 2 });\r","\r","            return Harmony._adjustOffsetAndFinish(c, offsets, to);\r","        },\r","\r","        /**\r","        Returns an Array of three colors. The first color in the Array\r","          will be the color passed in. The second two will be equidistant\r","          from the start color and each other.\r","        @public\r","        @method getTriad\r","        @param {String} str\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        **/\r","        getTriad: function(str, to) {\r","            var c = Harmony._start(str),\r","                offsets = [];\r","\r","            to = to || Color.findType(str);\r","\r","            offsets.push({});\r","            offsets.push({ h: TRIAD_OFFSET });\r","            offsets.push({ h: -TRIAD_OFFSET });\r","\r","            return Harmony._adjustOffsetAndFinish(c, offsets, to);\r","        },\r","\r","        /**\r","        Returns an Array of four colors. The first color in the Array\r","          will be the color passed in. The remaining three colors are\r","          equidistant offsets from the starting color and each other.\r","        @public\r","        @method getTetrad\r","        @param {String} str\r","        @param {Number} [offset]\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        **/\r","        getTetrad: function(str, offset, to) {\r","            var c = Harmony._start(str),\r","                offsets = [];\r","\r","            offset = offset || TETRAD_OFFSET;\r","            to = to || Color.findType(str);\r","\r","            offsets.push({});\r","            offsets.push({ h: offset });\r","            offsets.push({ h: 180 });\r","            offsets.push({ h: 180 + offset });\r","\r","            return Harmony._adjustOffsetAndFinish(c, offsets, to);\r","        },\r","\r","        /**\r","        Returns an Array of four colors. The first color in the Array\r","          will be the color passed in. The remaining three colors are\r","          equidistant offsets from the starting color and each other.\r","        @public\r","        @method getSquare\r","        @param {String} str\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        **/\r","        getSquare: function(str, to) {\r","            var c = Harmony._start(str),\r","                offsets = [];\r","\r","            to = to || Color.findType(str);\r","\r","            offsets.push({});\r","            offsets.push({ h: SQUARE_OFFSET });\r","            offsets.push({ h: SQUARE_OFFSET * 2 });\r","            offsets.push({ h: SQUARE_OFFSET * 3 });\r","\r","            return Harmony._adjustOffsetAndFinish(c, offsets, to);\r","        },\r","\r","        /**\r","        Calculates lightness offsets resulting in a monochromatic Array\r","          of values.\r","        @public\r","        @method getMonochrome\r","        @param {String} str\r","        @param {Number} [count]\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        **/\r","        getMonochrome: function(str, count, to) {\r","            var c = Harmony._start(str),\r","                colors = [],\r","                i = 0,\r","                l,\r","                step,\r","                _c = c.concat();\r","\r","            count = count || DEF_COUNT;\r","            to = to || Color.findType(str);\r","\r","\r","            if (count < 2) {\r","                return str;\r","            }\r","\r","            step = 100 / (count - 1);\r","\r","            for (; i <= 100; i += step) {\r","                _c[2] = Math.max(Math.min(i, 100), 0);\r","                colors.push(_c.concat());\r","            }\r","\r","            l = colors.length;\r","\r","            for (i=0; i<l; i++) {\r","                colors[i] = Harmony._finish(colors[i], to);\r","            }\r","\r","            return colors;\r","        },\r","\r","        /**\r","        Creates an Array of similar colors. Returned Array is prepended\r","           with the color provided followed a number of colors decided\r","           by count\r","        @public\r","        @method getSimilar\r","        @param {String} str\r","        @param {Number} [offset]\r","        @param {Number} [count]\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        **/\r","        getSimilar: function(str, offset, count, to) {\r","            var c = Harmony._start(str),\r","                offsets = [],\r","                slOffset,\r","                s = +(c[1]),\r","                sMin,\r","                sMax,\r","                sRand,\r","                l = +(c[2]),\r","                lMin,\r","                lMax,\r","                lRand;\r","\r","            to = to || Color.findType(str);\r","            count = count || DEF_COUNT;\r","            offset = offset || DEF_OFFSET;\r","\r","            slOffset = (offset > 100) ? 100 : offset;\r","            sMin = Math.max(0,   s - slOffset);\r","            sMax = Math.min(100, s + slOffset);\r","            lMin = Math.max(0,   l - slOffset);\r","            lMax = Math.min(100, l + slOffset);\r","\r","            offsets.push({});\r","            for (i = 0; i < count; i++) {\r","                sRand = ( Math.round( (Math.random() * (sMax - sMin)) + sMin ) );\r","                lRand = ( Math.round( (Math.random() * (lMax - lMin)) + lMin ) );\r","\r","                offsets.push({\r","                    h: ( Math.random() * (offset * 2)) - offset,\r","                    // because getOffset adjusts from the existing color, we\r","                    // need to adjust it negatively to get a good number for\r","                    // saturation and luminance, otherwise we get a lot of white\r","                    s: -(s - sRand),\r","                    l: -(l - lRand)\r","                });\r","            }\r","\r","            return Harmony._adjustOffsetAndFinish(c, offsets, to);\r","        },\r","\r","        /**\r","        Adjusts the provided color by the offset(s) given. You may\r","          adjust hue, saturation, and/or luminance in one step.\r","        @public\r","        @method getOffset\r","        @param {String} str\r","        @param {Object} adjust\r","          @param {Number} [adjust.h]\r","          @param {Number} [adjust.s]\r","          @param {Number} [adjust.l]\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        **/\r","        getOffset: function(str, adjust, to) {\r","            var started = Y.Lang.isArray(str),\r","                hsla,\r","                type;\r","\r","            if (!started) {\r","                hsla = Harmony._start(str);\r","                type = Color.findType(str);\r","            } else {\r","                hsla = str;\r","                type = 'hsl';\r","            }\r","\r","            to = to || type;\r","\r","            if (adjust.h) {\r","                hsla[0] = ((+hsla[0]) + adjust.h) % 360;\r","            }\r","\r","            if (adjust.s) {\r","                hsla[1] = Math.max(Math.min((+hsla[1]) + adjust.s, 100), 0);\r","            }\r","\r","            if (adjust.l) {\r","                hsla[2] = Math.max(Math.min((+hsla[2]) + adjust.l, 100), 0);\r","            }\r","\r","            if (!started) {\r","                return Harmony._finish(hsla, to);\r","            }\r","\r","            return hsla;\r","        },\r","\r","        /**\r","        Returns 0 - 100 percentage of brightness from `0` (black) being the\r","          darkest to `100` (white) being the brightest.\r","        @public\r","        @method getBrightness\r","        @param {String} str\r","        @return {Number}\r","        @since 3.8.0\r","        **/\r","        getBrightness: function(str) {\r","            var c = Color.toArray(Color._convertTo(str, RGB)),\r","                r = c[0],\r","                g = c[1],\r","                b = c[2],\r","                weights = Y.Color._brightnessWeights;\r","\r","\r","            return Math.round(Math.sqrt(\r","                (r * r * weights.r) +\r","                (g * g * weights.g) +\r","                (b * b * weights.b)\r","            ) / 255 * 100);\r","        },\r","\r","        /**\r","        Returns a new color value with adjusted luminance so that the\r","          brightness of the return color matches the perceived brightness\r","          of the `match` color provided.\r","        @public\r","        @method getSimilarBrightness\r","        @param {String} str\r","        @param {String} match\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        **/\r","        getSimilarBrightness: function(str, match, to){\r","            var c = Color.toArray(Color._convertTo(str, HSL)),\r","                b = Harmony.getBrightness(match);\r","\r","            to = to || Color.findType(str);\r","\r","            if (to === 'keyword') {\r","                to = 'hex';\r","            }\r","\r","            c[2] = Harmony._searchLuminanceForBrightness(c, b, 0, 100);\r","\r","            str = Color.fromArray(c, Y.Color.TYPES.HSLA);\r","\r","            return Color._convertTo(str, to);\r","        },\r","\r","        //--------------------\r","        // PRIVATE\r","        //--------------------\r","        /**\r","        Converts the provided color from additive to subtractive returning\r","          an Array of HSLA values\r","        @private\r","        @method _start\r","        @param {String} str\r","        @return {Array}\r","        @since 3.8.0\r","        */\r","        _start: function(str) {\r","            var hsla = Color.toArray(Color._convertTo(str, HSL));\r","            hsla[0] = Harmony._toSubtractive(hsla[0]);\r","\r","            return hsla;\r","        },\r","\r","        /**\r","        Converts the provided HSLA values from subtractive to additive\r","          returning a converted color string\r","        @private\r","        @method _finish\r","        @param {Array} hsla\r","        @param {String} [to]\r","        @return {String}\r","        @since 3.8.0\r","        */\r","        _finish: function(hsla, to) {\r","            hsla[0] = Harmony._toAdditive(hsla[0]);\r","            hsla = 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\r","\r","            if (to === 'keyword') {\r","                to = 'hex';\r","            }\r","\r","            return Color._convertTo(hsla, to);\r","        },\r","\r","        /**\r","        Adjusts the hue degree from subtractive to additive\r","        @private\r","        @method _toAdditive\r","        @param {Number} hue\r","        @return {Number} Converted additive hue\r","        @since 3.8.0\r","        */\r","        _toAdditive: function(hue) {\r","            hue = Y.Color._constrainHue(hue);\r","\r","            if (hue <= 180) {\r","                hue /= 1.5;\r","            } else if (hue < 240) {\r","                hue = 120 + (hue - 180) * 2;\r","            }\r","\r","            return Y.Color._constrainHue(hue, 10);\r","        },\r","\r","        /**\r","        Adjusts the hue degree from additive to subtractive\r","        @private\r","        @method _toSubtractive\r","        @param {Number} hue\r","        @return {Number} Converted subtractive hue\r","        @since 3.8.0\r","        */\r","        _toSubtractive: function(hue) {\r","            hue = Y.Color._constrainHue(hue);\r","\r","            if (hue <= 120) {\r","                hue *= 1.5;\r","            } else if (hue < 240) {\r","                hue = 180 + (hue - 120) / 2;\r","            }\r","\r","            return Y.Color._constrainHue(hue, 10);\r","        },\r","\r","        /**\r","        Contrain the hue to a value between 0 and 360 for calculations\r","            and real color wheel value space. Provide a precision value\r","            to round return value to a decimal place\r","        @private\r","        @method _constrainHue\r","        @param {Number} hue\r","        @param {Number} [precision]\r","        @return {Number} Constrained hue value\r","        @since 3.8.0\r","        **/\r","        _constrainHue: function(hue, precision) {\r","            while (hue < 0) {\r","                hue += 360;\r","            }\r","            hue %= 360;\r","\r","            if (precision) {\r","                hue = Math.round(hue * precision) / precision;\r","            }\r","\r","            return hue;\r","        },\r","\r","        /**\r","        Brightness weight factors for perceived brightness calculations\r","\r","        \"standard\" values are listed as R: 0.241, G: 0.691, B: 0.068\r","        These values were changed based on grey scale comparison of hsl\r","          to new hsl where brightness is said to be within plus or minus 0.01.\r","        @private\r","        @property _brightnessWeights\r","        @since 3.8.0\r","        */\r","        _brightnessWeights: {\r","            r: 0.221,\r","            g: 0.711,\r","            b: 0.068\r","        },\r","\r","        /**\r","        Calculates the luminance as a mid range between the min and max\r","          to match the brightness level provided\r","        @private\r","        @method _searchLuminanceForBrightness\r","        @param {Array} color HSLA values\r","        @param {Number} brightness Brightness to be matched\r","        @param {Number} min Minimum range for luminance\r","        @param {Number} max Maximum range for luminance\r","        @return {Number} Found luminance to achieve requested brightness\r","        @since 3.8.0\r","        **/\r","        _searchLuminanceForBrightness: function(color, brightness, min, max) {\r","            var luminance = (max + min) / 2,\r","                b;\r","\r","            color[2] = luminance;\r","            b = Harmony.getBrightness(Color.fromArray(color, Y.Color.TYPES.HSL));\r","\r","            if (b + 2 > brightness && b - 2 < brightness) {\r","                return luminance;\r","            } else if (b > brightness) {\r","                return Harmony._searchLuminanceForBrightness(color, brightness, min, luminance);\r","            } else {\r","                return Harmony._searchLuminanceForBrightness(color, brightness, luminance, max);\r","            }\r","        },\r","\r","        /**\r","        Takes an HSL array, and an array of offsets and returns and array\r","            of colors that have been adjusted. The returned colors will\r","            match the array of offsets provided. If you wish you have the\r","            same color value returned, you can provide null or an empty\r","            object to the offsets. The returned array will contain color\r","            value strings that have been adjusted from subtractive to\r","            additive.\r","        @private\r","        @method _adjustOffsetAndFinish\r","        @param {Array} color\r","        @param {Array} offsets\r","        @param {String} to\r","        @return {Array}\r","        @since 3.8.0\r","        **/\r","        _adjustOffsetAndFinish: function(color, offsets, to) {\r","            var colors = [],\r","                i,\r","                l = offsets.length,\r","                _c;\r","\r","            for (i = 0; i < l; i++ ) {\r","                _c = color.concat();\r","                if (offsets[i]) {\r","                    _c = Harmony.getOffset(_c, offsets[i]);\r","                }\r","                colors.push(Harmony._finish(_c, to));\r","            }\r","\r","            return colors;\r","        }\r","\r","    };\r","\r","Y.Color = Y.mix(Y.Color, Harmony);\r","","","}, '@VERSION@', {\"requires\": [\"color-hsl\"]});","","}());"]};
}
var __cov_RUh5iqmU8HaqsL5E1HH9yg = __coverage__['build/color-harmony/color-harmony.js'];
__cov_RUh5iqmU8HaqsL5E1HH9yg.s['1']++;YUI.add('color-harmony',function(Y,NAME){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['1']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['2']++;var HSL='hsl',RGB='rgb',SPLIT_OFFSET=30,ANALOGOUS_OFFSET=10,TRIAD_OFFSET=360/3,TETRAD_OFFSET=360/6,SQUARE_OFFSET=360/4,DEF_COUNT=5,DEF_OFFSET=10,Color=Y.Color,Harmony={getComplementary:function(str,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['2']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['3']++;var c=Harmony._start(str),offsets=[];__cov_RUh5iqmU8HaqsL5E1HH9yg.s['4']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['1'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['1'][1]++,Color.findType(str));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['5']++;offsets.push({});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['6']++;offsets.push({h:180});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['7']++;return Harmony._adjustOffsetAndFinish(c,offsets,to);},getSplit:function(str,offset,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['3']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['8']++;var c=Harmony._start(str),offsets=[];__cov_RUh5iqmU8HaqsL5E1HH9yg.s['9']++;offset=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['2'][0]++,offset)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['2'][1]++,SPLIT_OFFSET);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['10']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['3'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['3'][1]++,Color.findType(str));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['11']++;offsets.push({});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['12']++;offsets.push({h:180+offset});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['13']++;offsets.push({h:180-offset});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['14']++;return Harmony._adjustOffsetAndFinish(c,offsets,to);},getAnalogous:function(str,offset,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['4']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['15']++;var c=Harmony._start(str),offsets=[];__cov_RUh5iqmU8HaqsL5E1HH9yg.s['16']++;offset=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['4'][0]++,offset)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['4'][1]++,ANALOGOUS_OFFSET);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['17']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['5'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['5'][1]++,Color.findType(str));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['18']++;offsets.push({});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['19']++;offsets.push({h:offset});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['20']++;offsets.push({h:offset*2});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['21']++;offsets.push({h:-offset});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['22']++;offsets.push({h:-offset*2});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['23']++;return Harmony._adjustOffsetAndFinish(c,offsets,to);},getTriad:function(str,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['5']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['24']++;var c=Harmony._start(str),offsets=[];__cov_RUh5iqmU8HaqsL5E1HH9yg.s['25']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['6'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['6'][1]++,Color.findType(str));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['26']++;offsets.push({});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['27']++;offsets.push({h:TRIAD_OFFSET});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['28']++;offsets.push({h:-TRIAD_OFFSET});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['29']++;return Harmony._adjustOffsetAndFinish(c,offsets,to);},getTetrad:function(str,offset,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['6']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['30']++;var c=Harmony._start(str),offsets=[];__cov_RUh5iqmU8HaqsL5E1HH9yg.s['31']++;offset=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['7'][0]++,offset)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['7'][1]++,TETRAD_OFFSET);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['32']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['8'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['8'][1]++,Color.findType(str));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['33']++;offsets.push({});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['34']++;offsets.push({h:offset});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['35']++;offsets.push({h:180});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['36']++;offsets.push({h:180+offset});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['37']++;return Harmony._adjustOffsetAndFinish(c,offsets,to);},getSquare:function(str,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['7']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['38']++;var c=Harmony._start(str),offsets=[];__cov_RUh5iqmU8HaqsL5E1HH9yg.s['39']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['9'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['9'][1]++,Color.findType(str));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['40']++;offsets.push({});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['41']++;offsets.push({h:SQUARE_OFFSET});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['42']++;offsets.push({h:SQUARE_OFFSET*2});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['43']++;offsets.push({h:SQUARE_OFFSET*3});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['44']++;return Harmony._adjustOffsetAndFinish(c,offsets,to);},getMonochrome:function(str,count,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['8']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['45']++;var c=Harmony._start(str),colors=[],i=0,l,step,_c=c.concat();__cov_RUh5iqmU8HaqsL5E1HH9yg.s['46']++;count=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['10'][0]++,count)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['10'][1]++,DEF_COUNT);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['47']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['11'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['11'][1]++,Color.findType(str));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['48']++;if(count<2){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['12'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['49']++;return str;}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['12'][1]++;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['50']++;step=100/(count-1);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['51']++;for(;i<=100;i+=step){__cov_RUh5iqmU8HaqsL5E1HH9yg.s['52']++;_c[2]=Math.max(Math.min(i,100),0);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['53']++;colors.push(_c.concat());}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['54']++;l=colors.length;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['55']++;for(i=0;i<l;i++){__cov_RUh5iqmU8HaqsL5E1HH9yg.s['56']++;colors[i]=Harmony._finish(colors[i],to);}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['57']++;return colors;},getSimilar:function(str,offset,count,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['9']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['58']++;var c=Harmony._start(str),offsets=[],slOffset,s=+c[1],sMin,sMax,sRand,l=+c[2],lMin,lMax,lRand;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['59']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['13'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['13'][1]++,Color.findType(str));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['60']++;count=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['14'][0]++,count)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['14'][1]++,DEF_COUNT);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['61']++;offset=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['15'][0]++,offset)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['15'][1]++,DEF_OFFSET);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['62']++;slOffset=offset>100?(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['16'][0]++,100):(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['16'][1]++,offset);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['63']++;sMin=Math.max(0,s-slOffset);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['64']++;sMax=Math.min(100,s+slOffset);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['65']++;lMin=Math.max(0,l-slOffset);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['66']++;lMax=Math.min(100,l+slOffset);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['67']++;offsets.push({});__cov_RUh5iqmU8HaqsL5E1HH9yg.s['68']++;for(i=0;i<count;i++){__cov_RUh5iqmU8HaqsL5E1HH9yg.s['69']++;sRand=Math.round(Math.random()*(sMax-sMin)+sMin);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['70']++;lRand=Math.round(Math.random()*(lMax-lMin)+lMin);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['71']++;offsets.push({h:Math.random()*(offset*2)-offset,s:-(s-sRand),l:-(l-lRand)});}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['72']++;return Harmony._adjustOffsetAndFinish(c,offsets,to);},getOffset:function(str,adjust,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['10']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['73']++;var started=Y.Lang.isArray(str),hsla,type;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['74']++;if(!started){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['17'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['75']++;hsla=Harmony._start(str);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['76']++;type=Color.findType(str);}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['17'][1]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['77']++;hsla=str;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['78']++;type='hsl';}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['79']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['18'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['18'][1]++,type);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['80']++;if(adjust.h){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['19'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['81']++;hsla[0]=(+hsla[0]+adjust.h)%360;}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['19'][1]++;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['82']++;if(adjust.s){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['20'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['83']++;hsla[1]=Math.max(Math.min(+hsla[1]+adjust.s,100),0);}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['20'][1]++;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['84']++;if(adjust.l){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['21'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['85']++;hsla[2]=Math.max(Math.min(+hsla[2]+adjust.l,100),0);}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['21'][1]++;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['86']++;if(!started){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['22'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['87']++;return Harmony._finish(hsla,to);}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['22'][1]++;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['88']++;return hsla;},getBrightness:function(str){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['11']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['89']++;var c=Color.toArray(Color._convertTo(str,RGB)),r=c[0],g=c[1],b=c[2],weights=Y.Color._brightnessWeights;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['90']++;return Math.round(Math.sqrt(r*r*weights.r+g*g*weights.g+b*b*weights.b)/255*100);},getSimilarBrightness:function(str,match,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['12']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['91']++;var c=Color.toArray(Color._convertTo(str,HSL)),b=Harmony.getBrightness(match);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['92']++;to=(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['23'][0]++,to)||(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['23'][1]++,Color.findType(str));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['93']++;if(to==='keyword'){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['24'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['94']++;to='hex';}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['24'][1]++;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['95']++;c[2]=Harmony._searchLuminanceForBrightness(c,b,0,100);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['96']++;str=Color.fromArray(c,Y.Color.TYPES.HSLA);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['97']++;return Color._convertTo(str,to);},_start:function(str){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['13']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['98']++;var hsla=Color.toArray(Color._convertTo(str,HSL));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['99']++;hsla[0]=Harmony._toSubtractive(hsla[0]);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['100']++;return hsla;},_finish:function(hsla,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['14']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['101']++;hsla[0]=Harmony._toAdditive(hsla[0]);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['102']++;hsla='hsla('+hsla[0]+', '+hsla[1]+'%, '+hsla[2]+'%, '+hsla[3]+')';__cov_RUh5iqmU8HaqsL5E1HH9yg.s['103']++;if(to==='keyword'){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['25'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['104']++;to='hex';}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['25'][1]++;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['105']++;return Color._convertTo(hsla,to);},_toAdditive:function(hue){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['15']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['106']++;hue=Y.Color._constrainHue(hue);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['107']++;if(hue<=180){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['26'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['108']++;hue/=1.5;}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['26'][1]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['109']++;if(hue<240){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['27'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['110']++;hue=120+(hue-180)*2;}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['27'][1]++;}}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['111']++;return Y.Color._constrainHue(hue,10);},_toSubtractive:function(hue){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['16']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['112']++;hue=Y.Color._constrainHue(hue);__cov_RUh5iqmU8HaqsL5E1HH9yg.s['113']++;if(hue<=120){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['28'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['114']++;hue*=1.5;}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['28'][1]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['115']++;if(hue<240){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['29'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['116']++;hue=180+(hue-120)/2;}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['29'][1]++;}}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['117']++;return Y.Color._constrainHue(hue,10);},_constrainHue:function(hue,precision){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['17']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['118']++;while(hue<0){__cov_RUh5iqmU8HaqsL5E1HH9yg.s['119']++;hue+=360;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['120']++;hue%=360;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['121']++;if(precision){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['30'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['122']++;hue=Math.round(hue*precision)/precision;}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['30'][1]++;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['123']++;return hue;},_brightnessWeights:{r:0.221,g:0.711,b:0.068},_searchLuminanceForBrightness:function(color,brightness,min,max){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['18']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['124']++;var luminance=(max+min)/2,b;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['125']++;color[2]=luminance;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['126']++;b=Harmony.getBrightness(Color.fromArray(color,Y.Color.TYPES.HSL));__cov_RUh5iqmU8HaqsL5E1HH9yg.s['127']++;if((__cov_RUh5iqmU8HaqsL5E1HH9yg.b['32'][0]++,b+2>brightness)&&(__cov_RUh5iqmU8HaqsL5E1HH9yg.b['32'][1]++,b-2<brightness)){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['31'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['128']++;return luminance;}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['31'][1]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['129']++;if(b>brightness){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['33'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['130']++;return Harmony._searchLuminanceForBrightness(color,brightness,min,luminance);}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['33'][1]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['131']++;return Harmony._searchLuminanceForBrightness(color,brightness,luminance,max);}}},_adjustOffsetAndFinish:function(color,offsets,to){__cov_RUh5iqmU8HaqsL5E1HH9yg.f['19']++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['132']++;var colors=[],i,l=offsets.length,_c;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['133']++;for(i=0;i<l;i++){__cov_RUh5iqmU8HaqsL5E1HH9yg.s['134']++;_c=color.concat();__cov_RUh5iqmU8HaqsL5E1HH9yg.s['135']++;if(offsets[i]){__cov_RUh5iqmU8HaqsL5E1HH9yg.b['34'][0]++;__cov_RUh5iqmU8HaqsL5E1HH9yg.s['136']++;_c=Harmony.getOffset(_c,offsets[i]);}else{__cov_RUh5iqmU8HaqsL5E1HH9yg.b['34'][1]++;}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['137']++;colors.push(Harmony._finish(_c,to));}__cov_RUh5iqmU8HaqsL5E1HH9yg.s['138']++;return colors;}};__cov_RUh5iqmU8HaqsL5E1HH9yg.s['139']++;Y.Color=Y.mix(Y.Color,Harmony);},'@VERSION@',{'requires':['color-hsl']});

YUI().use('datatable', 'datatype-number-format', function (Y) {

    var portfolio = [
        { stock_id:3, ticker:'XYZEE', company:'XYZ Corporation', qty:300, cost:4500, price:15.83 },
        { stock_id:11, ticker:'FUBAR', company:'FooBar Computers, Inc.', qty:100, cost:2187, price:28.90 },
        { stock_id:17, ticker:'GIFT', company:"Spinoff Technology", qty:400, cost:0, price:4.11 },
        { stock_id:19, ticker:'DOLLARS', company:"Consultants 'R Us", qty:1750, cost:6099.13, price:3.97 },
        { stock_id:5, ticker:'SAFET', company:'Stability Partners LLP', qty:25, cost:7283.41, price:58.74 }
    ];

    function currency(val, objs) {
        return Y.DataType.Number.format(val, Y.merge({
            prefix:"$ ",
            thousandsSeparator: ",",
            decimalSeparator: ".",
            decimalPlaces: 2
        }, objs));
    }
    
    function formatCurrency(o) {
        return currency(o.value);
    }
    
    function formatGainLoss(o) {
        o.className += (o.value < 0) ? 'loss' : 'gain';
        
        return currency(o.value)
    }

    function formatGainLossPercent(o) {
        if (o.value) {
            o.className += (o.value < 0) ? 'loss' : 'gain';
        }
        
        return o.value ? currency(o.value, {suffix:' %', prefix:'' }) : 'n/a';
    }
    
    var cols = [
        { key:'ticker',  label:'Ticker' },
        { key:'company', label:'Company Name' },        
        { key:'qty',     label:'Share Qty', className:'numeric' },        
        { key:'cost',    label:'Purchase Cost', className: 'numeric',
          formatter: formatCurrency },
        { key:'mvalue', label:'Market Value', className: 'numeric',
          formatter: formatCurrency },
        { key:'gl',     label:'Gain or Loss', className: 'numeric',
          formatter:formatGainLoss },
        { key:'glperc', label:'Gain or Loss %', formatter:formatGainLossPercent,  
          className:'percentage' }
    ];
        
    var dt = new Y.DataTable({
        columns: cols,
        data: portfolio,
        recordType: {
            ticker: {},
            company: {},
            qty: {},
            cost: {},
            mvalue: {
                getter: function () {
                    return +((this.get('price') * this.get('qty')).toFixed(2));
                }
            },
            gl: {
                getter: function () {
                    return this.get('qty') * this.get('price') - this.get('cost');
                }
            },
            glperc: {
                getter: function () {
                    var cost = this.get('cost');
                    
                    return cost ? (100 * this.get('gl') / cost) : 0;
                }
            }
        },
        sortable: ['ticket', 'company', 'cost', 'mvalue', 'gl', 'glperc'],
        sortBy: { gl: 'desc' }
    });
    
    dt.render("#dtable");    
});
    // This filters the DataModel to have a subset of it's original
    // data
    function filterModel(filterType) {
        // reset model to include all colors to prepare for filter
        myTable.set('data', myData);

        var model = myTable.data,
            filteredData = model.filter({asList: true}, function (model) {
                var hbsStr = model.get('hbs'), // get the hue emphasized color number
                    bright = hbsStr.substring(3, 5), // only the 2 brightness digits
                    sat = hbsStr.substring(6, 8); // only the 2 saturation digits

                // Depending on which filter radio was clicked,
                // filter the DataTable's modelList to include a
                // subset of models/rows/colors
                if (filterType  === 'filter-all') {
                    // Don't show black, white, or grays
                    return (sat >= 1);
                } else if (filterType  === 'filter-tint') {
                    // Bright colors that are not gray or white
                    return ((bright >= 75) && (sat >= 1));
                } else if (filterType  === 'filter-shade') {
                    // Darker colors that are not grayish
                    return ((bright <= 50) && (sat >= 20));
                } else if (filterType  === 'filter-midtone') {
                    // Middle brightness colors that are not grayish
                    return ((bright >= 50) && (bright <= 75) && (sat >= 20));
                } else if (filterType  === 'filter-mute') {
                    // Low saturation (grayish) but not pure grays
                    return ((sat <= 55) && (sat >=1));
                } else if (filterType  === 'filter-gray') {
                    // Only colors that are completely gray
                    return (sat === '00');
                }
            });
        myTable.set('data', filteredData);
    }

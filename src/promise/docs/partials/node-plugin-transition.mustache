// This method takes the same "config" parameter as Node's transition method
// but returns a NodePromise instead
NodePromise.prototype.transition = function (config) {
    var promise = this;

    // Return a new NodePromise so that chaining calls to transition()
    // results in transition executed sequentially
    return new NodePromise(function (resolve, reject) {
        // Call promise.then to the previous transition ended
        promise.then(function (node) {
            node.transition(config, function () {
                // The transition is done, signal the promise that all is ready
                // by fulfilling it with the same node
                resolve(node);
            });
        });
    });
};

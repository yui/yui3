<style scoped>
/* custom styles for this example */
#demo .output {margin-bottom:1em; padding:10px; border:1px solid #D9D9D9;}
</style>

<div class="intro">
    <p>The Date module of the DataType Utility allows you to format a JavaScript Date object into a string with `strftime` syntax. This method allows you to specify any tokenized HTML value as the format. However, in this example the formatted output will be escaped for security.</p>

    <p><strong>NOTE:</strong> As of 3.1.0, the formatting patterns used by DateType.Date can be driven by external language resource bundles as described in the <a href="datatype-dateformat-lang.html">"Formatting Dates Using Language Resource Bundles" Example</a>. This examples currently uses the 3.0.0 `dateFormat` and `locale` instance configuration support which have been deprecated.</p>
</div>

<div class="example yui3-skin-sam">
    {{>datatype-dateformat-source}}
</div>

<p>To convert a data value to a date, simply call the <code>parse()</code> function of the DataType.Date class:</p>

```
YUI().use("datatype-date", function(Y) {
    var date = Y.DataType.Date.parse("Jan 7, 2003");
    // date is a JavaScript Date object
});
```

<p>Under the hood, the data value is converted to a date via the <code>Date()</code> constructor:</p>

```
YUI().use("datatype-date", function(Y) {
    // These all return dates
    var date = Y.DataType.Date.parse("December 17, 1995 03:24:00");

    date = Y.DataType.Date.parse(1995,11,17);

    date = Y.DataType.Date.parse(1995,11,17,3,24,0);

    date = Y.DataType.Date.parse(948548583);
});
```

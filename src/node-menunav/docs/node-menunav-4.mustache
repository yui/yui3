<div class="intro">
    <p>
    This example demonstrates how to create a traditional, two-column page layout
    (<a href="../cssgrids/index.html">using Grids</a>) with top navigation rendered like split buttons.
    </p>
</div>

<div class="example newwindow">
    <a href="node-menunav-4-example.html" target="_blank" class="button">
        View Example in New Window
    </a>
</div>

<h2>Setting Up the HTML</h2>
<p>
Begin by including the <a href="../cssgrids/index.html#dependencies">CSS Grids dependencies</a> and grid
markup (this example uses a 2 column version of the
<a href="../cssgrids/cssgrids-fluid.html">Fluid Page Template</a> with a 160px left column).
Add the markup for the menu to the left column of the grid.
</p>
{{>need-skin-note}}
```
<body class="yui3-skin-sam"> {{>need-skin-comment}}
```

<p>
The root menu of menus built using the MenuNav Node Plugin can have a verical or horizontal
orientation.  The default orientation for menus is vertical, but can be easily switched to
horizontal by applying a class of <code>yui3-menu-horizontal</code> to the node representing the
root menu's bounding box, as illustrated below:
</p>

```
<div id="productsandservices" class="yui3-menu yui3-menu-horizontal"><!-- Bounding box -->
    <div class="yui3-menu-content"><!-- Content box -->
        <ul>
            <!-- Menu items -->
        </ul>
    </div>
</div>
```

<p>
To render each menu label in the horizontal menu as a split button, add the class
<code>yui3-splitbuttonnav</code> to the node representing the root menu's bounding box, as
illustrated below:
</p>

```
<div id="menu-1" class="yui3-menu yui3-menu-horizontal yui3-splitbuttonnav"><!-- Bounding box -->
    <div class="yui3-menu-content"><!-- Content box -->
        <ul>
            <!-- Menu items -->
        </ul>
    </div>
</div>
```

<p>
Next, define the markup for each menu label.  Start with a <code>&#60;span&#62;</code> with a class
of <code>yui3-menu-label</code> applied.  Inside the <code>&#60;span&#62;</code>, place two
<code>&#60;a&#62;</code> elements &#151; one for each of the label's two clickable regions.
Each <code>&#60;a&#62;</code> has separate, but related responsibilities:  The first
<code>&#60;a&#62;</code> represents the label's default action.  The second <code>&#60;a&#62;</code>
toggles the display of a submenu whose content contains other options related to, or in the same
category of the default action.  Therefore to configure the first <code>&#60;a&#62;</code>,
simply set its <code>href</code> attribute to any URL.  For the second <code>&#60;a&#62;</code>,
apply a class name of <code>yui3-menu-toggle</code>, and set the value of the <code>href</code>
attribute to the id of the label's corresponding submenu.  Lastly, the text node of the second
<code>&#60;a&#62;</code> should label the contents of its corresponding submenu.
</p>

```
<div id="menu-1" class="yui3-menu yui3-menu-horizontal yui3-splitbuttonnav"><!-- Bounding box -->
    <div class="yui3-menu-content"><!-- Content box -->
        <ul>
            <li>

                <span class="yui3-menu-label"><!-- menu label root node -->
                    <a href="http://answers.yahoo.com">Answers</a><!-- menu label default action -->
                    <a href="#answers-options" class="yui3-menu-toggle">Answers Options</a><!-- menu label submenu toggle -->
                </span>

                <div id="answers-options" class="yui3-menu">
                    <div class="yui3-menu-content">
                        <ul>
                            <li class="yui3-menuitem"><a class="yui3-menuitem-content" href="http://answers.yahoo.com/dir/">Answer</a></li>
                            <li class="yui3-menuitem"><a class="yui3-menuitem-content" href="http://answersonthestreet.yahoo.com/">Answers on the Street</a></li>
                            <li class="yui3-menuitem"><a class="yui3-menuitem-content" href="http://answers.yahoo.com/question/;_ylt=Av3Nt22Mr7YNs651NWFv8YUPzKIX;_ylv=3?link=ask">Ask</a></li>
                            <li class="yui3-menuitem"><a class="yui3-menuitem-content" href="http://answers.yahoo.com/dir/;_ylt=Aqp_jJlsYDP7urcq2WGC6HBJxQt.;_ylv=3?link=over&amp;amp;more=y">Discover</a></li>
                        </ul>
                    </div>
                </div>

            </li>
        </ul>
    </div>
</div>
```

<h2>Initializing the Menu</h2>
<p>
With the menu markup in place, retrieve the Node instance representing the root
menu (<code>&#60;div id="productsandservices"&#62;</code>) and call the
<a href="{{apiDocs}}/classes/Node.html#method_plug"><code>plug</code></a>
passing in a reference to the MenuNav Node Plugin.
</p>

<p>
Use the
<a href="{{apiDocs}}/classes/plugin.NodeMenuNav.html#attr_autoSubmenuDisplay"><code>autoSubmenuDisplay</code></a>
and <a href="{{apiDocs}}/classes/plugin.NodeMenuNav.html#attr_mouseOutHideDelay"><code>mouseOutHideDelay</code></a>
configuration attributes to configure the menu labels to behave like split buttons.  Set the
<code>autoSubmenuDisplay</code> to <code>false</code>, so that each menu label's submenu isn't
made visible until the menu trigger is clicked.  Set the <code>mouseOutHideDelay</code> to
<code>0</code> so that a label's submenu is only hidden when the user mouses down on an area
outside of the submenu.
</p>

```
<!-- YUI Seed -->
<script src="{{yuiSeedUrl}}"></script>

<script>
//  Call the "use" method, passing in "node-menunav".  This will load the
//  script and CSS for the MenuNav Node Plugin and all of the required
//  dependencies.

YUI().use('node-menunav', function(Y) {

    //  Retrieve the Node instance representing the root menu
    //  (<div id="productsandservices">) and call the "plug" method
    //  passing in a reference to the MenuNav Node Plugin.

    var menu = Y.one("#productsandservices");

    menu.plug(Y.Plugin.NodeMenuNav, { autoSubmenuDisplay: false, mouseOutHideDelay: 0 });

});
</script>
```

<p>
<em>Note:</em> In keeping with the
<a href="http://developer.yahoo.com/performance/">Exceptional Performance</a>
team's recommendation, the script block used to instantiate the menu will be
<a href="http://developer.yahoo.com/performance/rules.html#js_bottom">placed at the bottom of the page</a>.
This not only improves performance, it helps ensure that the DOM subtree of the
element representing the root menu
(<code>&#60;div id="productsandservices"&#62;</code>) is ready to be scripted.
</p>

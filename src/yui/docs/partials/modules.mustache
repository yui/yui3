<table>
  <thead>
      <tr>
          <th>YUI 3 Component</th>
          <th>Module</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>`align-plugin`</td>
          <td>Provides advanced positioning support for Node via a Plugin</td>
      </tr>
      <tr>
          <td>`anim`</td>
          <td>Alias module for: `anim-base, anim-color, anim-curve, anim-easing, anim-node-plugin, anim-scroll, anim-xy`</td>
      </tr>
      <tr>
          <td>`anim-base`</td>
          <td>Provides the base Anim class, for animating numeric properties.</td>
      </tr>
      <tr>
          <td>`anim-color`</td>
          <td>Adds support for color properties in <code>to</code></td>
      </tr>
      <tr>
          <td>`anim-curve`</td>
          <td>Adds support for the <code>curve</code> property for the <code>to</code> </td>
      </tr>
      <tr>
          <td>`anim-easing`</td>
          <td>The easing module provides methods for customizing</td>
      </tr>
      <tr>
          <td>`anim-node-plugin`</td>
          <td>Binds an Anim instance to a Node instance</td>
      </tr>
      <tr>
          <td>`anim-scroll`</td>
          <td>Adds support for the <code>scroll</code> property in <code>to</code></td>
      </tr>
      <tr>
          <td>`anim-shape-transform`</td>
          <td>Adds support for the <code>transform</code> attribute of <code>Graphic</code></td>
      </tr>
      <tr>
          <td>`anim-xy`</td>
          <td>Adds support for the <code>xy</code> property in <code>from</code> and </td>
      </tr>
      <tr>
          <td>`app`</td>
          <td>Alias module for: `app-base, app-transitions, lazy-model-list, model, model-list, model-sync-rest, router, view, view-node-map`</td>
      </tr>
      <tr>
          <td>`app-base`</td>
          <td>Provides a top-level application component which manages navigation and views.</td>
      </tr>
      <tr>
          <td>`app-transitions`</td>
          <td>Provides view transitions for `Y.App` in browsers which support native CSS3</td>
      </tr>
      <tr>
          <td>`app-transitions-native`</td>
          <td>Provides the implementation of view transitions for `Y.App.Transitions` in</td>
      </tr>
      <tr>
          <td>`array-extras`</td>
          <td>Adds additional utility methods to the `Y.Array` class.</td>
      </tr>
      <tr>
          <td>`array-invoke`</td>
          <td></td>
      </tr>
      <tr>
          <td>`arraylist`</td>
          <td>Collection utilities beyond what is provided in the YUI core</td>
      </tr>
      <tr>
          <td>`arraylist-add`</td>
          <td>Collection utilities beyond what is provided in the YUI core</td>
      </tr>
      <tr>
          <td>`arraylist-filter`</td>
          <td>Collection utilities beyond what is provided in the YUI core</td>
      </tr>
      <tr>
          <td>`arraysort`</td>
          <td>Provides a case-insenstive comparator which can be used for array sorting.</td>
      </tr>
      <tr>
          <td>`async-queue`</td>
          <td>AsyncQueue allows you create a chain of function callbacks executed</td>
      </tr>
      <tr>
          <td>`attribute`</td>
          <td>Alias module for: `attribute-base, attribute-complex`</td>
      </tr>
      <tr>
          <td>`attribute-base`</td>
          <td>The attribute-base submodule provides core attribute handling support, with everything</td>
      </tr>
      <tr>
          <td>`attribute-complex`</td>
          <td>Adds support for attribute providers to handle complex attributes in the constructor</td>
      </tr>
      <tr>
          <td>`attribute-core`</td>
          <td>The attribute-core submodule provides the lightest level of attribute handling support </td>
      </tr>
      <tr>
          <td>`attribute-events`</td>
          <td>The attribute-events submodule provides augmentable attribute change event support </td>
      </tr>
      <tr>
          <td>`attribute-extras`</td>
          <td>The attribute-extras submodule provides less commonly used attribute methods, and can </td>
      </tr>
      <tr>
          <td>`autocomplete`</td>
          <td>Alias module for: `autocomplete-base, autocomplete-sources, autocomplete-list, autocomplete-plugin`</td>
      </tr>
      <tr>
          <td>`autocomplete-base`</td>
          <td>`Y.Base` extension that provides core autocomplete logic (but no UI</td>
      </tr>
      <tr>
          <td>`autocomplete-filters`</td>
          <td>Provides pre-built result matching filters for AutoComplete.</td>
      </tr>
      <tr>
          <td>`autocomplete-filters-accentfold`</td>
          <td>Provides pre-built accent-folding result matching filters for AutoComplete.</td>
      </tr>
      <tr>
          <td>`autocomplete-highlighters`</td>
          <td>Provides pre-built result highlighters for AutoComplete.</td>
      </tr>
      <tr>
          <td>`autocomplete-highlighters-accentfold`</td>
          <td>Provides pre-built accent-folding result highlighters for AutoComplete.</td>
      </tr>
      <tr>
          <td>`autocomplete-list`</td>
          <td>Traditional autocomplete dropdown list widget, just like Mom used to make.</td>
      </tr>
      <tr>
          <td>`autocomplete-list-keys`</td>
          <td>Mixes keyboard support into AutoCompleteList. By default, this module is not</td>
      </tr>
      <tr>
          <td>`autocomplete-plugin`</td>
          <td>Binds an AutoCompleteList instance to a Node instance.</td>
      </tr>
      <tr>
          <td>`autocomplete-sources`</td>
          <td>Mixes support for JSONP and YQL result sources into AutoCompleteBase.</td>
      </tr>
      <tr>
          <td>`base`</td>
          <td>Alias module for: `base-base, base-pluginhost, base-build`</td>
      </tr>
      <tr>
          <td>`base-base`</td>
          <td>The base-base submodule provides the Base class without the Plugin support, provided by Plugin.Host, </td>
      </tr>
      <tr>
          <td>`base-build`</td>
          <td>The base-build submodule provides Base.build functionality, which</td>
      </tr>
      <tr>
          <td>`base-core`</td>
          <td>The base-core module provides the BaseCore class, the lightest version of Base, </td>
      </tr>
      <tr>
          <td>`base-pluginhost`</td>
          <td>The base-pluginhost submodule adds Plugin support to Base, by augmenting Base with </td>
      </tr>
      <tr>
          <td>`button`</td>
          <td>A Button Widget</td>
      </tr>
      <tr>
          <td>`button-core`</td>
          <td>Provides an interface for working with button-like DOM nodes</td>
      </tr>
      <tr>
          <td>`button-group`</td>
          <td>A Widget to create groups of buttons</td>
      </tr>
      <tr>
          <td>`button-plugin`</td>
          <td>A Button Plugin</td>
      </tr>
      <tr>
          <td>`cache`</td>
          <td>Alias module for: `cache-base, cache-offline, cache-plugin`</td>
      </tr>
      <tr>
          <td>`cache-base`</td>
          <td>Provides the base class for the YUI Cache utility.</td>
      </tr>
      <tr>
          <td>`cache-offline`</td>
          <td>Provides a Cache subclass which uses HTML5 `localStorage` for persistence.</td>
      </tr>
      <tr>
          <td>`cache-plugin`</td>
          <td>Provides support to use Cache as a Plugin to a Base-based class.</td>
      </tr>
      <tr>
          <td>`calendar`</td>
          <td>The Calendar component is a UI widget that allows users</td>
      </tr>
      <tr>
          <td>`calendar-base`</td>
          <td>The CalendarBase submodule is a basic UI calendar view that displays</td>
      </tr>
      <tr>
          <td>`calendarnavigator`</td>
          <td>Provides a plugin which adds navigation controls to Calendar.</td>
      </tr>
      <tr>
          <td>`charts`</td>
          <td>The Charts widget provides an api for displaying data</td>
      </tr>
      <tr>
          <td>`charts-legend`</td>
          <td>Adds legend functionality to charts.</td>
      </tr>
      <tr>
          <td>`classnamemanager`</td>
          <td>Contains a singleton (ClassNameManager) that enables easy creation and caching of </td>
      </tr>
      <tr>
          <td>`clickable-rail`</td>
          <td>Adds support for mouse interaction with the Slider rail triggering thumb</td>
      </tr>
      <tr>
          <td>`collection`</td>
          <td>Alias module for: `array-extras, arraylist, arraylist-add, arraylist-filter, array-invoke`</td>
      </tr>
      <tr>
          <td>`console`</td>
          <td>Console creates a visualization for messages logged through calls to a YUI</td>
      </tr>
      <tr>
          <td>`console-filters`</td>
          <td>Provides Plugin.ConsoleFilters plugin class.</td>
      </tr>
      <tr>
          <td>`cookie`</td>
          <td>Utilities for cookie management</td>
      </tr>
      <tr>
          <td>`createlink-base`</td>
          <td>Adds prompt style link creation. Adds an override for the <a href="Plugin.ExecCommand.html#method_COMMANDS.createlink">createlink execCommand</a>.</td>
      </tr>
      <tr>
          <td>`dataschema`</td>
          <td>Alias module for: `dataschema-base, dataschema-json, dataschema-xml, dataschema-array, dataschema-text`</td>
      </tr>
      <tr>
          <td>`dataschema-array`</td>
          <td>Provides a DataSchema implementation which can be used to work with data</td>
      </tr>
      <tr>
          <td>`dataschema-base`</td>
          <td>Provides the base DataSchema implementation, which can be extended to </td>
      </tr>
      <tr>
          <td>`dataschema-json`</td>
          <td>Provides a DataSchema implementation which can be used to work with JSON data.</td>
      </tr>
      <tr>
          <td>`dataschema-text`</td>
          <td>Provides a DataSchema implementation which can be used to work with</td>
      </tr>
      <tr>
          <td>`dataschema-xml`</td>
          <td>Provides a DataSchema implementation which can be used to work with XML data.</td>
      </tr>
      <tr>
          <td>`datasource`</td>
          <td>Alias module for: `datasource-local, datasource-io, datasource-get, datasource-function, datasource-cache, datasource-jsonschema, datasource-xmlschema, datasource-arrayschema, datasource-textschema, datasource-polling`</td>
      </tr>
      <tr>
          <td>`datasource-arrayschema`</td>
          <td>Extends DataSource with schema-parsing on array data.</td>
      </tr>
      <tr>
          <td>`datasource-cache`</td>
          <td>Plugs DataSource with caching functionality.</td>
      </tr>
      <tr>
          <td>`datasource-function`</td>
          <td>Provides a DataSource implementation which can be used to retrieve data from</td>
      </tr>
      <tr>
          <td>`datasource-get`</td>
          <td>Provides a DataSource implementation which can be used to retrieve data via the Get Utility.</td>
      </tr>
      <tr>
          <td>`datasource-io`</td>
          <td>Provides a DataSource implementation which can be used to retrieve data via the IO Utility.</td>
      </tr>
      <tr>
          <td>`datasource-jsonschema`</td>
          <td>Extends DataSource with schema-parsing on JSON data.</td>
      </tr>
      <tr>
          <td>`datasource-local`</td>
          <td>Provides the base DataSource implementation, which can be extended to</td>
      </tr>
      <tr>
          <td>`datasource-polling`</td>
          <td>Extends DataSource with polling functionality.</td>
      </tr>
      <tr>
          <td>`datasource-textschema`</td>
          <td>Extends DataSource with schema-parsing on text data.</td>
      </tr>
      <tr>
          <td>`datasource-xmlschema`</td>
          <td>Extends DataSource with schema-parsing on XML data.</td>
      </tr>
      <tr>
          <td>`datatable`</td>
          <td>Alias module for: `datatable-core, datatable-table, datatable-head, datatable-body, datatable-base, datatable-column-widths, datatable-message, datatable-mutable, datatable-sort, datatable-datasource`</td>
      </tr>
      <tr>
          <td>`datatable-base`</td>
          <td>A Widget for displaying tabular data.  The base implementation of DataTable</td>
      </tr>
      <tr>
          <td>`datatable-base-deprecated`</td>
          <td>Provides the base DataTable implementation, which can be extended to add</td>
      </tr>
      <tr>
          <td>`datatable-body`</td>
          <td>View class responsible for rendering the `<tbody>` section of a table. Used as</td>
      </tr>
      <tr>
          <td>`datatable-column-widths`</td>
          <td>Adds basic, programmatic column width support to DataTable via column</td>
      </tr>
      <tr>
          <td>`datatable-core`</td>
          <td>The core implementation of the `DataTable` and `DataTable.Base` Widgets.</td>
      </tr>
      <tr>
          <td>`datatable-datasource`</td>
          <td>Plugs DataTable with DataSource integration.</td>
      </tr>
      <tr>
          <td>`datatable-datasource-deprecated`</td>
          <td>Plugs DataTable with DataSource integration.</td>
      </tr>
      <tr>
          <td>`datatable-deprecated`</td>
          <td>Alias module for: `datatable-base-deprecated, datatable-datasource-deprecated, datatable-sort-deprecated, datatable-scroll-deprecated`</td>
      </tr>
      <tr>
          <td>`datatable-head`</td>
          <td>View class responsible for rendering the `<thead>` section of a table. Used as</td>
      </tr>
      <tr>
          <td>`datatable-message`</td>
          <td>Adds support for a message container to appear in the table.  This can be used</td>
      </tr>
      <tr>
          <td>`datatable-mutable`</td>
          <td>Adds mutation convenience methods such as `table.addRow(data)` to `Y.DataTable`. (or other built class).</td>
      </tr>
      <tr>
          <td>`datatable-scroll`</td>
          <td>Adds the ability to make the table rows scrollable while preserving the header</td>
      </tr>
      <tr>
          <td>`datatable-scroll-deprecated`</td>
          <td>Extends DataTable base to enable x,y, and xy scrolling.</td>
      </tr>
      <tr>
          <td>`datatable-sort`</td>
          <td>Adds support for sorting the table data by API methods `table.sort(...)` or</td>
      </tr>
      <tr>
          <td>`datatable-sort-deprecated`</td>
          <td>Plugs DataTable with sorting functionality.</td>
      </tr>
      <tr>
          <td>`datatype`</td>
          <td>Alias module for: `datatype-number, datatype-date, datatype-xml`</td>
      </tr>
      <tr>
          <td>`datatype-date`</td>
          <td>Alias module for: `datatype-date-parse, datatype-date-format`</td>
      </tr>
      <tr>
          <td>`datatype-date-format`</td>
          <td>Format date submodule implements strftime formatters for javascript based on the</td>
      </tr>
      <tr>
          <td>`datatype-date-math`</td>
          <td>Datatype Date Math submodule.</td>
      </tr>
      <tr>
          <td>`datatype-date-parse`</td>
          <td>Parse number submodule.</td>
      </tr>
      <tr>
          <td>`datatype-number`</td>
          <td>Alias module for: `datatype-number-parse, datatype-number-format`</td>
      </tr>
      <tr>
          <td>`datatype-number-format`</td>
          <td>Format number submodule.</td>
      </tr>
      <tr>
          <td>`datatype-number-parse`</td>
          <td>Parse number submodule.</td>
      </tr>
      <tr>
          <td>`datatype-xml`</td>
          <td>Alias module for: `datatype-xml-parse, datatype-xml-format`</td>
      </tr>
      <tr>
          <td>`datatype-xml-format`</td>
          <td>Format XML submodule.</td>
      </tr>
      <tr>
          <td>`datatype-xml-parse`</td>
          <td>Parse XML submodule.</td>
      </tr>
      <tr>
          <td>`dd`</td>
          <td>Alias module for: `dd-ddm-base, dd-ddm, dd-ddm-drop, dd-drag, dd-proxy, dd-constrain, dd-drop, dd-scroll, dd-delegate`</td>
      </tr>
      <tr>
          <td>`dd-constrain`</td>
          <td>The Drag & Drop Utility allows you to create a draggable interface efficiently, buffering you from browser-level abnormalities and enabling you to focus on the interesting logic surrounding your particular implementation. This component enables you to create a variety of standard draggable objects with just a few lines of code and then, using its extensive API, add your own specific implementation logic.</td>
      </tr>
      <tr>
          <td>`dd-ddm`</td>
          <td>Extends the dd-ddm-base Class to add support for the viewport shim to allow a draggable node to drag to be dragged over an iframe or any other node that traps mousemove events.</td>
      </tr>
      <tr>
          <td>`dd-ddm-base`</td>
          <td>Provides the base Drag Drop Manger required for making a Node draggable.</td>
      </tr>
      <tr>
          <td>`dd-ddm-drop`</td>
          <td>Extends the dd-ddm Class to add support for the placement of Drop Target shims inside the viewport shim. It also handles all Drop Target related events and interactions.</td>
      </tr>
      <tr>
          <td>`dd-delegate`</td>
          <td>Provides the ability to drag multiple nodes under a container element using only one Y.DD.Drag instance as a delegate.</td>
      </tr>
      <tr>
          <td>`dd-drag`</td>
          <td>Provides the ability to drag a Node.</td>
      </tr>
      <tr>
          <td>`dd-drop`</td>
          <td>Provides the ability to create a Drop Target.</td>
      </tr>
      <tr>
          <td>`dd-drop-plugin`</td>
          <td>Simple Drop plugin that can be attached to a Node via the plug method.</td>
      </tr>
      <tr>
          <td>`dd-gestures`</td>
          <td>This module is the conditional loaded `dd` module to support gesture events</td>
      </tr>
      <tr>
          <td>`dd-plugin`</td>
          <td>Simple Drag plugin that can be attached to a Node or Widget via the plug method.</td>
      </tr>
      <tr>
          <td>`dd-proxy`</td>
          <td>Plugin for dd-drag for creating a proxy drag node, instead of dragging the original node.</td>
      </tr>
      <tr>
          <td>`dd-scroll`</td>
          <td>Base scroller class used to create the Plugin.DDNodeScroll and Plugin.DDWinScroll.</td>
      </tr>
      <tr>
          <td>`dial`</td>
          <td>Create a circular dial value range input visualized as a draggable handle on a</td>
      </tr>
      <tr>
          <td>`dom`</td>
          <td>Alias module for: `dom-base, dom-screen, dom-style, selector-native, selector`</td>
      </tr>
      <tr>
          <td>`dom-base`</td>
          <td>The DOM utility provides a cross-browser abtraction layer</td>
      </tr>
      <tr>
          <td>`dom-screen`</td>
          <td>Adds position and region management functionality to DOM.</td>
      </tr>
      <tr>
          <td>`dom-style`</td>
          <td>Add style management functionality to DOM.</td>
      </tr>
      <tr>
          <td>`dump`</td>
          <td>Returns a simple string representation of the object or array.</td>
      </tr>
      <tr>
          <td>`editor`</td>
          <td>Alias module for: `frame, editor-selection, exec-command, editor-base, editor-para, editor-br, editor-bidi, editor-tab, createlink-base`</td>
      </tr>
      <tr>
          <td>`editor-base`</td>
          <td>Base class for Editor. Handles the business logic of Editor, no GUI involved only utility methods and events.</td>
      </tr>
      <tr>
          <td>`editor-bidi`</td>
          <td>Plugin for Editor to support BiDirectional (bidi) text operations.</td>
      </tr>
      <tr>
          <td>`editor-br`</td>
          <td>Plugin for Editor to normalize BR's.</td>
      </tr>
      <tr>
          <td>`editor-lists`</td>
          <td>Handles list manipulation inside the Editor. Adds keyboard manipulation and execCommand support. Adds overrides for the <a href="Plugin.ExecCommand.html#method_COMMANDS.insertorderedlist">insertorderedlist</a> and <a href="Plugin.ExecCommand.html#method_COMMANDS.insertunorderedlist">insertunorderedlist</a> execCommands.</td>
      </tr>
      <tr>
          <td>`editor-para`</td>
          <td>Plugin for Editor to paragraph auto wrapping and correction.</td>
      </tr>
      <tr>
          <td>`editor-para-base`</td>
          <td>Base Plugin for Editor to paragraph auto wrapping and correction.</td>
      </tr>
      <tr>
          <td>`editor-para-ie`</td>
          <td>Extends EditorParaBase with IE support</td>
      </tr>
      <tr>
          <td>`editor-tab`</td>
          <td>Handles tab and shift-tab indent/outdent support.</td>
      </tr>
      <tr>
          <td>`escape`</td>
          <td>Provides utility methods for escaping strings.</td>
      </tr>
      <tr>
          <td>`event`</td>
          <td>Alias module for: `event-base, event-delegate, event-synthetic, event-mousewheel, event-mouseenter, event-key, event-focus, event-resize, event-hover, event-outside, event-touch, event-move, event-flick, event-valuechange`</td>
      </tr>
      <tr>
          <td>`event-base`</td>
          <td>DOM event listener abstraction layer</td>
      </tr>
      <tr>
          <td>`event-contextmenu`</td>
          <td>Provides extended keyboard support for the "contextmenu" event such that:</td>
      </tr>
      <tr>
          <td>`event-custom`</td>
          <td>Alias module for: `event-custom-base, event-custom-complex`</td>
      </tr>
      <tr>
          <td>`event-custom-base`</td>
          <td>Custom event engine, DOM event listener abstraction layer, synthetic DOM</td>
      </tr>
      <tr>
          <td>`event-custom-complex`</td>
          <td>Adds event facades, preventable default behavior, and bubbling.</td>
      </tr>
      <tr>
          <td>`event-delegate`</td>
          <td>Adds event delegation support to the library.</td>
      </tr>
      <tr>
          <td>`event-flick`</td>
          <td>Adds support for a "flick" event, which is fired at the end of a touch or mouse based flick gesture, and provides </td>
      </tr>
      <tr>
          <td>`event-focus`</td>
          <td>Adds bubbling and delegation support to DOM events focus and blur.</td>
      </tr>
      <tr>
          <td>`event-gestures`</td>
          <td>Alias module for: `event-flick, event-move`</td>
      </tr>
      <tr>
          <td>`event-hover`</td>
          <td>Adds support for a "hover" event.  The event provides a convenience wrapper</td>
      </tr>
      <tr>
          <td>`event-key`</td>
          <td>Functionality to listen for one or more specific key combinations.</td>
      </tr>
      <tr>
          <td>`event-mouseenter`</td>
          <td>Adds subscription and delegation support for mouseenter and mouseleave</td>
      </tr>
      <tr>
          <td>`event-mousewheel`</td>
          <td>Adds mousewheel event support</td>
      </tr>
      <tr>
          <td>`event-move`</td>
          <td>Adds lower level support for "gesturemovestart", "gesturemove" and "gesturemoveend" events, which can be used to create drag/drop</td>
      </tr>
      <tr>
          <td>`event-outside`</td>
          <td>Outside events are synthetic DOM events that fire when a corresponding native</td>
      </tr>
      <tr>
          <td>`event-resize`</td>
          <td>Adds a window resize event that has its behavior normalized to fire at the</td>
      </tr>
      <tr>
          <td>`event-simulate`</td>
          <td>Simulate user interaction by generating native DOM events.</td>
      </tr>
      <tr>
          <td>`event-synthetic`</td>
          <td>Define new DOM events that can be subscribed to from Nodes.</td>
      </tr>
      <tr>
          <td>`event-touch`</td>
          <td>Adds touch event facade normalization properties (touches, changedTouches, targetTouches etc.) to the DOM event facade</td>
      </tr>
      <tr>
          <td>`event-valuechange`</td>
          <td>Adds a synthetic `valueChange` event that fires when the `value` property of an</td>
      </tr>
      <tr>
          <td>`exec-command`</td>
          <td>Plugin for the frame module to handle execCommands for Editor</td>
      </tr>
      <tr>
          <td>`features`</td>
          <td>Contains the core of YUI's feature test architecture.</td>
      </tr>
      <tr>
          <td>`file`</td>
          <td>The File class provides a wrapper for a file pointer, either through an HTML5 </td>
      </tr>
      <tr>
          <td>`file-flash`</td>
          <td>The FileFlash class provides a wrapper for a file pointer stored in Flash. The File wrapper </td>
      </tr>
      <tr>
          <td>`file-html5`</td>
          <td>The FileHTML5 class provides a wrapper for a file pointer in an HTML5 The File wrapper </td>
      </tr>
      <tr>
          <td>`frame`</td>
          <td>Creates a wrapper around an iframe. It loads the content either from a local</td>
      </tr>
      <tr>
          <td>`get`</td>
          <td>Provides dynamic loading of remote JavaScript and CSS resources.</td>
      </tr>
      <tr>
          <td>`get-nodejs`</td>
          <td>NodeJS specific Get module used to load remote resources. It contains the same signature as the default Get module so there is no code change needed.</td>
      </tr>
      <tr>
          <td>`graphics`</td>
          <td>The `Graphics` module provides a JavaScript API for creating shapes in a variety of formats across </td>
      </tr>
      <tr>
          <td>`handlebars`</td>
          <td>Alias module for: `handlebars-compiler`</td>
      </tr>
      <tr>
          <td>`handlebars-base`</td>
          <td>Provides basic Handlebars template rendering functionality. Use this module when</td>
      </tr>
      <tr>
          <td>`handlebars-compiler`</td>
          <td>Handlebars parser and compiler. Use this module when you need to compile</td>
      </tr>
      <tr>
          <td>`highlight`</td>
          <td>Alias module for: `highlight-base, highlight-accentfold`</td>
      </tr>
      <tr>
          <td>`highlight-accentfold`</td>
          <td>Adds accent-folding highlighters to `Y.Highlight`.</td>
      </tr>
      <tr>
          <td>`highlight-base`</td>
          <td>Provides methods for highlighting strings within other strings by wrapping</td>
      </tr>
      <tr>
          <td>`history`</td>
          <td>Alias module for: `history-base, history-hash, history-hash-ie, history-html5`</td>
      </tr>
      <tr>
          <td>`history-base`</td>
          <td>Provides global state management backed by an object, but with no browser</td>
      </tr>
      <tr>
          <td>`history-hash`</td>
          <td>Provides browser history management backed by</td>
      </tr>
      <tr>
          <td>`history-hash-ie`</td>
          <td>Improves IE6/7 support in history-hash by using a hidden iframe to create</td>
      </tr>
      <tr>
          <td>`history-html5`</td>
          <td>Provides browser history management using the HTML5 history API.</td>
      </tr>
      <tr>
          <td>`imageloader`</td>
          <td>The ImageLoader Utility is a framework to dynamically load images according to certain triggers,</td>
      </tr>
      <tr>
          <td>`intl`</td>
          <td>Provides utilities to support the management of localized resources (strings and formatting patterns).</td>
      </tr>
      <tr>
          <td>`io`</td>
          <td>Alias module for: `io-base, io-xdr, io-form, io-upload-iframe, io-queue`</td>
      </tr>
      <tr>
          <td>`io-base`</td>
          <td>Base IO functionality. Provides basic XHR transport support.</td>
      </tr>
      <tr>
          <td>`io-form`</td>
          <td>Extends IO to enable HTML form data serialization, when specified</td>
      </tr>
      <tr>
          <td>`io-queue`</td>
          <td>Extends IO to implement Queue for synchronous</td>
      </tr>
      <tr>
          <td>`io-upload-iframe`</td>
          <td>Extends the IO  to enable file uploads, with HTML forms </td>
      </tr>
      <tr>
          <td>`io-xdr`</td>
          <td>Extends IO to provide an alternate, Flash transport, for making</td>
      </tr>
      <tr>
          <td>`json`</td>
          <td>Alias module for: `json-parse, json-stringify`</td>
      </tr>
      <tr>
          <td>`json-parse`</td>
          <td>Provides Y.JSON.parse method to accept JSON strings and return native</td>
      </tr>
      <tr>
          <td>`json-stringify`</td>
          <td>Provides Y.JSON.stringify method for converting objects to JSON strings.</td>
      </tr>
      <tr>
          <td>`jsonp`</td>
          <td>Provides a JSONPRequest class for repeated JSONP calls, and a convenience</td>
      </tr>
      <tr>
          <td>`jsonp-url`</td>
          <td>Adds support for parsing complex callback identifiers from the jsonp url.</td>
      </tr>
      <tr>
          <td>`loader`</td>
          <td>Alias module for: `loader-base, loader-rollup, loader-yui3`</td>
      </tr>
      <tr>
          <td>`loader-base`</td>
          <td>Loader dynamically loads script and css files.  It includes the dependency</td>
      </tr>
      <tr>
          <td>`matrix`</td>
          <td>Matrix is a class that allows for the manipulation of a transform matrix.</td>
      </tr>
      <tr>
          <td>`model`</td>
          <td>Attribute-based data model with APIs for getting, setting, validating, and</td>
      </tr>
      <tr>
          <td>`model-list`</td>
          <td>Provides an API for managing an ordered list of Model instances.</td>
      </tr>
      <tr>
          <td>`node`</td>
          <td>Alias module for: `node-base, node-event-delegate, node-pluginhost, node-screen, node-style`</td>
      </tr>
      <tr>
          <td>`node-base`</td>
          <td></td>
      </tr>
      <tr>
          <td>`node-core`</td>
          <td>The Node Utility provides a DOM-like interface for interacting with DOM nodes.</td>
      </tr>
      <tr>
          <td>`node-data`</td>
          <td>Provides methods for managing custom Node data.</td>
      </tr>
      <tr>
          <td>`node-deprecated`</td>
          <td></td>
      </tr>
      <tr>
          <td>`node-event-delegate`</td>
          <td>Functionality to make the node a delegated event container</td>
      </tr>
      <tr>
          <td>`node-event-html5`</td>
          <td>Adds HTML5 event support to Node.</td>
      </tr>
      <tr>
          <td>`node-event-simulate`</td>
          <td>Adds functionality to simulate events.</td>
      </tr>
      <tr>
          <td>`node-flick`</td>
          <td>Provide a simple Flick plugin, which can be used along with the "flick" gesture event, to </td>
      </tr>
      <tr>
          <td>`node-focusmanager`</td>
          <td>The Focus Manager Node Plugin makes it easy to manage focus among</td>
      </tr>
      <tr>
          <td>`node-load`</td>
          <td>Extended Node interface with a basic IO API.</td>
      </tr>
      <tr>
          <td>`node-menunav`</td>
          <td>The MenuNav Node Plugin makes it easy to transform existing list-based </td>
      </tr>
      <tr>
          <td>`node-pluginhost`</td>
          <td></td>
      </tr>
      <tr>
          <td>`node-screen`</td>
          <td>Extended Node interface for managing regions and screen positioning.</td>
      </tr>
      <tr>
          <td>`node-style`</td>
          <td>Extended Node interface for managing node styles.</td>
      </tr>
      <tr>
          <td>`oop`</td>
          <td>Adds object inheritance and manipulation utilities to the YUI instance. This</td>
      </tr>
      <tr>
          <td>`overlay`</td>
          <td>Provides a basic Overlay widget, with Standard Module content support. The Overlay widget</td>
      </tr>
      <tr>
          <td>`panel`</td>
          <td>Provides a Panel widget, a widget that mimics the functionality of a regular OS</td>
      </tr>
      <tr>
          <td>`parallel`</td>
          <td>A concurrent parallel processor to help in running several async functions.</td>
      </tr>
      <tr>
          <td>`pjax`</td>
          <td>Provides seamless, gracefully degrading Pjax (pushState + Ajax) functionality,</td>
      </tr>
      <tr>
          <td>`pjax-base`</td>
          <td>`Y.Router` extension that provides the core plumbing for enhanced navigation</td>
      </tr>
      <tr>
          <td>`pjax-plugin`</td>
          <td>Node plugin that provides seamless, gracefully degrading pjax functionality.</td>
      </tr>
      <tr>
          <td>`plugin`</td>
          <td>Provides the base Plugin class, which plugin developers should extend, when creating custom plugins</td>
      </tr>
      <tr>
          <td>`pluginhost`</td>
          <td>Alias module for: `pluginhost-base, pluginhost-config`</td>
      </tr>
      <tr>
          <td>`pluginhost-base`</td>
          <td>Provides the augmentable PluginHost interface, which can be added to any class.</td>
      </tr>
      <tr>
          <td>`pluginhost-config`</td>
          <td>Adds pluginhost constructor configuration and static configuration support</td>
      </tr>
      <tr>
          <td>`profiler`</td>
          <td>The YUI JavaScript profiler.</td>
      </tr>
      <tr>
          <td>`querystring`</td>
          <td>Alias module for: `querystring-parse, querystring-stringify`</td>
      </tr>
      <tr>
          <td>`querystring-parse`</td>
          <td>Provides Y.QueryString.parse method to accept Query Strings and return native</td>
      </tr>
      <tr>
          <td>`querystring-parse-simple`</td>
          <td>Provides Y.QueryString.stringify method for converting objects to Query Strings.</td>
      </tr>
      <tr>
          <td>`querystring-stringify`</td>
          <td>Provides Y.QueryString.stringify method for converting objects to Query Strings.</td>
      </tr>
      <tr>
          <td>`querystring-stringify-simple`</td>
          <td>Provides Y.QueryString.stringify method for converting objects to Query Strings.</td>
      </tr>
      <tr>
          <td>`queue-promote`</td>
          <td>Adds methods promote, remove, and indexOf to Queue instances.</td>
      </tr>
      <tr>
          <td>`range-slider`</td>
          <td>Create a sliding value range input visualized as a draggable thumb on a</td>
      </tr>
      <tr>
          <td>`recordset`</td>
          <td>Alias module for: `recordset-base, recordset-sort, recordset-filter, recordset-indexer`</td>
      </tr>
      <tr>
          <td>`recordset-base`</td>
          <td>The Recordset utility provides a standard way for dealing with</td>
      </tr>
      <tr>
          <td>`recordset-filter`</td>
          <td>Plugin that provides the ability to filter through a recordset.</td>
      </tr>
      <tr>
          <td>`recordset-indexer`</td>
          <td>Provides the ability to store multiple custom hash tables referencing records in the recordset.</td>
      </tr>
      <tr>
          <td>`recordset-sort`</td>
          <td>Adds default and custom sorting functionality to the Recordset utility</td>
      </tr>
      <tr>
          <td>`resize`</td>
          <td>Alias module for: `resize-base, resize-proxy, resize-constrain`</td>
      </tr>
      <tr>
          <td>`resize-contrain`</td>
          <td>A Resize plugin that will attempt to constrain the resize node to the boundaries.</td>
      </tr>
      <tr>
          <td>`resize-plugin`</td>
          <td>The Resize Plugin allows you to make a Node or a Widget resizable. It supports all the functionality of</td>
      </tr>
      <tr>
          <td>`resize-proxy`</td>
          <td>Adds a `proxyNode` attribute and resizes it instead of the actual node. __very similar to DDProxy__</td>
      </tr>
      <tr>
          <td>`rollup`</td>
          <td>Optional automatic rollup logic for reducing http connections</td>
      </tr>
      <tr>
          <td>`router`</td>
          <td>Provides URL-based routing using HTML5 `pushState()` or the location hash.</td>
      </tr>
      <tr>
          <td>`scrollview`</td>
          <td></td>
      </tr>
      <tr>
          <td>`scrollview-base`</td>
          <td>The scrollview-base module provides a basic ScrollView Widget, without scrollbar indicators</td>
      </tr>
      <tr>
          <td>`scrollview-base-ie`</td>
          <td>IE specific support for the scrollview-base module.</td>
      </tr>
      <tr>
          <td>`scrollview-list`</td>
          <td>Provides a plugin, which adds support for a scroll indicator to ScrollView instances</td>
      </tr>
      <tr>
          <td>`scrollview-paginator`</td>
          <td>Provides a plugin, which adds pagination support to ScrollView instances</td>
      </tr>
      <tr>
          <td>`scrollview-scrollbars`</td>
          <td>Provides a plugin, which adds support for a scroll indicator to ScrollView instances</td>
      </tr>
      <tr>
          <td>`selection`</td>
          <td>Wraps some common Selection/Range functionality into a simple object</td>
      </tr>
      <tr>
          <td>`selector-css2`</td>
          <td>The selector module provides helper methods allowing CSS2 Selectors to be used with DOM elements.</td>
      </tr>
      <tr>
          <td>`selector-css3`</td>
          <td>The selector css3 module provides support for css3 selectors.</td>
      </tr>
      <tr>
          <td>`selector-native`</td>
          <td>The selector-native module provides support for native querySelector</td>
      </tr>
      <tr>
          <td>`shim-plugin`</td>
          <td>Provides shimming support for Node via a Plugin.</td>
      </tr>
      <tr>
          <td>`slider`</td>
          <td>Alias module for: `slider-base, slider-value-range, clickable-rail, range-slider`</td>
      </tr>
      <tr>
          <td>`slider-base`</td>
          <td>Create a sliding value range input visualized as a draggable thumb on a</td>
      </tr>
      <tr>
          <td>`slider-value-range`</td>
          <td>Adds value support for Slider as a range of integers between a configured</td>
      </tr>
      <tr>
          <td>`sortable`</td>
          <td>The class allows you to create a Drag & Drop reordered list.</td>
      </tr>
      <tr>
          <td>`sortable-scroll`</td>
          <td>Plugin for sortable to handle scrolling lists.</td>
      </tr>
      <tr>
          <td>`stylesheet`</td>
          <td>The StyleSheet component is a module for creating and modifying CSS</td>
      </tr>
      <tr>
          <td>`substitute`</td>
          <td>String variable substitution and string formatting.</td>
      </tr>
      <tr>
          <td>`swf`</td>
          <td>Embed a Flash applications in a standard manner and communicate with it</td>
      </tr>
      <tr>
          <td>`swfdetect`</td>
          <td>Utility for Flash version detection</td>
      </tr>
      <tr>
          <td>`tabview`</td>
          <td>The TabView module</td>
      </tr>
      <tr>
          <td>`test`</td>
          <td>YUI Test Framework</td>
      </tr>
      <tr>
          <td>`test-console`</td>
          <td>Provides a specialized log console widget that's pre-configured to display YUI</td>
      </tr>
      <tr>
          <td>`text`</td>
          <td>Alias module for: `text-accentfold, text-wordbreak`</td>
      </tr>
      <tr>
          <td>`text-accentfold`</td>
          <td>Provides a basic accent folding implementation that converts common accented</td>
      </tr>
      <tr>
          <td>`text-wordbreak`</td>
          <td>Provides utility methods for splitting strings on word breaks and determining</td>
      </tr>
      <tr>
          <td>`transition`</td>
          <td>Provides the transition method for Node.</td>
      </tr>
      <tr>
          <td>`uploader`</td>
          <td>Provides UI for selecting multiple files and functionality for </td>
      </tr>
      <tr>
          <td>`uploader-deprecated`</td>
          <td>Attention: this is the 3.4.1 `uploader` module has been deprecated in favor of a new </td>
      </tr>
      <tr>
          <td>`uploader-flash`</td>
          <td>This module provides a UI for file selection and multiple file upload capability using</td>
      </tr>
      <tr>
          <td>`uploader-html5`</td>
          <td>This module provides a UI for file selection and multiple file upload capability using</td>
      </tr>
      <tr>
          <td>`uploader-queue`</td>
          <td>The class manages a queue of files that should be uploaded to the server.</td>
      </tr>
      <tr>
          <td>`view`</td>
          <td>Represents a logical piece of an application's user interface, and provides a</td>
      </tr>
      <tr>
          <td>`view-node-map`</td>
          <td>View extension that adds a static `getByNode()` method that returns the nearest</td>
      </tr>
      <tr>
          <td>`widget`</td>
          <td>Alias module for: `widget-base, widget-htmlparser, widget-skin, widget-uievents`</td>
      </tr>
      <tr>
          <td>`widget-anim`</td>
          <td>Provides a plugin which can be used to animate widget visibility changes.</td>
      </tr>
      <tr>
          <td>`widget-autohide`</td>
          <td>A widget-level extension that provides ability to hide widget when</td>
      </tr>
      <tr>
          <td>`widget-base`</td>
          <td>Provides the base Widget class</td>
      </tr>
      <tr>
          <td>`widget-base-ie`</td>
          <td>IE specific support for the widget-base module.</td>
      </tr>
      <tr>
          <td>`widget-buttons`</td>
          <td>Provides header/body/footer button support for Widgets that use the</td>
      </tr>
      <tr>
          <td>`widget-child`</td>
          <td>Extension enabling a Widget to be a child of another Widget.</td>
      </tr>
      <tr>
          <td>`widget-htmlparser`</td>
          <td>Adds HTML Parser support to the base Widget class</td>
      </tr>
      <tr>
          <td>`widget-locale`</td>
          <td>Provides string support for widget with BCP 47 language tag lookup. This module has been deprecated. It's replaced by the "intl" module which provides generic internationalization and BCP 47 language tag support with externalization.</td>
      </tr>
      <tr>
          <td>`widget-modality`</td>
          <td>Provides modality support for Widgets, though an extension</td>
      </tr>
      <tr>
          <td>`widget-parent`</td>
          <td>Extension enabling a Widget to be a parent of another Widget.</td>
      </tr>
      <tr>
          <td>`widget-position`</td>
          <td>Provides basic XY positioning support for Widgets, though an extension</td>
      </tr>
      <tr>
          <td>`widget-position-align`</td>
          <td>Provides extended/advanced XY positioning support for Widgets, through an</td>
      </tr>
      <tr>
          <td>`widget-position-constrain`</td>
          <td>Provides constrained xy positioning support for Widgets, through an extension.</td>
      </tr>
      <tr>
          <td>`widget-skin`</td>
          <td>Provides skin related utlility methods.</td>
      </tr>
      <tr>
          <td>`widget-stack`</td>
          <td>Provides stackable (z-index) support for Widgets through an extension.</td>
      </tr>
      <tr>
          <td>`widget-stdmod`</td>
          <td>Provides standard module support for Widgets through an extension.</td>
      </tr>
      <tr>
          <td>`widget-uievents`</td>
          <td>Support for Widget UI Events (Custom Events fired by the widget, which wrap the underlying DOM events - e.g. widget:click, widget:mousedown)</td>
      </tr>
      <tr>
          <td>`yql`</td>
          <td>This class adds a sugar class to allow access to YQL (http://developer.yahoo.com/yql/).</td>
      </tr>
      <tr>
          <td>`yui`</td>
          <td>The YUI module contains the components required for building the YUI seed</td>
      </tr>
      <tr>
          <td>`yui-base`</td>
          <td>The YUI module contains the components required for building the</td>
      </tr>
      <tr>
          <td>`yui-later`</td>
          <td>Provides a setTimeout/setInterval wrapper. This module is a `core` YUI module, <a href="../classes/YUI.html#method_later">it's documentation is located under the YUI class</a>.</td>
      </tr>
      <tr>
          <td>`yui-log`</td>
          <td>Provides console log capability and exposes a custom event for</td>
      </tr>
      <tr>
          <td>`yui-throttle`</td>
          <td>Throttles a call to a method based on the time between calls. This method is attached</td>
      </tr>
      <tr>
          <td>`yui3`</td>
          <td>YUI 3 module metadata</td>
      </tr>
  </tbody>
</table>